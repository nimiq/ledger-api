{"version":3,"file":"lazy-chunk-request-get-public-key-nimiq.es.js","sources":["source-mapped://source-mapped/src/high-level-api/requests/nimiq/request-get-public-key-nimiq.ts"],"sourcesContent":["import RequestWithKeyPathNimiq from './request-with-key-path-nimiq';\nimport { RequestTypeNimiq } from '../../constants';\n\ntype Transport = import('@ledgerhq/hw-transport').default;\ntype PublicKey = import('@nimiq/core-web').PublicKey;\n\nexport default class RequestGetPublicKeyNimiq extends RequestWithKeyPathNimiq<PublicKey> {\n    public readonly type: RequestTypeNimiq.GET_PUBLIC_KEY;\n\n    constructor(keyPath: string, expectedWalletId?: string) {\n        const type = RequestTypeNimiq.GET_PUBLIC_KEY;\n        super(keyPath, expectedWalletId, { type });\n        this.type = type;\n\n        // Preload Nimiq lib. Ledger Nimiq api is already preloaded by parent class. Ignore errors.\n        this._loadNimiq().catch(() => {});\n    }\n\n    public async call(transport: Transport): Promise<PublicKey> {\n        const api = await this._getLowLevelApi(transport); // throws LOADING_DEPENDENCIES_FAILED on failure\n        const { publicKey } = await api.getPublicKey(\n            this.keyPath,\n            true, // validate\n            false, // display\n        );\n\n        const Nimiq = await this._loadNimiq(); // throws LOADING_DEPENDENCIES_FAILED on failure\n\n        return new Nimiq.PublicKey(publicKey);\n    }\n}\n"],"names":[],"mappings":";;;;;MAMqB,wBAAyB,SAAQ,uBAAkC;IAGpF,YAAY,OAAe,EAAE,gBAAyB;QAClD,MAAM,IAAI,GAAG,gBAAgB,CAAC,cAAc,CAAC;QAC7C,KAAK,CAAC,OAAO,EAAE,gBAAgB,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;QAGjB,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,SAAQ,CAAC,CAAC;KACrC;IAEM,MAAM,IAAI,CAAC,SAAoB;QAClC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAClD,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,GAAG,CAAC,YAAY,CACxC,IAAI,CAAC,OAAO,EACZ,IAAI;QACJ,KAAK,CACR,CAAC;QAEF,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;QAEtC,OAAO,IAAI,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;KACzC;;;;;"}