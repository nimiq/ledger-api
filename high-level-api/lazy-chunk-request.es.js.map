{"version":3,"file":"lazy-chunk-request.es.js","sources":["source-mapped://source-mapped/src/high-level-api/ledger-utils.ts","source-mapped://source-mapped/src/high-level-api/requests/request.ts"],"sourcesContent":["type Transport = import('@ledgerhq/hw-transport').default;\n\n// Also see https://github.com/LedgerHQ/ledgerjs/issues/365 for other requests which might be interesting.\n\nexport async function getAppAndVersion(transport: Transport, scrambleKey: string)\n    : Promise<{ name: string, version: string }> {\n    // Taken from @ledgerhq/hw-app-btc/getAppAndVersion.js. We don't import it directly from there to avoid loading its\n    // unnecessary dependencies. Also we left out reading the flags we don't need and decorate the api method manually.\n    // Note that this request is common to all apps and the dashboard and is no Bitcoin app specific request (it's not\n    // on https://github.com/LedgerHQ/app-bitcoin/blob/master/doc/btc.asc and mind the different cla). However, for u2f\n    // and WebAuthn the used scramble key must match the one of the connected app for the Ledger to answer the request.\n    const getAppAndVersionApi = {\n        async getAppAndVersion() {\n            const response = await transport.send(0xb0, 0x01, 0x00, 0x00);\n            let offset = 0;\n            const format = response[offset++];\n            if (format !== 1) throw new Error('Unsupported format');\n            const nameLength = response[offset++];\n            const name = response.slice(offset, (offset += nameLength)).toString('ascii');\n            const versionLength = response[offset++];\n            const version = response.slice(offset, (offset += versionLength)).toString('ascii');\n            return { name, version };\n        },\n    };\n    // Takes care of setting the api lock (for ledger busy errors) and scramble key.\n    transport.decorateAppAPIMethods(getAppAndVersionApi, ['getAppAndVersion'], scrambleKey);\n    return getAppAndVersionApi.getAppAndVersion();\n}\n","import { Coin, RequestTypeNimiq, RequestTypeBitcoin, REQUEST_EVENT_CANCEL } from '../constants';\nimport { getAppAndVersion } from '../ledger-utils';\nimport ErrorState, { ErrorType } from '../error-state';\nimport Observable, { EventListener } from '../../lib/observable';\n\ntype Transport = import('@ledgerhq/hw-transport').default;\ntype RequestType = RequestTypeNimiq | RequestTypeBitcoin;\n\nexport interface CoinAppConnection {\n    coin: Coin;\n    app: string;\n    appVersion: string;\n    walletId?: string;\n}\n\nexport default abstract class Request<T> extends Observable {\n    public static readonly EVENT_CANCEL = REQUEST_EVENT_CANCEL;\n\n    // Abstract properties here are constants specific for a request type or coin. They are not passed as constructor\n    // parameters but set by child class as properties to be usable as typescript type guards for inferring a request's\n    // type. Enables accessing request specific properties after a type guard, for example accessing expectedAddress in\n    // `if (request.type === RequestTypeNimiq.GET_ADDRESS) console.log(request.expectedAddress);`\n    public abstract readonly coin: Coin;\n    public abstract readonly type: RequestType;\n    public abstract readonly requiredApp: string;\n    public abstract readonly minRequiredAppVersion: string;\n    public readonly expectedWalletId?: string;\n\n    private _cancelled: boolean = false;\n\n    protected static _isAppVersionSupported(versionString: string, minRequiredVersion: string): boolean {\n        const version = versionString.split('.').map((part) => parseInt(part, 10));\n        const parsedMinRequiredVersion = minRequiredVersion.split('.').map((part) => parseInt(part, 10));\n        for (let i = 0; i < minRequiredVersion.length; ++i) {\n            if (typeof version[i] === 'undefined' || version[i] < parsedMinRequiredVersion[i]) return false;\n            if (version[i] > parsedMinRequiredVersion[i]) return true;\n        }\n        return true;\n    }\n\n    protected constructor(expectedWalletId?: string) {\n        super();\n        this.expectedWalletId = expectedWalletId;\n    }\n\n    public get cancelled(): boolean {\n        return this._cancelled;\n    }\n\n    public abstract async call(transport: Transport): Promise<T>;\n\n    public canReuseCoinAppConnection(coinAppConnection: CoinAppConnection): boolean {\n        return coinAppConnection.coin === this.coin\n            && coinAppConnection.app === this.requiredApp\n            && Request._isAppVersionSupported(coinAppConnection.appVersion, this.minRequiredAppVersion)\n            && (!this.expectedWalletId || coinAppConnection.walletId === this.expectedWalletId);\n    }\n\n    public cancel(): void {\n        if (this._cancelled) return;\n        this._cancelled = true;\n        this.fire(Request.EVENT_CANCEL);\n    }\n\n    public on(type: string, callback: EventListener): void {\n        if (type === Request.EVENT_CANCEL && this._cancelled) {\n            // trigger callback directly\n            callback();\n        }\n        super.on(type, callback);\n    }\n\n    protected async checkCoinAppConnection(transport: Transport, scrambleKey: string): Promise<CoinAppConnection> {\n        const { name: app, version: appVersion } = await getAppAndVersion(transport, scrambleKey);\n        if (app !== this.requiredApp) {\n            throw new ErrorState(\n                ErrorType.WRONG_APP,\n                `Wrong app connected: ${app}, required: ${this.requiredApp}`,\n                this,\n            );\n        }\n        if (!Request._isAppVersionSupported(appVersion, this.minRequiredAppVersion)) {\n            throw new ErrorState(\n                ErrorType.APP_OUTDATED,\n                `Ledger ${app} app is outdated: ${appVersion}, required: ${this.minRequiredAppVersion}`,\n                this,\n            );\n        }\n\n        return { coin: this.coin, app, appVersion };\n    }\n\n    protected get _isWalletIdDerivationRequired() {\n        return !!this.expectedWalletId;\n    }\n\n    protected _checkExpectedWalletId(walletId: string): void {\n        if (this.expectedWalletId === undefined || this.expectedWalletId === walletId) return;\n        throw new ErrorState(ErrorType.WRONG_WALLET, 'Wrong wallet or Ledger connected', this);\n    }\n}\n"],"names":[],"mappings":"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"}