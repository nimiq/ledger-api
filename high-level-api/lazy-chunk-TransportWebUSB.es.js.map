{"version":3,"file":"lazy-chunk-TransportWebUSB.es.js","sources":["source-mapped://source-mapped/node_modules/@ledgerhq/hw-transport-webusb/src/webusb.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-transport-webusb/src/TransportWebUSB.js"],"sourcesContent":["// @flow\nimport { ledgerUSBVendorId } from \"@ledgerhq/devices\";\n\nconst ledgerDevices = [{ vendorId: ledgerUSBVendorId }];\n\nexport async function requestLedgerDevice(): Promise<USBDevice> {\n  // $FlowFixMe\n  const device = await navigator.usb.requestDevice({ filters: ledgerDevices });\n  return device;\n}\n\nexport async function getLedgerDevices(): Promise<USBDevice[]> {\n  // $FlowFixMe\n  const devices = await navigator.usb.getDevices();\n  return devices.filter(d => d.vendorId === ledgerUSBVendorId);\n}\n\nexport async function getFirstLedgerDevice(): Promise<USBDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  return requestLedgerDevice();\n}\n\nexport const isSupported = (): Promise<boolean> =>\n  Promise.resolve(\n    !!navigator &&\n      // $FlowFixMe\n      !!navigator.usb &&\n      typeof navigator.usb.getDevices === \"function\"\n  );\n","//@flow\nimport Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  TransportInterfaceNotAvailable,\n  TransportWebUSBGestureRequired,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice\n} from \"@ledgerhq/errors\";\nimport {\n  getLedgerDevices,\n  getFirstLedgerDevice,\n  requestLedgerDevice,\n  isSupported\n} from \"./webusb\";\n\nconst configurationValue = 1;\nconst endpointNumber = 3;\n\n/**\n * WebUSB Transport implementation\n * @example\n * import TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\n * ...\n * TransportWebUSB.create().then(transport => ...)\n */\nexport default class TransportWebUSB extends Transport<USBDevice> {\n  device: USBDevice;\n  deviceModel: ?DeviceModel;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n  interfaceNumber: number;\n\n  constructor(device: USBDevice, interfaceNumber: number) {\n    super();\n    this.device = device;\n    this.interfaceNumber = interfaceNumber;\n    this.deviceModel = identifyUSBProductId(device.productId);\n  }\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<USBDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      device => {\n        if (!unsubscribed) {\n          const deviceModel = identifyUSBProductId(device.productId);\n          observer.next({ type: \"add\", descriptor: device, deviceModel });\n          observer.complete();\n        }\n      },\n      error => {\n        if (\n          window.DOMException &&\n          error instanceof window.DOMException &&\n          error.code === 18\n        ) {\n          observer.error(new TransportWebUSBGestureRequired(error.message));\n        } else {\n          observer.error(new TransportOpenUserCancelled(error.message));\n        }\n      }\n    );\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n    return { unsubscribe };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const device = await requestLedgerDevice();\n    return TransportWebUSB.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebUSB.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a USBDevice\n   */\n  static async open(device: USBDevice) {\n    await device.open();\n    if (device.configuration === null) {\n      await device.selectConfiguration(configurationValue);\n    }\n    await device.reset();\n    const iface = device.configurations[0].interfaces.find(({ alternates }) =>\n      alternates.some(a => a.interfaceClass === 255)\n    );\n    if (!iface) {\n      throw new TransportInterfaceNotAvailable(\n        \"No WebUSB interface found for your Ledger device. Please upgrade firmware or contact techsupport.\"\n      );\n    }\n    const interfaceNumber = iface.interfaceNumber;\n    try {\n      await device.claimInterface(interfaceNumber);\n    } catch (e) {\n      await device.close();\n      throw new TransportInterfaceNotAvailable(e.message);\n    }\n    const transport = new TransportWebUSB(device, interfaceNumber);\n    const onDisconnect = e => {\n      if (device === e.device) {\n        // $FlowFixMe\n        navigator.usb.removeEventListener(\"disconnect\", onDisconnect);\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n    // $FlowFixMe\n    navigator.usb.addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    await this.device.releaseInterface(this.interfaceNumber);\n    await this.device.reset();\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = (apdu: Buffer): Promise<Buffer> =>\n    this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n\n      const framing = hidFraming(channel, packetSize);\n\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n      for (let i = 0; i < blocks.length; i++) {\n        log(\"hid-frame\", \"=> \" + blocks[i].toString(\"hex\"));\n        await this.device.transferOut(endpointNumber, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n      while (!(result = framing.getReducedResult(acc))) {\n        const r = await this.device.transferIn(endpointNumber, packetSize);\n        const buffer = Buffer.from(r.data.buffer);\n        log(\"hid-frame\", \"<= \" + buffer.toString(\"hex\"));\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch(e => {\n      if (e && e.message && e.message.includes(\"disconnected\")) {\n        this._emitDisconnect(e);\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n      throw e;\n    });\n\n  setScrambleKey() {}\n}\n"],"names":["ledgerDevices","vendorId","ledgerUSBVendorId","requestLedgerDevice","device","navigator","usb","requestDevice","filters","getLedgerDevices","devices","getDevices","filter","d","getFirstLedgerDevice","existingDevices","length","isSupported","Promise","resolve","configurationValue","endpointNumber","TransportWebUSB","Transport","constructor","interfaceNumber","deviceModel","channel","Math","floor","random","packetSize","_disconnectEmitted","_emitDisconnect","e","emit","exchange","apdu","exchangeAtomicImpl","log","toString","framing","hidFraming","blocks","makeBlocks","i","transferOut","result","acc","getReducedResult","r","transferIn","buffer","Buffer","from","data","reduceResponse","catch","message","includes","DisconnectedDeviceDuringOperation","identifyUSBProductId","productId","request","open","openConnected","configuration","selectConfiguration","reset","iface","configurations","interfaces","find","alternates","some","a","interfaceClass","TransportInterfaceNotAvailable","claimInterface","close","transport","onDisconnect","removeEventListener","DisconnectedDevice","addEventListener","exchangeBusyPromise","releaseInterface","setScrambleKey","list","listen","observer","unsubscribed","then","next","type","descriptor","complete","error","window","DOMException","code","TransportWebUSBGestureRequired","TransportOpenUserCancelled","unsubscribe"],"mappings":"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"}