{"version":3,"file":"lazy-chunk-request-with-key-path-nimiq.es.js","sources":["source-mapped://source-mapped/src/high-level-api/requests/nimiq/request-with-key-path-nimiq.ts"],"sourcesContent":["import RequestNimiq from './request-nimiq';\nimport { Coin } from '../../constants';\nimport { parseBip32Path } from '../../bip32-utils';\nimport ErrorState, { ErrorType } from '../../error-state';\nimport { NimiqVersion } from '../../../lib/constants';\n\nexport default abstract class RequestWithKeyPathNimiq<Version extends NimiqVersion, T>\n    extends RequestNimiq<Version, T> {\n    public readonly keyPath: string;\n\n    protected constructor(\n        nimiqVersion: Version,\n        keyPath: string,\n        expectedWalletId?: string,\n        childClassProperties: Object = {},\n    ) {\n        super(nimiqVersion, expectedWalletId);\n\n        this.keyPath = keyPath;\n        try {\n            if (parseBip32Path(keyPath).coin !== Coin.NIMIQ) throw new Error('Not a Nimiq bip32 path');\n        } catch (e) {\n            // Set properties of child class such that these are present on the request in the thrown error state.\n            for (const [key, value] of Object.entries(childClassProperties)) {\n                (this as any)[key] = value;\n            }\n            throw new ErrorState(\n                ErrorType.REQUEST_ASSERTION_FAILED,\n                `Invalid keyPath ${keyPath}: ${e instanceof Error ? e.message : e}`,\n                this,\n            );\n        }\n    }\n}\n"],"names":[],"mappings":";;;AAM8B,MAAA,uBAC1B,SAAQ,YAAwB,CAAA;AAChB,IAAA,OAAO,CAAS;AAEhC,IAAA,WAAA,CACI,YAAqB,EACrB,OAAe,EACf,gBAAyB,EACzB,uBAA+B,EAAE,EAAA;AAEjC,QAAA,KAAK,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;AAEtC,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI;YACA,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK;AAAE,gBAAA,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;AAC9F,SAAA;AAAC,QAAA,OAAO,CAAC,EAAE;;AAER,YAAA,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,EAAE;AAC5D,gBAAA,IAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC9B,aAAA;YACD,MAAM,IAAI,UAAU,CAChB,SAAS,CAAC,wBAAwB,EAClC,CAAmB,gBAAA,EAAA,OAAO,CAAK,EAAA,EAAA,CAAC,YAAY,KAAK,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,CAAE,CAAA,EACnE,IAAI,CACP,CAAC;AACL,SAAA;KACJ;AACJ;;;;"}