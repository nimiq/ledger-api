{"version":3,"file":"lazy-chunk-TransportWebHID.es.js","sources":["source-mapped://source-mapped/node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts"],"sourcesContent":["import Transport from \"@ledgerhq/hw-transport\";\nimport type { Observer, DescriptorEvent, Subscription } from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () => Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid) throw new TransportError(\"navigator.hid is not supported\", \"HIDNotSupported\");\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter(d => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\" ? identifyUSBProductId(device.productId) : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve(this.inputs.shift() as unknown as Buffer);\n    }\n\n    return new Promise(success => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (observer: Observer<DescriptorEvent<HIDDevice>>): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      device => {\n        if (!device) {\n          observer.error(new TransportOpenUserCancelled(\"Access denied to use Ledger device\"));\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      error => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      },\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = e => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch(e => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n"],"names":["buffer","Buffer","hidFraming"],"mappings":"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","x_google_ignoreList":[0]}