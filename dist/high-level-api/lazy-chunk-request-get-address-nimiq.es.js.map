{"version":3,"file":"lazy-chunk-request-get-address-nimiq.es.js","sources":["source-mapped://source-mapped/src/high-level-api/requests/nimiq/request-get-address-nimiq.ts"],"sourcesContent":["import RequestWithKeyPathNimiq from './request-with-key-path-nimiq';\nimport { RequestTypeNimiq } from '../../constants';\nimport ErrorState, { ErrorType } from '../../error-state';\nimport { NimiqVersion } from '../../../lib/constants';\n\ntype Transport = import('@ledgerhq/hw-transport').default;\n\nexport default class RequestGetAddressNimiq extends RequestWithKeyPathNimiq<NimiqVersion, string> {\n    public readonly type: RequestTypeNimiq.GET_ADDRESS;\n    public readonly display?: boolean;\n    public readonly expectedAddress?: string;\n\n    constructor(\n        nimiqVersion: NimiqVersion,\n        keyPath: string,\n        display?: boolean,\n        expectedAddress?: string,\n        expectedWalletId?: string,\n    ) {\n        const type = RequestTypeNimiq.GET_ADDRESS;\n        super(nimiqVersion, keyPath, expectedWalletId, { type, display, expectedAddress });\n        this.type = type;\n        this.display = display;\n        this.expectedAddress = expectedAddress;\n    }\n\n    public async call(transport: Transport): Promise<string> {\n        const api = await this._getLowLevelApi(transport); // throws LOADING_DEPENDENCIES_FAILED on failure\n        const { address } = await api.getAddress(\n            this.keyPath,\n            true, // validate\n            !!this.display, // display\n            this.nimiqVersion,\n        );\n\n        if (this.expectedAddress\n            && this.expectedAddress.replace(/ /g, '').toUpperCase()\n            !== address.replace(/ /g, '').toUpperCase()) {\n            throw new ErrorState(ErrorType.REQUEST_ASSERTION_FAILED, 'Address mismatch', this);\n        }\n\n        return address;\n    }\n}\n"],"names":[],"mappings":";;;;;AAOqB,MAAA,sBAAuB,SAAQ,uBAA6C,CAAA;AAC7E,IAAA,IAAI,CAA+B;AACnC,IAAA,OAAO,CAAW;AAClB,IAAA,eAAe,CAAU;IAEzC,WACI,CAAA,YAA0B,EAC1B,OAAe,EACf,OAAiB,EACjB,eAAwB,EACxB,gBAAyB,EAAA;AAEzB,QAAA,MAAM,IAAI,GAAG,gBAAgB,CAAC,WAAW,CAAC;AAC1C,QAAA,KAAK,CAAC,YAAY,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC,CAAC;AACnF,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KAC1C;IAEM,MAAM,IAAI,CAAC,SAAoB,EAAA;QAClC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;AAClD,QAAA,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,GAAG,CAAC,UAAU,CACpC,IAAI,CAAC,OAAO,EACZ,IAAI;AACJ,QAAA,CAAC,CAAC,IAAI,CAAC,OAAO;QACd,IAAI,CAAC,YAAY,CACpB,CAAC;QAEF,IAAI,IAAI,CAAC,eAAe;eACjB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE;oBACnD,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,EAAE;YAC7C,MAAM,IAAI,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;AACtF,SAAA;AAED,QAAA,OAAO,OAAO,CAAC;KAClB;AACJ;;;;"}