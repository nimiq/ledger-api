{"version":3,"file":"lazy-chunk-Btc.es.js","sources":["source-mapped://source-mapped/node_modules/bip32-path/index.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/bip32.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/buffertools.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/constants.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/hashPublicKey.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/newops/accounttype.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/newops/merkle.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/newops/policy.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/newops/psbtExtractor.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/newops/psbtv2.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/newops/psbtFinalizer.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/varint.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/serializeTransaction.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/BtcNew.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/getWalletPublicKey.ts","source-mapped://source-mapped/node_modules/invariant/browser.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/getTrustedInput.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/startUntrustedHashTransactionInput.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/getTrustedInputBIP143.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/compressPublicKey.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/signTransaction.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/finalizeInput.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/getAppAndVersion.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/internal/constants.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/internal/debug.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/internal/re.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/internal/parse-options.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/internal/identifiers.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/classes/semver.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/parse.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/valid.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/clean.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/inc.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/compare.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/eq.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/diff.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/major.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/minor.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/patch.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/prerelease.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/rcompare.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/compare-loose.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/compare-build.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/sort.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/rsort.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/gt.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/lt.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/neq.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/gte.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/lte.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/cmp.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/coerce.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/classes/range.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/classes/comparator.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/functions/satisfies.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/ranges/to-comparators.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/ranges/max-satisfying.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/ranges/min-satisfying.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/ranges/min-version.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/ranges/valid.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/ranges/outside.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/ranges/gtr.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/ranges/ltr.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/ranges/intersects.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/ranges/simplify.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/ranges/subset.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/node_modules/semver/index.js","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/shouldUseTrustedInputForSegwit.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/createTransaction.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/signMessage.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/BtcOld.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/newops/merkleMap.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/newops/merkelizedPsbt.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/newops/clientCommands.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/newops/appClient.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/debug.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/splitTransaction.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/signP2SHTransaction.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-app-btc/src/Btc.ts"],"sourcesContent":["/*\n * Bitcoin BIP32 path helpers\n * (C) 2016 Alex Beregszaszi\n */\n\nconst HARDENED = 0x80000000\n\nvar BIPPath = function (path) {\n  if (!Array.isArray(path)) {\n    throw new Error('Input must be an Array')\n  }\n  if (path.length === 0) {\n    throw new Error('Path must contain at least one level')\n  }\n  for (var i = 0; i < path.length; i++) {\n    if (typeof path[i] !== 'number') {\n      throw new Error('Path element is not a number')\n    }\n  }\n  this.path = path\n}\n\nBIPPath.validatePathArray = function (path) {\n  try {\n    BIPPath.fromPathArray(path)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nBIPPath.validateString = function (text, reqRoot) {\n  try {\n    BIPPath.fromString(text, reqRoot)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nBIPPath.fromPathArray = function (path) {\n  return new BIPPath(path)\n}\n\nBIPPath.fromString = function (text, reqRoot) {\n  // skip the root\n  if (/^m\\//i.test(text)) {\n    text = text.slice(2)\n  } else if (reqRoot) {\n    throw new Error('Root element is required')\n  }\n\n  var path = text.split('/')\n  var ret = new Array(path.length)\n  for (var i = 0; i < path.length; i++) {\n    var tmp = /(\\d+)([hH\\']?)/.exec(path[i])\n    if (tmp === null) {\n      throw new Error('Invalid input')\n    }\n    ret[i] = parseInt(tmp[1], 10)\n\n    if (ret[i] >= HARDENED) {\n      throw new Error('Invalid child index')\n    }\n\n    if (tmp[2] === 'h' || tmp[2] === 'H' || tmp[2] === '\\'') {\n      ret[i] += HARDENED\n    } else if (tmp[2].length != 0) {\n      throw new Error('Invalid modifier')\n    }\n  }\n  return new BIPPath(ret)\n}\n\nBIPPath.prototype.toPathArray = function () {\n  return this.path\n}\n\nBIPPath.prototype.toString = function (noRoot, oldStyle) {\n  var ret = new Array(this.path.length)\n  for (var i = 0; i < this.path.length; i++) {\n    var tmp = this.path[i]\n    if (tmp & HARDENED) {\n      ret[i] = (tmp & ~HARDENED) + (oldStyle ? 'h' : '\\'')\n    } else {\n      ret[i] = tmp\n    }\n  }\n  return (noRoot ? '' : 'm/') + ret.join('/')\n}\n\nBIPPath.prototype.inspect = function () {\n  return 'BIPPath <' + this.toString() + '>'\n}\n\nmodule.exports = BIPPath\n","import bippath from \"bip32-path\";\nimport bs58check from \"bs58check\";\n\nexport function pathElementsToBuffer(paths: number[]): Buffer {\n  const buffer = Buffer.alloc(1 + paths.length * 4);\n  buffer[0] = paths.length;\n  paths.forEach((element, index) => {\n    buffer.writeUInt32BE(element, 1 + 4 * index);\n  });\n  return buffer;\n}\n\nexport function bip32asBuffer(path: string): Buffer {\n  const pathElements = !path ? [] : pathStringToArray(path);\n  return pathElementsToBuffer(pathElements);\n}\n\nexport function pathArrayToString(pathElements: number[]): string {\n  // Limitation: bippath can't handle and empty path. It shouldn't affect us\n  // right now, but might in the future.\n  // TODO: Fix support for empty path.\n  return bippath.fromPathArray(pathElements).toString();\n}\n\nexport function pathStringToArray(path: string): number[] {\n  return bippath.fromString(path).toPathArray();\n}\n\nexport function pubkeyFromXpub(xpub: string): Buffer {\n  const xpubBuf = bs58check.decode(xpub);\n  return xpubBuf.slice(xpubBuf.length - 33);\n}\n\nexport function getXpubComponents(xpub: string): {\n  chaincode: Buffer;\n  pubkey: Buffer;\n  version: number;\n} {\n  const xpubBuf: Buffer = bs58check.decode(xpub);\n  return {\n    chaincode: xpubBuf.slice(13, 13 + 32),\n    pubkey: xpubBuf.slice(xpubBuf.length - 33),\n    version: xpubBuf.readUInt32BE(0),\n  };\n}\n\nexport function hardenedPathOf(pathElements: number[]): number[] {\n  for (let i = pathElements.length - 1; i >= 0; i--) {\n    if (pathElements[i] >= 0x80000000) {\n      return pathElements.slice(0, i + 1);\n    }\n  }\n  return [];\n}\n","import varuint from \"varuint-bitcoin\";\n\nexport function unsafeTo64bitLE(n: number): Buffer {\n  // we want to represent the input as a 8-bytes array\n  if (n > Number.MAX_SAFE_INTEGER) {\n    throw new Error(\"Can't convert numbers > MAX_SAFE_INT\");\n  }\n  const byteArray = Buffer.alloc(8, 0);\n  for (let index = 0; index < byteArray.length; index++) {\n    const byte = n & 0xff;\n    byteArray[index] = byte;\n    n = (n - byte) / 256;\n  }\n  return byteArray;\n}\n\nexport function unsafeFrom64bitLE(byteArray: Buffer): number {\n  let value = 0;\n  if (byteArray.length != 8) {\n    throw new Error(\"Expected Bufffer of lenght 8\");\n  }\n  if (byteArray[7] != 0) {\n    throw new Error(\"Can't encode numbers > MAX_SAFE_INT\");\n  }\n  if (byteArray[6] > 0x1f) {\n    throw new Error(\"Can't encode numbers > MAX_SAFE_INT\");\n  }\n  for (let i = byteArray.length - 1; i >= 0; i--) {\n    value = value * 256 + byteArray[i];\n  }\n  return value;\n}\n\nexport class BufferWriter {\n  private bufs: Buffer[] = [];\n\n  write(alloc: number, fn: (b: Buffer) => void): void {\n    const b = Buffer.alloc(alloc);\n    fn(b);\n    this.bufs.push(b);\n  }\n\n  writeUInt8(i: number): void {\n    this.write(1, b => b.writeUInt8(i, 0));\n  }\n\n  writeInt32(i: number): void {\n    this.write(4, b => b.writeInt32LE(i, 0));\n  }\n\n  writeUInt32(i: number): void {\n    this.write(4, b => b.writeUInt32LE(i, 0));\n  }\n\n  writeUInt64(i: number): void {\n    const bytes = unsafeTo64bitLE(i);\n    this.writeSlice(bytes);\n  }\n\n  writeVarInt(i: number): void {\n    this.bufs.push(varuint.encode(i));\n  }\n\n  writeSlice(slice: Buffer): void {\n    this.bufs.push(Buffer.from(slice));\n  }\n\n  writeVarSlice(slice: Buffer): void {\n    this.writeVarInt(slice.length);\n    this.writeSlice(slice);\n  }\n\n  buffer(): Buffer {\n    return Buffer.concat(this.bufs);\n  }\n}\n\nexport class BufferReader {\n  constructor(\n    public buffer: Buffer,\n    public offset: number = 0,\n  ) {}\n\n  available(): number {\n    return this.buffer.length - this.offset;\n  }\n\n  readUInt8(): number {\n    const result = this.buffer.readUInt8(this.offset);\n    this.offset++;\n    return result;\n  }\n\n  readInt32(): number {\n    const result = this.buffer.readInt32LE(this.offset);\n    this.offset += 4;\n    return result;\n  }\n\n  readUInt32(): number {\n    const result = this.buffer.readUInt32LE(this.offset);\n    this.offset += 4;\n    return result;\n  }\n\n  readUInt64(): number {\n    const buf = this.readSlice(8);\n    const n = unsafeFrom64bitLE(buf);\n    return n;\n  }\n\n  readVarInt(): number {\n    const vi = varuint.decode(this.buffer, this.offset);\n    this.offset += varuint.decode.bytes;\n    return vi;\n  }\n\n  readSlice(n: number): Buffer {\n    if (this.buffer.length < this.offset + n) {\n      throw new Error(\"Cannot read slice out of bounds\");\n    }\n    const result = this.buffer.slice(this.offset, this.offset + n);\n    this.offset += n;\n    return result;\n  }\n\n  readVarSlice(): Buffer {\n    return this.readSlice(this.readVarInt());\n  }\n\n  readVector(): Buffer[] {\n    const count = this.readVarInt();\n    const vector: Buffer[] = [];\n    for (let i = 0; i < count; i++) vector.push(this.readVarSlice());\n    return vector;\n  }\n}\n","// flow\nexport const MAX_SCRIPT_BLOCK = 50;\nexport const DEFAULT_VERSION = 1;\nexport const DEFAULT_LOCKTIME = 0;\nexport const DEFAULT_SEQUENCE = 0xffffffff;\nexport const SIGHASH_ALL = 1;\nexport const OP_DUP = 0x76;\nexport const OP_HASH160 = 0xa9;\nexport const HASH_SIZE = 0x14;\nexport const OP_EQUAL = 0x87;\nexport const OP_EQUALVERIFY = 0x88;\nexport const OP_CHECKSIG = 0xac;\nexport const OP_RETURN = 0x6a;\n","import RIPEMD160 from \"ripemd160\";\nimport sha from \"sha.js\";\nexport function hashPublicKey(buffer: Buffer): Buffer {\n  return new RIPEMD160().update(sha(\"sha256\").update(buffer).digest()).digest();\n}\n","import { crypto } from \"bitcoinjs-lib\";\nimport { pointAddScalar } from \"tiny-secp256k1\";\nimport { BufferWriter } from \"../buffertools\";\nimport { HASH_SIZE, OP_CHECKSIG, OP_DUP, OP_EQUAL, OP_EQUALVERIFY, OP_HASH160 } from \"../constants\";\nimport { hashPublicKey } from \"../hashPublicKey\";\nimport { DefaultDescriptorTemplate } from \"./policy\";\nimport { PsbtV2 } from \"./psbtv2\";\n\nexport type SpendingCondition = {\n  scriptPubKey: Buffer;\n  redeemScript?: Buffer;\n  // Possible future extension:\n  // witnessScript?: Buffer; // For p2wsh witnessScript\n  // tapScript?: {tapPath: Buffer[], script: Buffer} // For taproot\n};\n\nexport type SpentOutput = { cond: SpendingCondition; amount: Buffer };\n\n/**\n * Encapsulates differences between account types, for example p2wpkh,\n * p2wpkhWrapped, p2tr.\n */\nexport interface AccountType {\n  /**\n   * Generates a scriptPubKey (output script) from a list of public keys. If a\n   * p2sh redeemScript or a p2wsh witnessScript is needed it will also be set on\n   * the returned SpendingCondition.\n   *\n   * The pubkeys are expected to be 33 byte ecdsa compressed pubkeys.\n   */\n  spendingCondition(pubkeys: Buffer[]): SpendingCondition;\n\n  /**\n   * Populates the psbt with account type-specific data for an input.\n   * @param i The index of the input map to populate\n   * @param inputTx The full transaction containing the spent output. This may\n   * be omitted for taproot.\n   * @param spentOutput The amount and spending condition of the spent output\n   * @param pubkeys The 33 byte ecdsa compressed public keys involved in the input\n   * @param pathElems The paths corresponding to the pubkeys, in same order.\n   */\n  setInput(\n    i: number,\n    inputTx: Buffer | undefined,\n    spentOutput: SpentOutput,\n    pubkeys: Buffer[],\n    pathElems: number[][],\n  ): void;\n\n  /**\n   * Populates the psbt with account type-specific data for an output. This is typically\n   * done for change outputs and other outputs that goes to the same account as\n   * being spent from.\n   * @param i The index of the output map to populate\n   * @param cond The spending condition for this output\n   * @param pubkeys The 33 byte ecdsa compressed public keys involved in this output\n   * @param paths The paths corresponding to the pubkeys, in same order.\n   */\n  setOwnOutput(i: number, cond: SpendingCondition, pubkeys: Buffer[], paths: number[][]): void;\n\n  /**\n   * Returns the descriptor template for this account type. Currently only\n   * DefaultDescriptorTemplates are allowed, but that might be changed in the\n   * future. See class WalletPolicy for more information on descriptor\n   * templates.\n   */\n  getDescriptorTemplate(): DefaultDescriptorTemplate;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface BaseAccount extends AccountType {}\n\nabstract class BaseAccount implements AccountType {\n  constructor(\n    protected psbt: PsbtV2,\n    protected masterFp: Buffer,\n  ) {}\n}\n\n/**\n * Superclass for single signature accounts. This will make sure that the pubkey\n * arrays and path arrays in the method arguments contains exactly one element\n * and calls an abstract method to do the actual work.\n */\nabstract class SingleKeyAccount extends BaseAccount {\n  spendingCondition(pubkeys: Buffer[]): SpendingCondition {\n    if (pubkeys.length != 1) {\n      throw new Error(\"Expected single key, got \" + pubkeys.length);\n    }\n    return this.singleKeyCondition(pubkeys[0]);\n  }\n  protected abstract singleKeyCondition(pubkey: Buffer): SpendingCondition;\n\n  setInput(\n    i: number,\n    inputTx: Buffer | undefined,\n    spentOutput: SpentOutput,\n    pubkeys: Buffer[],\n    pathElems: number[][],\n  ) {\n    if (pubkeys.length != 1) {\n      throw new Error(\"Expected single key, got \" + pubkeys.length);\n    }\n    if (pathElems.length != 1) {\n      throw new Error(\"Expected single path, got \" + pathElems.length);\n    }\n    this.setSingleKeyInput(i, inputTx, spentOutput, pubkeys[0], pathElems[0]);\n  }\n  protected abstract setSingleKeyInput(\n    i: number,\n    inputTx: Buffer | undefined,\n    spentOutput: SpentOutput,\n    pubkey: Buffer,\n    path: number[],\n  );\n\n  setOwnOutput(i: number, cond: SpendingCondition, pubkeys: Buffer[], paths: number[][]) {\n    if (pubkeys.length != 1) {\n      throw new Error(\"Expected single key, got \" + pubkeys.length);\n    }\n    if (paths.length != 1) {\n      throw new Error(\"Expected single path, got \" + paths.length);\n    }\n    this.setSingleKeyOutput(i, cond, pubkeys[0], paths[0]);\n  }\n  protected abstract setSingleKeyOutput(\n    i: number,\n    cond: SpendingCondition,\n    pubkey: Buffer,\n    path: number[],\n  );\n}\n\nexport class p2pkh extends SingleKeyAccount {\n  singleKeyCondition(pubkey: Buffer): SpendingCondition {\n    const buf = new BufferWriter();\n    const pubkeyHash = hashPublicKey(pubkey);\n    buf.writeSlice(Buffer.from([OP_DUP, OP_HASH160, HASH_SIZE]));\n    buf.writeSlice(pubkeyHash);\n    buf.writeSlice(Buffer.from([OP_EQUALVERIFY, OP_CHECKSIG]));\n    return { scriptPubKey: buf.buffer() };\n  }\n\n  setSingleKeyInput(\n    i: number,\n    inputTx: Buffer | undefined,\n    _spentOutput: SpentOutput,\n    pubkey: Buffer,\n    path: number[],\n  ) {\n    if (!inputTx) {\n      throw new Error(\"Full input base transaction required\");\n    }\n    this.psbt.setInputNonWitnessUtxo(i, inputTx);\n    this.psbt.setInputBip32Derivation(i, pubkey, this.masterFp, path);\n  }\n\n  setSingleKeyOutput(i: number, cond: SpendingCondition, pubkey: Buffer, path: number[]) {\n    this.psbt.setOutputBip32Derivation(i, pubkey, this.masterFp, path);\n  }\n\n  getDescriptorTemplate(): DefaultDescriptorTemplate {\n    return \"pkh(@0)\";\n  }\n}\n\nexport class p2tr extends SingleKeyAccount {\n  singleKeyCondition(pubkey: Buffer): SpendingCondition {\n    const xonlyPubkey = pubkey.slice(1); // x-only pubkey\n    const buf = new BufferWriter();\n    const outputKey = this.getTaprootOutputKey(xonlyPubkey);\n    buf.writeSlice(Buffer.from([0x51, 32])); // push1, pubkeylen\n    buf.writeSlice(outputKey);\n    return { scriptPubKey: buf.buffer() };\n  }\n\n  setSingleKeyInput(\n    i: number,\n    _inputTx: Buffer | undefined,\n    spentOutput: SpentOutput,\n    pubkey: Buffer,\n    path: number[],\n  ) {\n    const xonly = pubkey.slice(1);\n    this.psbt.setInputTapBip32Derivation(i, xonly, [], this.masterFp, path);\n    this.psbt.setInputWitnessUtxo(i, spentOutput.amount, spentOutput.cond.scriptPubKey);\n  }\n\n  setSingleKeyOutput(i: number, cond: SpendingCondition, pubkey: Buffer, path: number[]) {\n    const xonly = pubkey.slice(1);\n    this.psbt.setOutputTapBip32Derivation(i, xonly, [], this.masterFp, path);\n  }\n\n  getDescriptorTemplate(): DefaultDescriptorTemplate {\n    return \"tr(@0)\";\n  }\n\n  /*\n  The following two functions are copied from wallet-btc and adapted.\n  They should be moved to a library to avoid code reuse.\n  */\n  private hashTapTweak(x: Buffer): Buffer {\n    // hash_tag(x) = SHA256(SHA256(tag) || SHA256(tag) || x), see BIP340\n    // See https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki#specification\n    const h = crypto.sha256(Buffer.from(\"TapTweak\", \"utf-8\"));\n    return crypto.sha256(Buffer.concat([h, h, x]));\n  }\n\n  /**\n   * Calculates a taproot output key from an internal key. This output key will be\n   * used as witness program in a taproot output. The internal key is tweaked\n   * according to recommendation in BIP341:\n   * https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_ref-22-0\n   *\n   * @param internalPubkey A 32 byte x-only taproot internal key\n   * @returns The output key\n   */\n  getTaprootOutputKey(internalPubkey: Buffer): Buffer {\n    if (internalPubkey.length != 32) {\n      throw new Error(\"Expected 32 byte pubkey. Got \" + internalPubkey.length);\n    }\n    // A BIP32 derived key can be converted to a schnorr pubkey by dropping\n    // the first byte, which represent the oddness/evenness. In schnorr all\n    // pubkeys are even.\n    // https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki#public-key-conversion\n    const evenEcdsaPubkey = Buffer.concat([Buffer.from([0x02]), internalPubkey]);\n    const tweak = this.hashTapTweak(internalPubkey);\n\n    // Q = P + int(hash_TapTweak(bytes(P)))G\n    const outputEcdsaKey = Buffer.from(pointAddScalar(evenEcdsaPubkey, tweak));\n    // Convert to schnorr.\n    const outputSchnorrKey = outputEcdsaKey.slice(1);\n    // Create address\n    return outputSchnorrKey;\n  }\n}\n\nexport class p2wpkhWrapped extends SingleKeyAccount {\n  singleKeyCondition(pubkey: Buffer): SpendingCondition {\n    const buf = new BufferWriter();\n    const redeemScript = this.createRedeemScript(pubkey);\n    const scriptHash = hashPublicKey(redeemScript);\n    buf.writeSlice(Buffer.from([OP_HASH160, HASH_SIZE]));\n    buf.writeSlice(scriptHash);\n    buf.writeUInt8(OP_EQUAL);\n    return { scriptPubKey: buf.buffer(), redeemScript: redeemScript };\n  }\n\n  setSingleKeyInput(\n    i: number,\n    inputTx: Buffer | undefined,\n    spentOutput: SpentOutput,\n    pubkey: Buffer,\n    path: number[],\n  ) {\n    if (!inputTx) {\n      throw new Error(\"Full input base transaction required\");\n    }\n    this.psbt.setInputNonWitnessUtxo(i, inputTx);\n    this.psbt.setInputBip32Derivation(i, pubkey, this.masterFp, path);\n\n    const userSuppliedRedeemScript = spentOutput.cond.redeemScript;\n    const expectedRedeemScript = this.createRedeemScript(pubkey);\n    if (userSuppliedRedeemScript && !expectedRedeemScript.equals(userSuppliedRedeemScript)) {\n      // At what point might a user set the redeemScript on its own?\n      throw new Error(`User-supplied redeemScript ${userSuppliedRedeemScript.toString(\n        \"hex\",\n      )} doesn't\n       match expected ${expectedRedeemScript.toString(\"hex\")} for input ${i}`);\n    }\n    this.psbt.setInputRedeemScript(i, expectedRedeemScript);\n    this.psbt.setInputWitnessUtxo(i, spentOutput.amount, spentOutput.cond.scriptPubKey);\n  }\n\n  setSingleKeyOutput(i: number, cond: SpendingCondition, pubkey: Buffer, path: number[]) {\n    this.psbt.setOutputRedeemScript(i, cond.redeemScript!);\n    this.psbt.setOutputBip32Derivation(i, pubkey, this.masterFp, path);\n  }\n\n  getDescriptorTemplate(): DefaultDescriptorTemplate {\n    return \"sh(wpkh(@0))\";\n  }\n\n  private createRedeemScript(pubkey: Buffer): Buffer {\n    const pubkeyHash = hashPublicKey(pubkey);\n    return Buffer.concat([Buffer.from(\"0014\", \"hex\"), pubkeyHash]);\n  }\n}\n\nexport class p2wpkh extends SingleKeyAccount {\n  singleKeyCondition(pubkey: Buffer): SpendingCondition {\n    const buf = new BufferWriter();\n    const pubkeyHash = hashPublicKey(pubkey);\n    buf.writeSlice(Buffer.from([0, HASH_SIZE]));\n    buf.writeSlice(pubkeyHash);\n    return { scriptPubKey: buf.buffer() };\n  }\n\n  setSingleKeyInput(\n    i: number,\n    inputTx: Buffer | undefined,\n    spentOutput: SpentOutput,\n    pubkey: Buffer,\n    path: number[],\n  ) {\n    if (!inputTx) {\n      throw new Error(\"Full input base transaction required\");\n    }\n    this.psbt.setInputNonWitnessUtxo(i, inputTx);\n    this.psbt.setInputBip32Derivation(i, pubkey, this.masterFp, path);\n    this.psbt.setInputWitnessUtxo(i, spentOutput.amount, spentOutput.cond.scriptPubKey);\n  }\n\n  setSingleKeyOutput(i: number, cond: SpendingCondition, pubkey: Buffer, path: number[]) {\n    this.psbt.setOutputBip32Derivation(i, pubkey, this.masterFp, path);\n  }\n\n  getDescriptorTemplate(): DefaultDescriptorTemplate {\n    return \"wpkh(@0)\";\n  }\n}\n","import { crypto } from \"bitcoinjs-lib\";\n\n/**\n * This class implements the merkle tree used by Ledger Bitcoin app v2+,\n * which is documented at\n * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/merkle.md\n */\nexport class Merkle {\n  private leaves: Buffer[];\n  private rootNode: Node;\n  private leafNodes: Node[];\n  private h: (buf: Buffer) => Buffer;\n  constructor(leaves: Buffer[], hasher: (buf: Buffer) => Buffer = crypto.sha256) {\n    this.leaves = leaves;\n    this.h = hasher;\n    const nodes = this.calculateRoot(leaves);\n    this.rootNode = nodes.root;\n    this.leafNodes = nodes.leaves;\n  }\n  getRoot(): Buffer {\n    return this.rootNode.hash;\n  }\n  size(): number {\n    return this.leaves.length;\n  }\n  getLeaves(): Buffer[] {\n    return this.leaves;\n  }\n  getLeafHash(index: number): Buffer {\n    return this.leafNodes[index].hash;\n  }\n  getProof(index: number): Buffer[] {\n    if (index >= this.leaves.length) throw Error(\"Index out of bounds\");\n    return proveNode(this.leafNodes[index]);\n  }\n\n  calculateRoot(leaves: Buffer[]): { root: Node; leaves: Node[] } {\n    const n = leaves.length;\n    if (n == 0) {\n      return {\n        root: new Node(undefined, undefined, Buffer.alloc(32, 0)),\n        leaves: [],\n      };\n    }\n    if (n == 1) {\n      const newNode = new Node(undefined, undefined, leaves[0]);\n      return { root: newNode, leaves: [newNode] };\n    }\n    const leftCount = highestPowerOf2LessThan(n);\n    const leftBranch = this.calculateRoot(leaves.slice(0, leftCount));\n    const rightBranch = this.calculateRoot(leaves.slice(leftCount));\n    const leftChild = leftBranch.root;\n    const rightChild = rightBranch.root;\n    const hash = this.hashNode(leftChild.hash, rightChild.hash);\n    const node = new Node(leftChild, rightChild, hash);\n    leftChild.parent = node;\n    rightChild.parent = node;\n    return { root: node, leaves: leftBranch.leaves.concat(rightBranch.leaves) };\n  }\n\n  hashNode(left: Buffer, right: Buffer): Buffer {\n    return this.h(Buffer.concat([Buffer.from([1]), left, right]));\n  }\n}\n\nexport function hashLeaf(\n  buf: Buffer,\n  hashFunction: (buf: Buffer) => Buffer = crypto.sha256,\n): Buffer {\n  return hashConcat(Buffer.from([0]), buf, hashFunction);\n}\n\nfunction hashConcat(bufA: Buffer, bufB: Buffer, hashFunction: (buf: Buffer) => Buffer): Buffer {\n  return hashFunction(Buffer.concat([bufA, bufB]));\n}\n\nclass Node {\n  leftChild?: Node;\n  rightChild?: Node;\n  parent?: Node;\n  hash: Buffer;\n  constructor(left: Node | undefined, right: Node | undefined, hash: Buffer) {\n    this.leftChild = left;\n    this.rightChild = right;\n    this.hash = hash;\n  }\n  isLeaf(): boolean {\n    return this.leftChild == undefined;\n  }\n}\n\nfunction proveNode(node: Node): Buffer[] {\n  if (!node.parent) {\n    return [];\n  }\n  if (node.parent.leftChild == node) {\n    if (!node.parent.rightChild) {\n      throw new Error(\"Expected right child to exist\");\n    }\n    return [node.parent.rightChild.hash, ...proveNode(node.parent)];\n  } else {\n    if (!node.parent.leftChild) {\n      throw new Error(\"Expected left child to exist\");\n    }\n    return [node.parent.leftChild.hash, ...proveNode(node.parent)];\n  }\n}\n\nfunction highestPowerOf2LessThan(n: number) {\n  if (n < 2) {\n    throw Error(\"Expected n >= 2\");\n  }\n  if (isPowerOf2(n)) {\n    return n / 2;\n  }\n  return 1 << Math.floor(Math.log2(n));\n}\n\nfunction isPowerOf2(n: number): boolean {\n  return (n & (n - 1)) == 0;\n}\n","import { crypto } from \"bitcoinjs-lib\";\nimport { pathArrayToString } from \"../bip32\";\nimport { BufferWriter } from \"../buffertools\";\nimport { hashLeaf, Merkle } from \"./merkle\";\n\nexport type DefaultDescriptorTemplate = \"pkh(@0)\" | \"sh(wpkh(@0))\" | \"wpkh(@0)\" | \"tr(@0)\";\n\n/**\n * The Bitcon hardware app uses a descriptors-like thing to describe\n * how to construct output scripts from keys. A \"Wallet Policy\" consists\n * of a \"Descriptor Template\" and a list of \"keys\". A key is basically\n * a serialized BIP32 extended public key with some added derivation path\n * information. This is documented at\n * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/wallet.md\n */\nexport class WalletPolicy {\n  descriptorTemplate: string;\n  keys: string[];\n  /**\n   * For now, we only support default descriptor templates.\n   */\n  constructor(descriptorTemplate: DefaultDescriptorTemplate, key: string) {\n    this.descriptorTemplate = descriptorTemplate;\n    this.keys = [key];\n  }\n\n  getWalletId(): Buffer {\n    // wallet_id (sha256 of the wallet serialization),\n    return crypto.sha256(this.serialize());\n  }\n\n  serialize(): Buffer {\n    const keyBuffers = this.keys.map(k => {\n      return Buffer.from(k, \"ascii\");\n    });\n    const m = new Merkle(keyBuffers.map(k => hashLeaf(k)));\n\n    const buf = new BufferWriter();\n    buf.writeUInt8(0x01); // wallet type (policy map)\n    buf.writeUInt8(0); // length of wallet name (empty string for default wallets)\n    buf.writeVarSlice(Buffer.from(this.descriptorTemplate, \"ascii\"));\n    buf.writeVarInt(this.keys.length), buf.writeSlice(m.getRoot());\n    return buf.buffer();\n  }\n}\n\nexport function createKey(masterFingerprint: Buffer, path: number[], xpub: string): string {\n  const accountPath = pathArrayToString(path);\n  return `[${masterFingerprint.toString(\"hex\")}${accountPath.substring(1)}]${xpub}/**`;\n}\n","import { BufferWriter } from \"../buffertools\";\nimport { PsbtV2 } from \"./psbtv2\";\n\n/**\n * This implements the \"Transaction Extractor\" role of BIP370 (PSBTv2\n * https://github.com/bitcoin/bips/blob/master/bip-0370.mediawiki#transaction-extractor). However\n * the role is partially documented in BIP174 (PSBTv0\n * https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki#transaction-extractor).\n */\nexport function extract(psbt: PsbtV2): Buffer {\n  const tx = new BufferWriter();\n  tx.writeUInt32(psbt.getGlobalTxVersion());\n\n  const isSegwit = !!psbt.getInputWitnessUtxo(0);\n  if (isSegwit) {\n    tx.writeSlice(Buffer.from([0, 1]));\n  }\n  const inputCount = psbt.getGlobalInputCount();\n  tx.writeVarInt(inputCount);\n  const witnessWriter = new BufferWriter();\n  for (let i = 0; i < inputCount; i++) {\n    tx.writeSlice(psbt.getInputPreviousTxid(i));\n    tx.writeUInt32(psbt.getInputOutputIndex(i));\n    tx.writeVarSlice(psbt.getInputFinalScriptsig(i) ?? Buffer.from([]));\n    tx.writeUInt32(psbt.getInputSequence(i));\n    if (isSegwit) {\n      witnessWriter.writeSlice(psbt.getInputFinalScriptwitness(i));\n    }\n  }\n  const outputCount = psbt.getGlobalOutputCount();\n  tx.writeVarInt(outputCount);\n  for (let i = 0; i < outputCount; i++) {\n    tx.writeUInt64(psbt.getOutputAmount(i));\n    tx.writeVarSlice(psbt.getOutputScript(i));\n  }\n  tx.writeSlice(witnessWriter.buffer());\n  tx.writeUInt32(psbt.getGlobalFallbackLocktime() ?? 0);\n  return tx.buffer();\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { BufferReader, BufferWriter, unsafeFrom64bitLE, unsafeTo64bitLE } from \"../buffertools\";\n\nexport enum psbtGlobal {\n  TX_VERSION = 0x02,\n  FALLBACK_LOCKTIME = 0x03,\n  INPUT_COUNT = 0x04,\n  OUTPUT_COUNT = 0x05,\n  TX_MODIFIABLE = 0x06,\n  VERSION = 0xfb,\n}\nexport enum psbtIn {\n  NON_WITNESS_UTXO = 0x00,\n  WITNESS_UTXO = 0x01,\n  PARTIAL_SIG = 0x02,\n  SIGHASH_TYPE = 0x03,\n  REDEEM_SCRIPT = 0x04,\n  BIP32_DERIVATION = 0x06,\n  FINAL_SCRIPTSIG = 0x07,\n  FINAL_SCRIPTWITNESS = 0x08,\n  PREVIOUS_TXID = 0x0e,\n  OUTPUT_INDEX = 0x0f,\n  SEQUENCE = 0x10,\n  TAP_KEY_SIG = 0x13,\n  TAP_BIP32_DERIVATION = 0x16,\n}\nexport enum psbtOut {\n  REDEEM_SCRIPT = 0x00,\n  BIP_32_DERIVATION = 0x02,\n  AMOUNT = 0x03,\n  SCRIPT = 0x04,\n  TAP_BIP32_DERIVATION = 0x07,\n}\n\nconst PSBT_MAGIC_BYTES = Buffer.from([0x70, 0x73, 0x62, 0x74, 0xff]);\n\nexport class NoSuchEntry extends Error {}\n\n/**\n * Implements Partially Signed Bitcoin Transaction version 2, BIP370, as\n * documented at https://github.com/bitcoin/bips/blob/master/bip-0370.mediawiki\n * and https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki\n *\n * A psbt is a data structure that can carry all relevant information about a\n * transaction through all stages of the signing process. From constructing an\n * unsigned transaction to extracting the final serialized transaction ready for\n * broadcast.\n *\n * This implementation is limited to what's needed in ledgerjs to carry out its\n * duties, which means that support for features like multisig or taproot script\n * path spending are not implemented. Specifically, it supports p2pkh,\n * p2wpkhWrappedInP2sh, p2wpkh and p2tr key path spending.\n *\n * This class is made purposefully dumb, so it's easy to add support for\n * complemantary fields as needed in the future.\n */\nexport class PsbtV2 {\n  protected globalMap: Map<string, Buffer> = new Map();\n  protected inputMaps: Map<string, Buffer>[] = [];\n  protected outputMaps: Map<string, Buffer>[] = [];\n\n  setGlobalTxVersion(version: number) {\n    this.setGlobal(psbtGlobal.TX_VERSION, uint32LE(version));\n  }\n  getGlobalTxVersion(): number {\n    return this.getGlobal(psbtGlobal.TX_VERSION).readUInt32LE(0);\n  }\n  setGlobalFallbackLocktime(locktime: number) {\n    this.setGlobal(psbtGlobal.FALLBACK_LOCKTIME, uint32LE(locktime));\n  }\n  getGlobalFallbackLocktime(): number | undefined {\n    return this.getGlobalOptional(psbtGlobal.FALLBACK_LOCKTIME)?.readUInt32LE(0);\n  }\n  setGlobalInputCount(inputCount: number) {\n    this.setGlobal(psbtGlobal.INPUT_COUNT, varint(inputCount));\n  }\n  getGlobalInputCount(): number {\n    return fromVarint(this.getGlobal(psbtGlobal.INPUT_COUNT));\n  }\n  setGlobalOutputCount(outputCount: number) {\n    this.setGlobal(psbtGlobal.OUTPUT_COUNT, varint(outputCount));\n  }\n  getGlobalOutputCount(): number {\n    return fromVarint(this.getGlobal(psbtGlobal.OUTPUT_COUNT));\n  }\n  setGlobalTxModifiable(byte: Buffer) {\n    this.setGlobal(psbtGlobal.TX_MODIFIABLE, byte);\n  }\n  getGlobalTxModifiable(): Buffer | undefined {\n    return this.getGlobalOptional(psbtGlobal.TX_MODIFIABLE);\n  }\n  setGlobalPsbtVersion(psbtVersion: number) {\n    this.setGlobal(psbtGlobal.VERSION, uint32LE(psbtVersion));\n  }\n  getGlobalPsbtVersion(): number {\n    return this.getGlobal(psbtGlobal.VERSION).readUInt32LE(0);\n  }\n\n  setInputNonWitnessUtxo(inputIndex: number, transaction: Buffer) {\n    this.setInput(inputIndex, psbtIn.NON_WITNESS_UTXO, b(), transaction);\n  }\n  getInputNonWitnessUtxo(inputIndex: number): Buffer | undefined {\n    return this.getInputOptional(inputIndex, psbtIn.NON_WITNESS_UTXO, b());\n  }\n  setInputWitnessUtxo(inputIndex: number, amount: Buffer, scriptPubKey: Buffer) {\n    const buf = new BufferWriter();\n    buf.writeSlice(amount);\n    buf.writeVarSlice(scriptPubKey);\n    this.setInput(inputIndex, psbtIn.WITNESS_UTXO, b(), buf.buffer());\n  }\n  getInputWitnessUtxo(inputIndex: number): { amount: Buffer; scriptPubKey: Buffer } | undefined {\n    const utxo = this.getInputOptional(inputIndex, psbtIn.WITNESS_UTXO, b());\n    if (!utxo) return undefined;\n    const buf = new BufferReader(utxo);\n    return { amount: buf.readSlice(8), scriptPubKey: buf.readVarSlice() };\n  }\n  setInputPartialSig(inputIndex: number, pubkey: Buffer, signature: Buffer) {\n    this.setInput(inputIndex, psbtIn.PARTIAL_SIG, pubkey, signature);\n  }\n  getInputPartialSig(inputIndex: number, pubkey: Buffer): Buffer | undefined {\n    return this.getInputOptional(inputIndex, psbtIn.PARTIAL_SIG, pubkey);\n  }\n  setInputSighashType(inputIndex: number, sigHashtype: number) {\n    this.setInput(inputIndex, psbtIn.SIGHASH_TYPE, b(), uint32LE(sigHashtype));\n  }\n  getInputSighashType(inputIndex: number): number | undefined {\n    const result = this.getInputOptional(inputIndex, psbtIn.SIGHASH_TYPE, b());\n    if (!result) return undefined;\n    return result.readUInt32LE(0);\n  }\n  setInputRedeemScript(inputIndex: number, redeemScript: Buffer) {\n    this.setInput(inputIndex, psbtIn.REDEEM_SCRIPT, b(), redeemScript);\n  }\n  getInputRedeemScript(inputIndex: number): Buffer | undefined {\n    return this.getInputOptional(inputIndex, psbtIn.REDEEM_SCRIPT, b());\n  }\n  setInputBip32Derivation(\n    inputIndex: number,\n    pubkey: Buffer,\n    masterFingerprint: Buffer,\n    path: number[],\n  ) {\n    if (pubkey.length != 33) throw new Error(\"Invalid pubkey length: \" + pubkey.length);\n    this.setInput(\n      inputIndex,\n      psbtIn.BIP32_DERIVATION,\n      pubkey,\n      this.encodeBip32Derivation(masterFingerprint, path),\n    );\n  }\n  getInputBip32Derivation(\n    inputIndex: number,\n    pubkey: Buffer,\n  ): { masterFingerprint: Buffer; path: number[] } | undefined {\n    const buf = this.getInputOptional(inputIndex, psbtIn.BIP32_DERIVATION, pubkey);\n    if (!buf) return undefined;\n    return this.decodeBip32Derivation(buf);\n  }\n  setInputFinalScriptsig(inputIndex: number, scriptSig: Buffer) {\n    this.setInput(inputIndex, psbtIn.FINAL_SCRIPTSIG, b(), scriptSig);\n  }\n  getInputFinalScriptsig(inputIndex: number): Buffer | undefined {\n    return this.getInputOptional(inputIndex, psbtIn.FINAL_SCRIPTSIG, b());\n  }\n  setInputFinalScriptwitness(inputIndex: number, scriptWitness: Buffer) {\n    this.setInput(inputIndex, psbtIn.FINAL_SCRIPTWITNESS, b(), scriptWitness);\n  }\n  getInputFinalScriptwitness(inputIndex: number): Buffer {\n    return this.getInput(inputIndex, psbtIn.FINAL_SCRIPTWITNESS, b());\n  }\n  setInputPreviousTxId(inputIndex: number, txid: Buffer) {\n    this.setInput(inputIndex, psbtIn.PREVIOUS_TXID, b(), txid);\n  }\n  getInputPreviousTxid(inputIndex: number): Buffer {\n    return this.getInput(inputIndex, psbtIn.PREVIOUS_TXID, b());\n  }\n  setInputOutputIndex(inputIndex: number, outputIndex: number) {\n    this.setInput(inputIndex, psbtIn.OUTPUT_INDEX, b(), uint32LE(outputIndex));\n  }\n  getInputOutputIndex(inputIndex: number): number {\n    return this.getInput(inputIndex, psbtIn.OUTPUT_INDEX, b()).readUInt32LE(0);\n  }\n  setInputSequence(inputIndex: number, sequence: number) {\n    this.setInput(inputIndex, psbtIn.SEQUENCE, b(), uint32LE(sequence));\n  }\n  getInputSequence(inputIndex: number): number {\n    return this.getInputOptional(inputIndex, psbtIn.SEQUENCE, b())?.readUInt32LE(0) ?? 0xffffffff;\n  }\n  setInputTapKeySig(inputIndex: number, sig: Buffer) {\n    this.setInput(inputIndex, psbtIn.TAP_KEY_SIG, b(), sig);\n  }\n  getInputTapKeySig(inputIndex: number): Buffer | undefined {\n    return this.getInputOptional(inputIndex, psbtIn.TAP_KEY_SIG, b());\n  }\n  setInputTapBip32Derivation(\n    inputIndex: number,\n    pubkey: Buffer,\n    hashes: Buffer[],\n    masterFingerprint: Buffer,\n    path: number[],\n  ) {\n    if (pubkey.length != 32) throw new Error(\"Invalid pubkey length: \" + pubkey.length);\n    const buf = this.encodeTapBip32Derivation(hashes, masterFingerprint, path);\n    this.setInput(inputIndex, psbtIn.TAP_BIP32_DERIVATION, pubkey, buf);\n  }\n  getInputTapBip32Derivation(\n    inputIndex: number,\n    pubkey: Buffer,\n  ): { hashes: Buffer[]; masterFingerprint: Buffer; path: number[] } {\n    const buf = this.getInput(inputIndex, psbtIn.TAP_BIP32_DERIVATION, pubkey);\n    return this.decodeTapBip32Derivation(buf);\n  }\n  getInputKeyDatas(inputIndex: number, keyType: KeyType): Buffer[] {\n    return this.getKeyDatas(this.inputMaps[inputIndex], keyType);\n  }\n\n  setOutputRedeemScript(outputIndex: number, redeemScript: Buffer) {\n    this.setOutput(outputIndex, psbtOut.REDEEM_SCRIPT, b(), redeemScript);\n  }\n  getOutputRedeemScript(outputIndex: number): Buffer {\n    return this.getOutput(outputIndex, psbtOut.REDEEM_SCRIPT, b());\n  }\n  setOutputBip32Derivation(\n    outputIndex: number,\n    pubkey: Buffer,\n    masterFingerprint: Buffer,\n    path: number[],\n  ) {\n    this.setOutput(\n      outputIndex,\n      psbtOut.BIP_32_DERIVATION,\n      pubkey,\n      this.encodeBip32Derivation(masterFingerprint, path),\n    );\n  }\n  getOutputBip32Derivation(\n    outputIndex: number,\n    pubkey: Buffer,\n  ): { masterFingerprint: Buffer; path: number[] } {\n    const buf = this.getOutput(outputIndex, psbtOut.BIP_32_DERIVATION, pubkey);\n    return this.decodeBip32Derivation(buf);\n  }\n  setOutputAmount(outputIndex: number, amount: number) {\n    this.setOutput(outputIndex, psbtOut.AMOUNT, b(), uint64LE(amount));\n  }\n  getOutputAmount(outputIndex: number): number {\n    const buf = this.getOutput(outputIndex, psbtOut.AMOUNT, b());\n    return unsafeFrom64bitLE(buf);\n  }\n  setOutputScript(outputIndex: number, scriptPubKey: Buffer) {\n    this.setOutput(outputIndex, psbtOut.SCRIPT, b(), scriptPubKey);\n  }\n  getOutputScript(outputIndex: number): Buffer {\n    return this.getOutput(outputIndex, psbtOut.SCRIPT, b());\n  }\n  setOutputTapBip32Derivation(\n    outputIndex: number,\n    pubkey: Buffer,\n    hashes: Buffer[],\n    fingerprint: Buffer,\n    path: number[],\n  ) {\n    const buf = this.encodeTapBip32Derivation(hashes, fingerprint, path);\n    this.setOutput(outputIndex, psbtOut.TAP_BIP32_DERIVATION, pubkey, buf);\n  }\n  getOutputTapBip32Derivation(\n    outputIndex: number,\n    pubkey: Buffer,\n  ): { hashes: Buffer[]; masterFingerprint: Buffer; path: number[] } {\n    const buf = this.getOutput(outputIndex, psbtOut.TAP_BIP32_DERIVATION, pubkey);\n    return this.decodeTapBip32Derivation(buf);\n  }\n\n  deleteInputEntries(inputIndex: number, keyTypes: psbtIn[]) {\n    const map = this.inputMaps[inputIndex];\n    map.forEach((_v, k, m) => {\n      if (this.isKeyType(k, keyTypes)) {\n        m.delete(k);\n      }\n    });\n  }\n\n  copy(to: PsbtV2) {\n    this.copyMap(this.globalMap, to.globalMap);\n    this.copyMaps(this.inputMaps, to.inputMaps);\n    this.copyMaps(this.outputMaps, to.outputMaps);\n  }\n  copyMaps(from: Map<string, Buffer>[], to: Map<string, Buffer>[]) {\n    from.forEach((m, index) => {\n      const to_index = new Map();\n      this.copyMap(m, to_index);\n      to[index] = to_index;\n    });\n  }\n  copyMap(from: Map<string, Buffer>, to: Map<string, Buffer>) {\n    from.forEach((v, k) => to.set(k, Buffer.from(v)));\n  }\n  serialize(): Buffer {\n    const buf = new BufferWriter();\n    buf.writeSlice(Buffer.from([0x70, 0x73, 0x62, 0x74, 0xff]));\n    serializeMap(buf, this.globalMap);\n    this.inputMaps.forEach(map => {\n      serializeMap(buf, map);\n    });\n    this.outputMaps.forEach(map => {\n      serializeMap(buf, map);\n    });\n    return buf.buffer();\n  }\n  deserialize(psbt: Buffer) {\n    const buf = new BufferReader(psbt);\n    if (!buf.readSlice(5).equals(PSBT_MAGIC_BYTES)) {\n      throw new Error(\"Invalid magic bytes\");\n    }\n    while (this.readKeyPair(this.globalMap, buf));\n    for (let i = 0; i < this.getGlobalInputCount(); i++) {\n      this.inputMaps[i] = new Map();\n      while (this.readKeyPair(this.inputMaps[i], buf));\n    }\n    for (let i = 0; i < this.getGlobalOutputCount(); i++) {\n      this.outputMaps[i] = new Map();\n      while (this.readKeyPair(this.outputMaps[i], buf));\n    }\n  }\n  private readKeyPair(map: Map<string, Buffer>, buf: BufferReader): boolean {\n    const keyLen = buf.readVarInt();\n    if (keyLen == 0) {\n      return false;\n    }\n    const keyType = buf.readUInt8();\n    const keyData = buf.readSlice(keyLen - 1);\n    const value = buf.readVarSlice();\n    set(map, keyType, keyData, value);\n    return true;\n  }\n  private getKeyDatas(map: Map<string, Buffer>, keyType: KeyType): Buffer[] {\n    const result: Buffer[] = [];\n    map.forEach((_v, k) => {\n      if (this.isKeyType(k, [keyType])) {\n        result.push(Buffer.from(k.substring(2), \"hex\"));\n      }\n    });\n    return result;\n  }\n  private isKeyType(hexKey: string, keyTypes: KeyType[]): boolean {\n    const keyType = Buffer.from(hexKey.substring(0, 2), \"hex\").readUInt8(0);\n    return keyTypes.some(k => k == keyType);\n  }\n  private setGlobal(keyType: KeyType, value: Buffer) {\n    const key = new Key(keyType, Buffer.from([]));\n    this.globalMap.set(key.toString(), value);\n  }\n  private getGlobal(keyType: KeyType): Buffer {\n    return get(this.globalMap, keyType, b(), false)!;\n  }\n  private getGlobalOptional(keyType: KeyType): Buffer | undefined {\n    return get(this.globalMap, keyType, b(), true);\n  }\n  private setInput(index: number, keyType: KeyType, keyData: Buffer, value: Buffer) {\n    set(this.getMap(index, this.inputMaps), keyType, keyData, value);\n  }\n  private getInput(index: number, keyType: KeyType, keyData: Buffer): Buffer {\n    return get(this.inputMaps[index], keyType, keyData, false)!;\n  }\n  private getInputOptional(index: number, keyType: KeyType, keyData: Buffer): Buffer | undefined {\n    return get(this.inputMaps[index], keyType, keyData, true);\n  }\n  private setOutput(index: number, keyType: KeyType, keyData: Buffer, value: Buffer) {\n    set(this.getMap(index, this.outputMaps), keyType, keyData, value);\n  }\n  private getOutput(index: number, keyType: KeyType, keyData: Buffer): Buffer {\n    return get(this.outputMaps[index], keyType, keyData, false)!;\n  }\n  private getMap(index: number, maps: Map<string, Buffer>[]): Map<string, Buffer> {\n    if (maps[index]) {\n      return maps[index];\n    }\n    return (maps[index] = new Map());\n  }\n  private encodeBip32Derivation(masterFingerprint: Buffer, path: number[]) {\n    const buf = new BufferWriter();\n    this.writeBip32Derivation(buf, masterFingerprint, path);\n    return buf.buffer();\n  }\n  private decodeBip32Derivation(buffer: Buffer): {\n    masterFingerprint: Buffer;\n    path: number[];\n  } {\n    const buf = new BufferReader(buffer);\n    return this.readBip32Derivation(buf);\n  }\n  private writeBip32Derivation(buf: BufferWriter, masterFingerprint: Buffer, path: number[]) {\n    buf.writeSlice(masterFingerprint);\n    path.forEach(element => {\n      buf.writeUInt32(element);\n    });\n  }\n  private readBip32Derivation(buf: BufferReader): {\n    masterFingerprint: Buffer;\n    path: number[];\n  } {\n    const masterFingerprint = buf.readSlice(4);\n    const path: number[] = [];\n    while (buf.offset < buf.buffer.length) {\n      path.push(buf.readUInt32());\n    }\n    return { masterFingerprint, path };\n  }\n  private encodeTapBip32Derivation(\n    hashes: Buffer[],\n    masterFingerprint: Buffer,\n    path: number[],\n  ): Buffer {\n    const buf = new BufferWriter();\n    buf.writeVarInt(hashes.length);\n    hashes.forEach(h => {\n      buf.writeSlice(h);\n    });\n    this.writeBip32Derivation(buf, masterFingerprint, path);\n    return buf.buffer();\n  }\n  private decodeTapBip32Derivation(buffer: Buffer): {\n    hashes: Buffer[];\n    masterFingerprint: Buffer;\n    path: number[];\n  } {\n    const buf = new BufferReader(buffer);\n    const hashCount = buf.readVarInt();\n    const hashes: Buffer[] = [];\n    for (let i = 0; i < hashCount; i++) {\n      hashes.push(buf.readSlice(32));\n    }\n    const deriv = this.readBip32Derivation(buf);\n    return { hashes, ...deriv };\n  }\n}\nfunction get(\n  map: Map<string, Buffer>,\n  keyType: KeyType,\n  keyData: Buffer,\n  acceptUndefined: boolean,\n): Buffer | undefined {\n  if (!map) throw Error(\"No such map\");\n  const key = new Key(keyType, keyData);\n  const value = map.get(key.toString());\n  if (!value) {\n    if (acceptUndefined) {\n      return undefined;\n    }\n    throw new NoSuchEntry(key.toString());\n  }\n  // Make sure to return a copy, to protect the underlying data.\n  return Buffer.from(value);\n}\ntype KeyType = number;\n\nclass Key {\n  keyType: KeyType;\n  keyData: Buffer;\n  constructor(keyType: KeyType, keyData: Buffer) {\n    this.keyType = keyType;\n    this.keyData = keyData;\n  }\n  toString(): string {\n    const buf = new BufferWriter();\n    this.toBuffer(buf);\n    return buf.buffer().toString(\"hex\");\n  }\n  serialize(buf: BufferWriter) {\n    buf.writeVarInt(1 + this.keyData.length);\n    this.toBuffer(buf);\n  }\n  private toBuffer(buf: BufferWriter) {\n    buf.writeUInt8(this.keyType);\n    buf.writeSlice(this.keyData);\n  }\n}\nclass KeyPair {\n  key: Key;\n  value: Buffer;\n  constructor(key: Key, value: Buffer) {\n    this.key = key;\n    this.value = value;\n  }\n  serialize(buf: BufferWriter) {\n    this.key.serialize(buf);\n    buf.writeVarSlice(this.value);\n  }\n}\nfunction createKey(buf: Buffer): Key {\n  return new Key(buf.readUInt8(0), buf.slice(1));\n}\nfunction serializeMap(buf: BufferWriter, map: Map<string, Buffer>) {\n  for (const k of map.keys()) {\n    const value = map.get(k)!;\n    const keyPair = new KeyPair(createKey(Buffer.from(k, \"hex\")), value);\n    keyPair.serialize(buf);\n  }\n  buf.writeUInt8(0);\n}\n\nfunction b(): Buffer {\n  return Buffer.from([]);\n}\nfunction set(map: Map<string, Buffer>, keyType: KeyType, keyData: Buffer, value: Buffer) {\n  const key = new Key(keyType, keyData);\n  map.set(key.toString(), value);\n}\nfunction uint32LE(n: number): Buffer {\n  const b = Buffer.alloc(4);\n  b.writeUInt32LE(n, 0);\n  return b;\n}\nfunction uint64LE(n: number): Buffer {\n  return unsafeTo64bitLE(n);\n}\nfunction varint(n: number): Buffer {\n  const b = new BufferWriter();\n  b.writeVarInt(n);\n  return b.buffer();\n}\nfunction fromVarint(buf: Buffer): number {\n  return new BufferReader(buf).readVarInt();\n}\n","import { BufferWriter } from \"../buffertools\";\nimport { psbtIn, PsbtV2 } from \"./psbtv2\";\n\n/**\n * This roughly implements the \"input finalizer\" role of BIP370 (PSBTv2\n * https://github.com/bitcoin/bips/blob/master/bip-0370.mediawiki). However\n * the role is documented in BIP174 (PSBTv0\n * https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki).\n *\n * Verify that all inputs have a signature, and set inputFinalScriptwitness\n * and/or inputFinalScriptSig depending on the type of the spent outputs. Clean\n * fields that aren't useful anymore, partial signatures, redeem script and\n * derivation paths.\n *\n * @param psbt The psbt with all signatures added as partial sigs, either\n * through PSBT_IN_PARTIAL_SIG or PSBT_IN_TAP_KEY_SIG\n */\nexport function finalize(psbt: PsbtV2): void {\n  // First check that each input has a signature\n  const inputCount = psbt.getGlobalInputCount();\n  for (let i = 0; i < inputCount; i++) {\n    const legacyPubkeys = psbt.getInputKeyDatas(i, psbtIn.PARTIAL_SIG);\n    const taprootSig = psbt.getInputTapKeySig(i);\n    if (legacyPubkeys.length == 0 && !taprootSig) {\n      throw Error(`No signature for input ${i} present`);\n    }\n    if (legacyPubkeys.length > 0) {\n      if (legacyPubkeys.length > 1) {\n        throw Error(`Expected exactly one signature, got ${legacyPubkeys.length}`);\n      }\n      if (taprootSig) {\n        throw Error(\"Both taproot and non-taproot signatures present.\");\n      }\n\n      const isSegwitV0 = !!psbt.getInputWitnessUtxo(i);\n      const redeemScript = psbt.getInputRedeemScript(i);\n      const isWrappedSegwit = !!redeemScript;\n      const signature = psbt.getInputPartialSig(i, legacyPubkeys[0]);\n      if (!signature) throw new Error(\"Expected partial signature for input \" + i);\n      if (isSegwitV0) {\n        const witnessBuf = new BufferWriter();\n        witnessBuf.writeVarInt(2);\n        witnessBuf.writeVarInt(signature.length);\n        witnessBuf.writeSlice(signature);\n        witnessBuf.writeVarInt(legacyPubkeys[0].length);\n        witnessBuf.writeSlice(legacyPubkeys[0]);\n        psbt.setInputFinalScriptwitness(i, witnessBuf.buffer());\n        if (isWrappedSegwit) {\n          if (!redeemScript || redeemScript.length == 0) {\n            throw new Error(\"Expected non-empty redeemscript. Can't finalize intput \" + i);\n          }\n          const scriptSigBuf = new BufferWriter();\n          // Push redeemScript length\n          scriptSigBuf.writeUInt8(redeemScript.length);\n          scriptSigBuf.writeSlice(redeemScript);\n          psbt.setInputFinalScriptsig(i, scriptSigBuf.buffer());\n        }\n      } else {\n        // Legacy input\n        const scriptSig = new BufferWriter();\n        writePush(scriptSig, signature);\n        writePush(scriptSig, legacyPubkeys[0]);\n        psbt.setInputFinalScriptsig(i, scriptSig.buffer());\n      }\n    } else {\n      // Taproot input\n      const signature = psbt.getInputTapKeySig(i);\n      if (!signature) {\n        throw Error(\"No taproot signature found\");\n      }\n      if (signature.length != 64 && signature.length != 65) {\n        throw Error(\"Unexpected length of schnorr signature.\");\n      }\n      const witnessBuf = new BufferWriter();\n      witnessBuf.writeVarInt(1);\n      witnessBuf.writeVarSlice(signature);\n      psbt.setInputFinalScriptwitness(i, witnessBuf.buffer());\n    }\n    clearFinalizedInput(psbt, i);\n  }\n}\n\n/**\n * Deletes fields that are no longer neccesary from the psbt.\n *\n * Note, the spec doesn't say anything about removing ouput fields\n * like PSBT_OUT_BIP32_DERIVATION_PATH and others, so we keep them\n * without actually knowing why. I think we should remove them too.\n */\nfunction clearFinalizedInput(psbt: PsbtV2, inputIndex: number) {\n  const keyTypes = [\n    psbtIn.BIP32_DERIVATION,\n    psbtIn.PARTIAL_SIG,\n    psbtIn.TAP_BIP32_DERIVATION,\n    psbtIn.TAP_KEY_SIG,\n  ];\n  const witnessUtxoAvailable = !!psbt.getInputWitnessUtxo(inputIndex);\n  const nonWitnessUtxoAvailable = !!psbt.getInputNonWitnessUtxo(inputIndex);\n  if (witnessUtxoAvailable && nonWitnessUtxoAvailable) {\n    // Remove NON_WITNESS_UTXO for segwit v0 as it's only needed while signing.\n    // Segwit v1 doesn't have NON_WITNESS_UTXO set.\n    // See https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki#cite_note-7\n    keyTypes.push(psbtIn.NON_WITNESS_UTXO);\n  }\n  psbt.deleteInputEntries(inputIndex, keyTypes);\n}\n\n/**\n * Writes a script push operation to buf, which looks different\n * depending on the size of the data. See\n * https://en.bitcoin.it/wiki/Script#Constants\n *\n * @param buf the BufferWriter to write to\n * @param data the Buffer to be pushed.\n */\nfunction writePush(buf: BufferWriter, data: Buffer) {\n  if (data.length <= 75) {\n    buf.writeUInt8(data.length);\n  } else if (data.length <= 256) {\n    buf.writeUInt8(76);\n    buf.writeUInt8(data.length);\n  } else if (data.length <= 256 * 256) {\n    buf.writeUInt8(77);\n    const b = Buffer.alloc(2);\n    b.writeUInt16LE(data.length, 0);\n    buf.writeSlice(b);\n  }\n  buf.writeSlice(data);\n}\n","export function getVarint(data: Buffer, offset: number): [number, number] {\n  if (data[offset] < 0xfd) {\n    return [data[offset], 1];\n  }\n\n  if (data[offset] === 0xfd) {\n    return [(data[offset + 2] << 8) + data[offset + 1], 3];\n  }\n\n  if (data[offset] === 0xfe) {\n    return [\n      (data[offset + 4] << 24) +\n        (data[offset + 3] << 16) +\n        (data[offset + 2] << 8) +\n        data[offset + 1],\n      5,\n    ];\n  }\n\n  throw new Error(\"getVarint called with unexpected parameters\");\n}\nexport function createVarint(value: number): Buffer {\n  if (value < 0xfd) {\n    const buffer = Buffer.alloc(1);\n    buffer[0] = value;\n    return buffer;\n  }\n\n  if (value <= 0xffff) {\n    const buffer = Buffer.alloc(3);\n    buffer[0] = 0xfd;\n    buffer[1] = value & 0xff;\n    buffer[2] = (value >> 8) & 0xff;\n    return buffer;\n  }\n\n  const buffer = Buffer.alloc(5);\n  buffer[0] = 0xfe;\n  buffer[1] = value & 0xff;\n  buffer[2] = (value >> 8) & 0xff;\n  buffer[3] = (value >> 16) & 0xff;\n  buffer[4] = (value >> 24) & 0xff;\n  return buffer;\n}\n","import type { Transaction } from \"./types\";\nimport { createVarint } from \"./varint\";\n\n/**\n  @example\nconst tx1 = btc.splitTransaction(\"01000000014ea60aeac5252c14291d428915bd7ccd1bfc4af009f4d4dc57ae597ed0420b71010000008a47304402201f36a12c240dbf9e566bc04321050b1984cd6eaf6caee8f02bb0bfec08e3354b022012ee2aeadcbbfd1e92959f57c15c1c6debb757b798451b104665aa3010569b49014104090b15bde569386734abf2a2b99f9ca6a50656627e77de663ca7325702769986cf26cc9dd7fdea0af432c8e2becc867c932e1b9dd742f2a108997c2252e2bdebffffffff0281b72e00000000001976a91472a5d75c8d2d0565b656a5232703b167d50d5a2b88aca0860100000000001976a9144533f5fb9b4817f713c48f0bfe96b9f50c476c9b88ac00000000\");\nconst outputScript = btc.serializeTransactionOutputs(tx1).toString('hex');\n  */\nexport function serializeTransactionOutputs({ outputs }: Transaction): Buffer {\n  let outputBuffer = Buffer.alloc(0);\n\n  if (typeof outputs !== \"undefined\") {\n    outputBuffer = Buffer.concat([outputBuffer, createVarint(outputs.length)]);\n    outputs.forEach(output => {\n      outputBuffer = Buffer.concat([\n        outputBuffer,\n        output.amount,\n        createVarint(output.script.length),\n        output.script,\n      ]);\n    });\n  }\n\n  return outputBuffer;\n}\nexport function serializeTransaction(\n  transaction: Transaction,\n  skipWitness: boolean,\n  timestamp?: Buffer,\n  additionals: string[] = [],\n) {\n  const isDecred = additionals.includes(\"decred\");\n  const isZcash = additionals.includes(\"zcash\");\n  const isBech32 = additionals.includes(\"bech32\");\n  let inputBuffer = Buffer.alloc(0);\n  const useWitness = typeof transaction[\"witness\"] != \"undefined\" && !skipWitness;\n  transaction.inputs.forEach(input => {\n    inputBuffer =\n      isDecred || isBech32\n        ? Buffer.concat([\n            inputBuffer,\n            input.prevout,\n            Buffer.from([0x00]), //tree\n            input.sequence,\n          ])\n        : Buffer.concat([\n            inputBuffer,\n            input.prevout,\n            createVarint(input.script.length),\n            input.script,\n            input.sequence,\n          ]);\n  });\n  let outputBuffer = serializeTransactionOutputs(transaction);\n\n  if (typeof transaction.outputs !== \"undefined\" && typeof transaction.locktime !== \"undefined\") {\n    outputBuffer = Buffer.concat([\n      outputBuffer,\n      (useWitness && transaction.witness) || Buffer.alloc(0),\n      transaction.locktime,\n      transaction.nExpiryHeight || Buffer.alloc(0),\n      transaction.extraData || Buffer.alloc(0),\n    ]);\n  }\n  // from to https://zips.z.cash/zip-0225, zcash is different with other coins, the lock_time and nExpiryHeight fields are before the inputs and outputs\n  if (isZcash) {\n    return Buffer.concat([\n      transaction.version,\n      transaction.nVersionGroupId || Buffer.alloc(0),\n      Buffer.from([0xb4, 0xd0, 0xd6, 0xc2]), // Zcash Consensus Branch ID: 0xC2D6D0B4 refer to https://z.cash/upgrade/nu5/\n      transaction.locktime || Buffer.from([0x00, 0x00, 0x00, 0x00]),\n      transaction.nExpiryHeight || Buffer.from([0x00, 0x00, 0x00, 0x00]),\n      useWitness ? Buffer.from(\"0001\", \"hex\") : Buffer.alloc(0),\n      createVarint(transaction.inputs.length),\n      inputBuffer,\n      outputBuffer,\n    ]);\n  }\n  return Buffer.concat([\n    transaction.version,\n    timestamp ? timestamp : Buffer.alloc(0),\n    transaction.nVersionGroupId || Buffer.alloc(0),\n    useWitness ? Buffer.from(\"0001\", \"hex\") : Buffer.alloc(0),\n    createVarint(transaction.inputs.length),\n    inputBuffer,\n    outputBuffer,\n  ]);\n}\n","import { crypto } from \"bitcoinjs-lib\";\nimport { pointCompress } from \"tiny-secp256k1\";\nimport {\n  getXpubComponents,\n  hardenedPathOf,\n  pathArrayToString,\n  pathStringToArray,\n  pubkeyFromXpub,\n} from \"./bip32\";\nimport { BufferReader } from \"./buffertools\";\nimport type { CreateTransactionArg } from \"./createTransaction\";\nimport type { AddressFormat } from \"./getWalletPublicKey\";\nimport {\n  AccountType,\n  p2pkh,\n  p2tr,\n  p2wpkh,\n  p2wpkhWrapped,\n  SpendingCondition,\n} from \"./newops/accounttype\";\nimport { AppClient as Client } from \"./newops/appClient\";\nimport { createKey, DefaultDescriptorTemplate, WalletPolicy } from \"./newops/policy\";\nimport { extract } from \"./newops/psbtExtractor\";\nimport { finalize } from \"./newops/psbtFinalizer\";\nimport { psbtIn, PsbtV2 } from \"./newops/psbtv2\";\nimport { serializeTransaction } from \"./serializeTransaction\";\nimport type { Transaction } from \"./types\";\n\n/**\n * This class implements the same interface as BtcOld (formerly\n * named Btc), but interacts with Bitcoin hardware app version 2+\n * which uses a totally new APDU protocol. This new\n * protocol is documented at\n * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/bitcoin.md\n *\n * Since the interface must remain compatible with BtcOld, the methods\n * of this class are quite clunky, because it needs to adapt legacy\n * input data into the PSBT process. In the future, a new interface should\n * be developed that exposes PSBT to the outer world, which would render\n * a much cleaner implementation.\n */\nexport default class BtcNew {\n  constructor(private client: Client) {}\n\n  /**\n   * This is a new method that allow users to get an xpub at a standard path.\n   * Standard paths are described at\n   * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/bitcoin.md#description\n   *\n   * This boils down to paths (N=0 for Bitcoin, N=1 for Testnet):\n   * M/44'/N'/x'/**\n   * M/48'/N'/x'/y'/**\n   * M/49'/N'/x'/**\n   * M/84'/N'/x'/**\n   * M/86'/N'/x'/**\n   *\n   * The method was added because of added security in the hardware app v2+. The\n   * new hardware app will allow export of any xpub up to and including the\n   * deepest hardened key of standard derivation paths, whereas the old app\n   * would allow export of any key.\n   *\n   * This caused an issue for callers of this class, who only had\n   * getWalletPublicKey() to call which means they have to constuct xpub\n   * themselves:\n   *\n   * Suppose a user of this class wants to create an account xpub on a standard\n   * path, M/44'/0'/Z'. The user must get the parent key fingerprint (see BIP32)\n   * by requesting the parent key M/44'/0'. The new app won't allow that, because\n   * it only allows exporting deepest level hardened path. So the options are to\n   * allow requesting M/44'/0' from the app, or to add a new function\n   * \"getWalletXpub\".\n   *\n   * We opted for adding a new function, which can greatly simplify client code.\n   */\n  async getWalletXpub({\n    path,\n    xpubVersion,\n  }: {\n    path: string;\n    xpubVersion: number;\n  }): Promise<string> {\n    const pathElements: number[] = pathStringToArray(path);\n    const xpub = await this.client.getExtendedPubkey(false, pathElements);\n    const xpubComponents = getXpubComponents(xpub);\n    if (xpubComponents.version != xpubVersion) {\n      throw new Error(\n        `Expected xpub version ${xpubVersion} doesn't match the xpub version from the device ${xpubComponents.version}`,\n      );\n    }\n    return xpub;\n  }\n\n  /**\n   * This method returns a public key, a bitcoin address, and and a chaincode\n   * for a specific derivation path.\n   *\n   * Limitation: If the path is not a leaf node of a standard path, the address\n   * will be the empty string \"\", see this.getWalletAddress() for details.\n   */\n  async getWalletPublicKey(\n    path: string,\n    opts?: {\n      verify?: boolean;\n      format?: AddressFormat;\n    },\n  ): Promise<{\n    publicKey: string;\n    bitcoinAddress: string;\n    chainCode: string;\n  }> {\n    if (!isPathNormal(path)) {\n      throw Error(`non-standard path: ${path}`);\n    }\n    const pathElements: number[] = pathStringToArray(path);\n    const xpub = await this.client.getExtendedPubkey(false, pathElements);\n\n    const display = opts?.verify ?? false;\n\n    const address = await this.getWalletAddress(\n      pathElements,\n      descrTemplFrom(opts?.format ?? \"legacy\"),\n      display,\n    );\n    const components = getXpubComponents(xpub);\n    const uncompressedPubkey = Buffer.from(pointCompress(components.pubkey, false));\n    return {\n      publicKey: uncompressedPubkey.toString(\"hex\"),\n      bitcoinAddress: address,\n      chainCode: components.chaincode.toString(\"hex\"),\n    };\n  }\n\n  /**\n   * Get an address for the specified path.\n   *\n   * If display is true, we must get the address from the device, which would require\n   * us to determine WalletPolicy. This requires two *extra* queries to the device, one\n   * for the account xpub and one for master key fingerprint.\n   *\n   * If display is false we *could* generate the address ourselves, but chose to\n   * get it from the device to save development time. However, it shouldn't take\n   * too much time to implement local address generation.\n   *\n   * Moreover, if the path is not for a leaf, ie accountPath+/X/Y, there is no\n   * way to get the address from the device. In this case we have to create it\n   * ourselves, but we don't at this time, and instead return an empty (\"\") address.\n   */\n  private async getWalletAddress(\n    pathElements: number[],\n    descrTempl: DefaultDescriptorTemplate,\n    display: boolean,\n  ): Promise<string> {\n    const accountPath = hardenedPathOf(pathElements);\n    if (accountPath.length + 2 != pathElements.length) {\n      return \"\";\n    }\n    const accountXpub = await this.client.getExtendedPubkey(false, accountPath);\n    const masterFingerprint = await this.client.getMasterFingerprint();\n    const policy = new WalletPolicy(\n      descrTempl,\n      createKey(masterFingerprint, accountPath, accountXpub),\n    );\n    const changeAndIndex = pathElements.slice(-2, pathElements.length);\n    return this.client.getWalletAddress(\n      policy,\n      Buffer.alloc(32, 0),\n      changeAndIndex[0],\n      changeAndIndex[1],\n      display,\n    );\n  }\n\n  /**\n   * Build and sign a transaction. See Btc.createPaymentTransaction for\n   * details on how to use this method.\n   *\n   * This method will convert the legacy arguments, CreateTransactionArg, into\n   * a psbt which is finally signed and finalized, and the extracted fully signed\n   * transaction is returned.\n   */\n  async createPaymentTransaction(arg: CreateTransactionArg): Promise<string> {\n    const inputCount = arg.inputs.length;\n    if (inputCount == 0) {\n      throw Error(\"No inputs\");\n    }\n    const psbt = new PsbtV2();\n    // The master fingerprint is needed when adding BIP32 derivation paths on\n    // the psbt.\n    const masterFp = await this.client.getMasterFingerprint();\n\n    const accountType = accountTypeFromArg(arg, psbt, masterFp);\n\n    if (arg.lockTime != undefined) {\n      // The signer will assume locktime 0 if unset\n      psbt.setGlobalFallbackLocktime(arg.lockTime);\n    }\n    psbt.setGlobalInputCount(inputCount);\n    psbt.setGlobalPsbtVersion(2);\n    psbt.setGlobalTxVersion(2);\n\n    let notifyCount = 0;\n    const progress = () => {\n      if (!arg.onDeviceStreaming) return;\n      arg.onDeviceStreaming({\n        total: 2 * inputCount,\n        index: notifyCount,\n        progress: ++notifyCount / (2 * inputCount),\n      });\n    };\n\n    let accountXpub = \"\";\n    let accountPath: number[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      progress();\n      const pathElems: number[] = pathStringToArray(arg.associatedKeysets[i]);\n      if (accountXpub == \"\") {\n        // We assume all inputs belong to the same account so we set\n        // the account xpub and path based on the first input.\n        accountPath = pathElems.slice(0, -2);\n        accountXpub = await this.client.getExtendedPubkey(false, accountPath);\n      }\n      await this.setInput(\n        psbt,\n        i,\n        arg.inputs[i],\n        pathElems,\n        accountType,\n        masterFp,\n        arg.sigHashType,\n      );\n    }\n\n    const outputsConcat = Buffer.from(arg.outputScriptHex, \"hex\");\n    const outputsBufferReader = new BufferReader(outputsConcat);\n    const outputCount = outputsBufferReader.readVarInt();\n    psbt.setGlobalOutputCount(outputCount);\n    const changeData = await this.outputScriptAt(accountPath, accountType, arg.changePath);\n    // If the caller supplied a changePath, we must make sure there actually is\n    // a change output. If no change output found, we'll throw an error.\n    let changeFound = !changeData;\n    for (let i = 0; i < outputCount; i++) {\n      const amount = Number(outputsBufferReader.readUInt64());\n      const outputScript = outputsBufferReader.readVarSlice();\n      psbt.setOutputAmount(i, amount);\n      psbt.setOutputScript(i, outputScript);\n\n      // We won't know if we're paying to ourselves, because there's no\n      // information in arg to support multiple \"change paths\". One exception is\n      // if there are multiple outputs to the change address.\n      const isChange = changeData && outputScript.equals(changeData?.cond.scriptPubKey);\n      if (isChange) {\n        changeFound = true;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const changePath = pathStringToArray(arg.changePath!);\n        const pubkey = changeData.pubkey;\n\n        accountType.setOwnOutput(i, changeData.cond, [pubkey], [changePath]);\n      }\n    }\n    if (!changeFound) {\n      throw new Error(\n        \"Change script not found among outputs! \" + changeData?.cond.scriptPubKey.toString(\"hex\"),\n      );\n    }\n\n    const key = createKey(masterFp, accountPath, accountXpub);\n    const p = new WalletPolicy(accountType.getDescriptorTemplate(), key);\n    // This is cheating, because it's not actually requested on the\n    // device yet, but it will be, soonish.\n    if (arg.onDeviceSignatureRequested) arg.onDeviceSignatureRequested();\n\n    let firstSigned = false;\n    // This callback will be called once for each signature yielded.\n    const progressCallback = () => {\n      if (!firstSigned) {\n        firstSigned = true;\n        arg.onDeviceSignatureGranted && arg.onDeviceSignatureGranted();\n      }\n      progress();\n    };\n\n    await this.signPsbt(psbt, p, progressCallback);\n    finalize(psbt);\n    const serializedTx = extract(psbt);\n    return serializedTx.toString(\"hex\");\n  }\n\n  /**\n   * Signs an arbitrary hex-formatted message with the private key at\n   * the provided derivation path according to the Bitcoin Signature format\n   * and returns v, r, s.\n   */\n  async signMessage({ path, messageHex }: { path: string; messageHex: string }): Promise<{\n    v: number;\n    r: string;\n    s: string;\n  }> {\n    const pathElements: number[] = pathStringToArray(path);\n    const message = Buffer.from(messageHex, \"hex\");\n    const sig = await this.client.signMessage(message, pathElements);\n    const buf = Buffer.from(sig, \"base64\");\n\n    const v = buf.readUInt8() - 27 - 4;\n    const r = buf.slice(1, 33).toString(\"hex\");\n    const s = buf.slice(33, 65).toString(\"hex\");\n\n    return {\n      v,\n      r,\n      s,\n    };\n  }\n\n  /**\n   * Calculates an output script along with public key and possible redeemScript\n   * from a path and accountType. The accountPath must be a prefix of path.\n   *\n   * @returns an object with output script (property \"script\"), redeemScript (if\n   * wrapped p2wpkh), and pubkey at provided path. The values of these three\n   * properties depend on the accountType used.\n   */\n  private async outputScriptAt(\n    accountPath: number[],\n    accountType: AccountType,\n    path: string | undefined,\n  ): Promise<{ cond: SpendingCondition; pubkey: Buffer } | undefined> {\n    if (!path) return undefined;\n    const pathElems = pathStringToArray(path);\n    // Make sure path is in our account, otherwise something fishy is probably\n    // going on.\n    for (let i = 0; i < accountPath.length; i++) {\n      if (accountPath[i] != pathElems[i]) {\n        throw new Error(`Path ${path} not in account ${pathArrayToString(accountPath)}`);\n      }\n    }\n    const xpub = await this.client.getExtendedPubkey(false, pathElems);\n    const pubkey = pubkeyFromXpub(xpub);\n    const cond = accountType.spendingCondition([pubkey]);\n    return { cond, pubkey };\n  }\n\n  /**\n   * Adds relevant data about an input to the psbt. This includes sequence,\n   * previous txid, output index, spent UTXO, redeem script for wrapped p2wpkh,\n   * public key and its derivation path.\n   */\n  private async setInput(\n    psbt: PsbtV2,\n    i: number,\n    input: [Transaction, number, string | null | undefined, number | null | undefined],\n    pathElements: number[],\n    accountType: AccountType,\n    masterFP: Buffer,\n    sigHashType?: number,\n  ): Promise<void> {\n    const inputTx = input[0];\n    const spentOutputIndex = input[1];\n    // redeemScript will be null for wrapped p2wpkh, we need to create it\n    // ourselves. But if set, it should be used.\n    const redeemScript = input[2] ? Buffer.from(input[2], \"hex\") : undefined;\n    const sequence = input[3];\n    if (sequence != undefined) {\n      psbt.setInputSequence(i, sequence);\n    }\n    if (sigHashType != undefined) {\n      psbt.setInputSighashType(i, sigHashType);\n    }\n    const inputTxBuffer = serializeTransaction(inputTx, true);\n    const inputTxid = crypto.hash256(inputTxBuffer);\n    const xpubBase58 = await this.client.getExtendedPubkey(false, pathElements);\n\n    const pubkey = pubkeyFromXpub(xpubBase58);\n    if (!inputTx.outputs) throw Error(\"Missing outputs array in transaction to sign\");\n    const spentTxOutput = inputTx.outputs[spentOutputIndex];\n    const spendCondition: SpendingCondition = {\n      scriptPubKey: spentTxOutput.script,\n      redeemScript: redeemScript,\n    };\n    const spentOutput = { cond: spendCondition, amount: spentTxOutput.amount };\n    accountType.setInput(i, inputTxBuffer, spentOutput, [pubkey], [pathElements]);\n\n    psbt.setInputPreviousTxId(i, inputTxid);\n    psbt.setInputOutputIndex(i, spentOutputIndex);\n  }\n\n  /**\n   * This implements the \"Signer\" role of the BIP370 transaction signing\n   * process.\n   *\n   * It ssks the hardware device to sign the a psbt using the specified wallet\n   * policy. This method assumes BIP32 derived keys are used for all inputs, see\n   * comment in-line. The signatures returned from the hardware device is added\n   * to the appropriate input fields of the PSBT.\n   */\n  private async signPsbt(\n    psbt: PsbtV2,\n    walletPolicy: WalletPolicy,\n    progressCallback: () => void,\n  ): Promise<void> {\n    const sigs: Map<number, Buffer> = await this.client.signPsbt(\n      psbt,\n      walletPolicy,\n      Buffer.alloc(32, 0),\n      progressCallback,\n    );\n    sigs.forEach((v, k) => {\n      // Note: Looking at BIP32 derivation does not work in the generic case,\n      // since some inputs might not have a BIP32-derived pubkey.\n      const pubkeys = psbt.getInputKeyDatas(k, psbtIn.BIP32_DERIVATION);\n      let pubkey;\n      if (pubkeys.length != 1) {\n        // No legacy BIP32_DERIVATION, assume we're using taproot.\n        pubkey = psbt.getInputKeyDatas(k, psbtIn.TAP_BIP32_DERIVATION);\n        if (pubkey.length == 0) {\n          throw Error(`Missing pubkey derivation for input ${k}`);\n        }\n        psbt.setInputTapKeySig(k, v);\n      } else {\n        pubkey = pubkeys[0];\n        psbt.setInputPartialSig(k, pubkey, v);\n      }\n    });\n  }\n}\n\nfunction descrTemplFrom(addressFormat: AddressFormat): DefaultDescriptorTemplate {\n  if (addressFormat == \"legacy\") return \"pkh(@0)\";\n  if (addressFormat == \"p2sh\") return \"sh(wpkh(@0))\";\n  if (addressFormat == \"bech32\") return \"wpkh(@0)\";\n  if (addressFormat == \"bech32m\") return \"tr(@0)\";\n  throw new Error(\"Unsupported address format \" + addressFormat);\n}\n\nfunction accountTypeFromArg(\n  arg: CreateTransactionArg,\n  psbt: PsbtV2,\n  masterFp: Buffer,\n): AccountType {\n  if (arg.additionals.includes(\"bech32m\")) return new p2tr(psbt, masterFp);\n  if (arg.additionals.includes(\"bech32\")) return new p2wpkh(psbt, masterFp);\n  if (arg.segwit) return new p2wpkhWrapped(psbt, masterFp);\n  return new p2pkh(psbt, masterFp);\n}\n\n/*\n  The new protocol only allows standard path.\n  Standard paths are (currently):\n  M/44'/(1|0)'/X'\n  M/49'/(1|0)'/X'\n  M/84'/(1|0)'/X'\n  M/86'/(1|0)'/X'\n  M/48'/(1|0)'/X'/Y'\n  followed by \"\", \"(0|1)\", or \"(0|1)/b\", where a and b are \n  non-hardened. For example, the following paths are standard\n  M/48'/1'/99'/7'\n  M/86'/1'/99'/0\n  M/48'/0'/99'/7'/1/17\n  The following paths are non-standard\n  M/48'/0'/99'           // Not deepest hardened path\n  M/48'/0'/99'/7'/1/17/2 // Too many non-hardened derivation steps\n  M/199'/0'/1'/0/88      // Not a known purpose 199\n  M/86'/1'/99'/2         // Change path item must be 0 or 1\n*/\nfunction isPathNormal(path: string): boolean {\n  //path is not deepest hardened node of a standard path or deeper, use BtcOld\n  const h = 0x80000000; //HARDENED from bip32\n  const pathElems = pathStringToArray(path);\n\n  const hard = (n: number) => n >= h;\n  const soft = (n: number | undefined) => n === undefined || n < h;\n  const change = (n: number | undefined) => n === undefined || n === 0 || n === 1;\n\n  if (\n    pathElems.length >= 3 &&\n    pathElems.length <= 5 &&\n    [44 + h, 49 + h, 84 + h, 86 + h].some(v => v == pathElems[0]) &&\n    [0 + h, 1 + h].some(v => v == pathElems[1]) &&\n    hard(pathElems[2]) &&\n    change(pathElems[3]) &&\n    soft(pathElems[4])\n  ) {\n    return true;\n  }\n  if (\n    pathElems.length >= 4 &&\n    pathElems.length <= 6 &&\n    48 + h == pathElems[0] &&\n    [0 + h, 1 + h].some(v => v == pathElems[1]) &&\n    hard(pathElems[2]) &&\n    hard(pathElems[3]) &&\n    change(pathElems[4]) &&\n    soft(pathElems[5])\n  ) {\n    return true;\n  }\n  return false;\n}\n","import type Transport from \"@ledgerhq/hw-transport\";\nimport { bip32asBuffer } from \"./bip32\";\n\n/**\n * address format is one of legacy | p2sh | bech32 | cashaddr\n */\nexport type AddressFormat = \"legacy\" | \"p2sh\" | \"bech32\" | \"bech32m\" | \"cashaddr\";\nconst addressFormatMap = {\n  legacy: 0,\n  p2sh: 1,\n  bech32: 2,\n  cashaddr: 3,\n};\nexport async function getWalletPublicKey(\n  transport: Transport,\n  options: {\n    path: string;\n    verify?: boolean;\n    format?: AddressFormat;\n  },\n): Promise<{\n  publicKey: string;\n  bitcoinAddress: string;\n  chainCode: string;\n}> {\n  const { path, verify, format } = {\n    verify: false,\n    format: \"legacy\",\n    ...options,\n  };\n\n  if (!(format in addressFormatMap)) {\n    throw new Error(\"btc.getWalletPublicKey invalid format=\" + format);\n  }\n\n  const buffer = bip32asBuffer(path);\n  const p1 = verify ? 1 : 0;\n  const p2 = addressFormatMap[format];\n  const response = await transport.send(0xe0, 0x40, p1, p2, buffer);\n  const publicKeyLength = response[0];\n  const addressLength = response[1 + publicKeyLength];\n  const publicKey = response.slice(1, 1 + publicKeyLength).toString(\"hex\");\n  const bitcoinAddress = response\n    .slice(1 + publicKeyLength + 1, 1 + publicKeyLength + 1 + addressLength)\n    .toString(\"ascii\");\n  const chainCode = response\n    .slice(1 + publicKeyLength + 1 + addressLength, 1 + publicKeyLength + 1 + addressLength + 32)\n    .toString(\"hex\");\n  return {\n    publicKey,\n    bitcoinAddress,\n    chainCode,\n  };\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import invariant from \"invariant\";\nimport type Transport from \"@ledgerhq/hw-transport\";\nimport type { Transaction } from \"./types\";\nimport { MAX_SCRIPT_BLOCK } from \"./constants\";\nimport { createVarint } from \"./varint\";\nexport async function getTrustedInputRaw(\n  transport: Transport,\n  transactionData: Buffer,\n  indexLookup?: number | null | undefined,\n): Promise<string> {\n  let data;\n  let firstRound = false;\n\n  if (typeof indexLookup === \"number\") {\n    firstRound = true;\n    const prefix = Buffer.alloc(4);\n    prefix.writeUInt32BE(indexLookup, 0);\n    data = Buffer.concat([prefix, transactionData], transactionData.length + 4);\n  } else {\n    data = transactionData;\n  }\n\n  const trustedInput = await transport.send(0xe0, 0x42, firstRound ? 0x00 : 0x80, 0x00, data);\n  const res = trustedInput.slice(0, trustedInput.length - 2).toString(\"hex\");\n  return res;\n}\nexport async function getTrustedInput(\n  transport: Transport,\n  indexLookup: number,\n  transaction: Transaction,\n  additionals: Array<string> = [],\n): Promise<string> {\n  const { version, inputs, outputs, locktime, nExpiryHeight, extraData } = transaction;\n\n  if (!outputs || !locktime) {\n    throw new Error(\"getTrustedInput: locktime & outputs is expected\");\n  }\n\n  const isDecred = additionals.includes(\"decred\");\n  const isXST = additionals.includes(\"stealthcoin\");\n\n  const processScriptBlocks = async (script, sequence?: Buffer) => {\n    const seq = sequence || Buffer.alloc(0);\n    const scriptBlocks: Buffer[] = [];\n    let offset = 0;\n\n    while (offset !== script.length) {\n      const blockSize =\n        script.length - offset > MAX_SCRIPT_BLOCK ? MAX_SCRIPT_BLOCK : script.length - offset;\n\n      if (offset + blockSize !== script.length) {\n        scriptBlocks.push(script.slice(offset, offset + blockSize));\n      } else {\n        scriptBlocks.push(Buffer.concat([script.slice(offset, offset + blockSize), seq]));\n      }\n\n      offset += blockSize;\n    }\n\n    // Handle case when no script length: we still want to pass the sequence\n    // relatable: https://github.com/LedgerHQ/ledger-live-desktop/issues/1386\n    if (script.length === 0) {\n      scriptBlocks.push(seq);\n    }\n\n    let res;\n\n    for (const scriptBlock of scriptBlocks) {\n      res = await getTrustedInputRaw(transport, scriptBlock);\n    }\n\n    return res;\n  };\n\n  const processWholeScriptBlock = block => getTrustedInputRaw(transport, block);\n\n  await getTrustedInputRaw(\n    transport,\n    Buffer.concat([\n      transaction.version,\n      transaction.timestamp || Buffer.alloc(0),\n      transaction.nVersionGroupId || Buffer.alloc(0),\n      createVarint(inputs.length),\n    ]),\n    indexLookup,\n  );\n\n  for (const input of inputs) {\n    const isXSTV2 = isXST && Buffer.compare(version, Buffer.from([0x02, 0x00, 0x00, 0x00])) === 0;\n    const treeField = isDecred ? input.tree || Buffer.from([0x00]) : Buffer.alloc(0);\n    const data = Buffer.concat([\n      input.prevout,\n      treeField,\n      isXSTV2 ? Buffer.from([0x00]) : createVarint(input.script.length),\n    ]);\n    await getTrustedInputRaw(transport, data);\n    // iteration (eachSeries) ended\n    // TODO notify progress\n    // deferred.notify(\"input\");\n    // Reference: https://github.com/StealthSend/Stealth/commit/5be35d6c2c500b32ed82e5d6913d66d18a4b0a7f#diff-e8db9b851adc2422aadfffca88f14c91R566\n    await (isDecred\n      ? processWholeScriptBlock(Buffer.concat([input.script, input.sequence]))\n      : isXSTV2\n      ? processWholeScriptBlock(input.sequence)\n      : processScriptBlocks(input.script, input.sequence));\n  }\n\n  await getTrustedInputRaw(transport, createVarint(outputs.length));\n\n  for (const output of outputs) {\n    const data = Buffer.concat([\n      output.amount,\n      isDecred ? Buffer.from([0x00, 0x00]) : Buffer.alloc(0), //Version script\n      createVarint(output.script.length),\n      output.script,\n    ]);\n    await getTrustedInputRaw(transport, data);\n  }\n\n  const endData: Buffer[] = [];\n\n  if (nExpiryHeight && nExpiryHeight.length > 0) {\n    endData.push(nExpiryHeight);\n  }\n\n  if (extraData && extraData.length > 0) {\n    endData.push(extraData);\n  }\n\n  let extraPart;\n\n  if (endData.length) {\n    const data = Buffer.concat(endData);\n    extraPart = isDecred ? data : Buffer.concat([createVarint(data.length), data]);\n  }\n\n  const res = await processScriptBlocks(Buffer.concat([locktime, extraPart || Buffer.alloc(0)]));\n  invariant(res, \"missing result in processScriptBlocks\");\n  return res;\n}\n","import type Transport from \"@ledgerhq/hw-transport\";\nimport type { Transaction } from \"./types\";\nimport { createVarint } from \"./varint\";\nimport { MAX_SCRIPT_BLOCK } from \"./constants\";\nexport function startUntrustedHashTransactionInputRaw(\n  transport: Transport,\n  newTransaction: boolean,\n  firstRound: boolean,\n  transactionData: Buffer,\n  bip143 = false,\n  overwinter = false,\n  additionals: Array<string> = [],\n): Promise<Buffer> {\n  const p2 = additionals.includes(\"cashaddr\")\n    ? 0x03\n    : bip143\n    ? additionals.includes(\"sapling\")\n      ? 0x05\n      : overwinter\n      ? 0x04\n      : 0x02\n    : 0x00;\n  return transport.send(\n    0xe0,\n    0x44,\n    firstRound ? 0x00 : 0x80,\n    newTransaction ? p2 : 0x80,\n    transactionData,\n  );\n}\nexport async function startUntrustedHashTransactionInput(\n  transport: Transport,\n  newTransaction: boolean,\n  transaction: Transaction,\n  inputs: Array<{\n    trustedInput: boolean;\n    value: Buffer;\n  }>,\n  bip143 = false,\n  overwinter = false,\n  additionals: Array<string> = [],\n  useTrustedInputForSegwit = false,\n): Promise<any> {\n  let data = Buffer.concat([\n    transaction.version,\n    transaction.timestamp || Buffer.alloc(0),\n    transaction.nVersionGroupId || Buffer.alloc(0),\n    createVarint(transaction.inputs.length),\n  ]);\n  await startUntrustedHashTransactionInputRaw(\n    transport,\n    newTransaction,\n    true,\n    data,\n    bip143,\n    overwinter,\n    additionals,\n  );\n  let i = 0;\n  const isDecred = additionals.includes(\"decred\");\n\n  for (const input of transaction.inputs) {\n    let prefix;\n    const inputValue = inputs[i].value;\n\n    if (bip143) {\n      if (useTrustedInputForSegwit && inputs[i].trustedInput) {\n        prefix = Buffer.from([0x01, inputValue.length]);\n      } else {\n        prefix = Buffer.from([0x02]);\n      }\n    } else {\n      if (inputs[i].trustedInput) {\n        prefix = Buffer.from([0x01, inputs[i].value.length]);\n      } else {\n        prefix = Buffer.from([0x00]);\n      }\n    }\n\n    data = Buffer.concat([\n      prefix,\n      inputValue,\n      isDecred ? Buffer.from([0x00]) : Buffer.alloc(0),\n      createVarint(input.script.length),\n    ]);\n    await startUntrustedHashTransactionInputRaw(\n      transport,\n      newTransaction,\n      false,\n      data,\n      bip143,\n      overwinter,\n      additionals,\n    );\n    const scriptBlocks: Buffer[] = [];\n    let offset = 0;\n\n    if (input.script.length === 0) {\n      scriptBlocks.push(input.sequence);\n    } else {\n      while (offset !== input.script.length) {\n        const blockSize =\n          input.script.length - offset > MAX_SCRIPT_BLOCK\n            ? MAX_SCRIPT_BLOCK\n            : input.script.length - offset;\n\n        if (offset + blockSize !== input.script.length) {\n          scriptBlocks.push(input.script.slice(offset, offset + blockSize));\n        } else {\n          scriptBlocks.push(\n            Buffer.concat([input.script.slice(offset, offset + blockSize), input.sequence]),\n          );\n        }\n\n        offset += blockSize;\n      }\n    }\n\n    for (const scriptBlock of scriptBlocks) {\n      await startUntrustedHashTransactionInputRaw(\n        transport,\n        newTransaction,\n        false,\n        scriptBlock,\n        bip143,\n        overwinter,\n        additionals,\n      );\n    }\n\n    i++;\n  }\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport shajs from \"sha.js\";\nimport type { Transaction } from \"./types\";\nimport { serializeTransaction } from \"./serializeTransaction\";\nexport function getTrustedInputBIP143(\n  transport: Transport,\n  indexLookup: number,\n  transaction: Transaction,\n  additionals: Array<string> = [],\n): string {\n  if (!transaction) {\n    throw new Error(\"getTrustedInputBIP143: missing tx\");\n  }\n\n  const isDecred = additionals.includes(\"decred\");\n\n  if (isDecred) {\n    throw new Error(\"Decred does not implement BIP143\");\n  }\n\n  let hash = shajs(\"sha256\")\n    .update(shajs(\"sha256\").update(serializeTransaction(transaction, true)).digest())\n    .digest();\n  const data = Buffer.alloc(4);\n  data.writeUInt32LE(indexLookup, 0);\n  const { outputs, locktime } = transaction;\n\n  if (!outputs || !locktime) {\n    throw new Error(\"getTrustedInputBIP143: locktime & outputs is expected\");\n  }\n\n  if (!outputs[indexLookup]) {\n    throw new Error(\"getTrustedInputBIP143: wrong index\");\n  }\n\n  hash = Buffer.concat([hash, data, outputs[indexLookup].amount]);\n  return hash.toString(\"hex\");\n}\n","export function compressPublicKey(publicKey: Buffer): Buffer {\n  const prefix = (publicKey[64] & 1) !== 0 ? 0x03 : 0x02;\n  const prefixBuffer = Buffer.alloc(1);\n  prefixBuffer[0] = prefix;\n  return Buffer.concat([prefixBuffer, publicKey.slice(1, 1 + 32)]);\n}\n","import type Transport from \"@ledgerhq/hw-transport\";\nimport { bip32asBuffer } from \"./bip32\";\nexport function signTransaction(\n  transport: Transport,\n  path: string,\n  lockTime: number,\n  sigHashType: number,\n  expiryHeight?: Buffer,\n  additionals: Array<string> = [],\n): Promise<Buffer> {\n  const isDecred = additionals.includes(\"decred\");\n  const pathsBuffer = bip32asBuffer(path);\n  const lockTimeBuffer = Buffer.alloc(4);\n  lockTimeBuffer.writeUInt32BE(lockTime, 0);\n  let buffer = isDecred\n    ? Buffer.concat([\n        pathsBuffer,\n        lockTimeBuffer,\n        expiryHeight || Buffer.from([0x00, 0x00, 0x00, 0x00]),\n        Buffer.from([sigHashType]),\n      ])\n    : Buffer.concat([pathsBuffer, Buffer.from([0x00]), lockTimeBuffer, Buffer.from([sigHashType])]);\n\n  if (expiryHeight && !isDecred) {\n    buffer = Buffer.concat([buffer, expiryHeight]);\n  }\n\n  return transport.send(0xe0, 0x48, 0x00, 0x00, buffer).then(result => {\n    if (result.length > 0) {\n      result[0] = 0x30;\n      return result.slice(0, result.length - 2);\n    }\n\n    return result;\n  });\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport { bip32asBuffer } from \"./bip32\";\nimport { MAX_SCRIPT_BLOCK } from \"./constants\";\nexport function provideOutputFullChangePath(transport: Transport, path: string): Promise<Buffer> {\n  const buffer = bip32asBuffer(path);\n  return transport.send(0xe0, 0x4a, 0xff, 0x00, buffer);\n}\nexport async function hashOutputFull(\n  transport: Transport,\n  outputScript: Buffer,\n  additionals: Array<string> = [],\n): Promise<Buffer | void> {\n  let offset = 0;\n  const p1 = Number(0x80);\n  const isDecred = additionals.includes(\"decred\");\n\n  ///WARNING: Decred works only with one call (without chunking)\n  //TODO: test without this for Decred\n  if (isDecred) {\n    return transport.send(0xe0, 0x4a, p1, 0x00, outputScript);\n  }\n\n  while (offset < outputScript.length) {\n    const blockSize =\n      offset + MAX_SCRIPT_BLOCK >= outputScript.length\n        ? outputScript.length - offset\n        : MAX_SCRIPT_BLOCK;\n    const p1 = offset + blockSize === outputScript.length ? 0x80 : 0x00;\n    const data = outputScript.slice(offset, offset + blockSize);\n    await transport.send(0xe0, 0x4a, p1, 0x00, data);\n    offset += blockSize;\n  }\n}\n","import invariant from \"invariant\";\nimport Transport from \"@ledgerhq/hw-transport\";\n\nexport type AppAndVersion = {\n  name: string;\n  version: string;\n  flags: number | Buffer;\n};\n\nexport const getAppAndVersion = async (transport: Transport): Promise<AppAndVersion> => {\n  const r = await transport.send(0xb0, 0x01, 0x00, 0x00);\n  let i = 0;\n  const format = r[i++];\n  invariant(format === 1, \"getAppAndVersion: format not supported\");\n  const nameLength = r[i++];\n  const name = r.slice(i, (i += nameLength)).toString(\"ascii\");\n  const versionLength = r[i++];\n  const version = r.slice(i, (i += versionLength)).toString(\"ascii\");\n  const flagLength = r[i++];\n  const flags = r.slice(i, (i += flagLength));\n  return {\n    name,\n    version,\n    flags,\n  };\n};\n\nexport const checkIsBtcLegacy = async (transport: Transport): Promise<boolean> => {\n  try {\n    // Call old btc API, it will throw an exception with new btc app. It is a workaround to differentiate new/old btc nano app\n    await transport.send(0xe0, 0xc4, 0, 0);\n  } catch (e: unknown) {\n    return false;\n  }\n  return true;\n};\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","import semver from \"semver\";\nexport function shouldUseTrustedInputForSegwit({\n  version,\n  name,\n}: {\n  version: string;\n  name: string;\n}): boolean {\n  if (name === \"Decred\") return false;\n  if (name === \"Exchange\") return true;\n  return semver.gte(version, \"1.4.0\");\n}\n","import { log } from \"@ledgerhq/logs\";\nimport type Transport from \"@ledgerhq/hw-transport\";\nimport { hashPublicKey } from \"./hashPublicKey\";\nimport { getWalletPublicKey } from \"./getWalletPublicKey\";\nimport type { AddressFormat } from \"./getWalletPublicKey\";\nimport { getTrustedInput } from \"./getTrustedInput\";\nimport { startUntrustedHashTransactionInput } from \"./startUntrustedHashTransactionInput\";\nimport { serializeTransaction } from \"./serializeTransaction\";\nimport { getTrustedInputBIP143 } from \"./getTrustedInputBIP143\";\nimport { compressPublicKey } from \"./compressPublicKey\";\nimport { signTransaction } from \"./signTransaction\";\nimport { hashOutputFull, provideOutputFullChangePath } from \"./finalizeInput\";\nimport { getAppAndVersion } from \"./getAppAndVersion\";\nimport type { TransactionOutput, Transaction } from \"./types\";\nimport {\n  DEFAULT_LOCKTIME,\n  DEFAULT_SEQUENCE,\n  SIGHASH_ALL,\n  OP_DUP,\n  OP_HASH160,\n  HASH_SIZE,\n  OP_EQUALVERIFY,\n  OP_CHECKSIG,\n} from \"./constants\";\nimport { shouldUseTrustedInputForSegwit } from \"./shouldUseTrustedInputForSegwit\";\nexport type { AddressFormat };\nconst defaultsSignTransaction = {\n  lockTime: DEFAULT_LOCKTIME,\n  sigHashType: SIGHASH_ALL,\n  segwit: false,\n  additionals: [],\n  onDeviceStreaming: _e => {},\n  onDeviceSignatureGranted: () => {},\n  onDeviceSignatureRequested: () => {},\n};\n\n/**\n *\n */\nexport type CreateTransactionArg = {\n  inputs: Array<[Transaction, number, string | null | undefined, number | null | undefined]>;\n  associatedKeysets: string[];\n  changePath?: string;\n  outputScriptHex: string;\n  lockTime?: number;\n  sigHashType?: number;\n  segwit?: boolean;\n  initialTimestamp?: number;\n  additionals: Array<string>;\n  expiryHeight?: Buffer;\n  useTrustedInputForSegwit?: boolean;\n  onDeviceStreaming?: (arg0: { progress: number; total: number; index: number }) => void;\n  onDeviceSignatureRequested?: () => void;\n  onDeviceSignatureGranted?: () => void;\n};\nexport async function createTransaction(\n  transport: Transport,\n  arg: CreateTransactionArg,\n): Promise<string> {\n  const signTx = { ...defaultsSignTransaction, ...arg };\n  const {\n    inputs,\n    associatedKeysets,\n    changePath,\n    outputScriptHex,\n    lockTime,\n    sigHashType,\n    segwit,\n    initialTimestamp,\n    additionals,\n    expiryHeight,\n    onDeviceStreaming,\n    onDeviceSignatureGranted,\n    onDeviceSignatureRequested,\n  } = signTx;\n  let useTrustedInputForSegwit = signTx.useTrustedInputForSegwit;\n\n  if (useTrustedInputForSegwit === undefined) {\n    try {\n      const a = await getAppAndVersion(transport);\n      useTrustedInputForSegwit = shouldUseTrustedInputForSegwit(a);\n    } catch (e: any) {\n      if (e.statusCode === 0x6d00) {\n        useTrustedInputForSegwit = false;\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  // loop: 0 or 1 (before and after)\n  // i: index of the input being streamed\n  // i goes on 0...n, inluding n. in order for the progress value to go to 1\n  // we normalize the 2 loops to make a global percentage\n  const notify = (loop, i) => {\n    const { length } = inputs;\n    if (length < 3) return; // there is not enough significant event to worth notifying (aka just use a spinner)\n\n    const index = length * loop + i;\n    const total = 2 * length;\n    const progress = index / total;\n    onDeviceStreaming({\n      progress,\n      total,\n      index,\n    });\n  };\n\n  const isDecred = additionals.includes(\"decred\");\n  const isZcash = additionals.includes(\"zcash\");\n  const isXST = additionals.includes(\"stealthcoin\");\n  const startTime = Date.now();\n  const sapling = additionals.includes(\"sapling\");\n  const bech32 = segwit && additionals.includes(\"bech32\");\n  const useBip143 =\n    segwit ||\n    (!!additionals &&\n      (additionals.includes(\"abc\") ||\n        additionals.includes(\"gold\") ||\n        additionals.includes(\"bip143\"))) ||\n    (!!expiryHeight && !isDecred);\n  // Inputs are provided as arrays of [transaction, output_index, optional redeem script, optional sequence]\n  // associatedKeysets are provided as arrays of [path]\n  const lockTimeBuffer = Buffer.alloc(4);\n  lockTimeBuffer.writeUInt32LE(lockTime, 0);\n  const nullScript = Buffer.alloc(0);\n  const nullPrevout = Buffer.alloc(0);\n  const defaultVersion = Buffer.alloc(4);\n  !!expiryHeight && !isDecred\n    ? defaultVersion.writeUInt32LE(isZcash ? 0x80000005 : sapling ? 0x80000004 : 0x80000003, 0) // v5 format for zcash refer to https://zips.z.cash/zip-0225\n    : isXST\n    ? defaultVersion.writeUInt32LE(2, 0)\n    : defaultVersion.writeUInt32LE(1, 0);\n  // Default version to 2 for XST not to have timestamp\n  const trustedInputs: Array<any> = [];\n  const regularOutputs: Array<TransactionOutput> = [];\n  const signatures: Buffer[] = [];\n  const publicKeys: Buffer[] = [];\n  let firstRun = true;\n  const resuming = false;\n  const targetTransaction: Transaction = {\n    inputs: [],\n    version: defaultVersion,\n    timestamp: Buffer.alloc(0),\n  };\n  const getTrustedInputCall =\n    useBip143 && !useTrustedInputForSegwit ? getTrustedInputBIP143 : getTrustedInput;\n  const outputScript = Buffer.from(outputScriptHex, \"hex\");\n  notify(0, 0);\n  // first pass on inputs to get trusted inputs\n  for (const input of inputs) {\n    if (!resuming) {\n      const trustedInput = await getTrustedInputCall(transport, input[1], input[0], additionals);\n      log(\"hw\", \"got trustedInput=\" + trustedInput);\n      const sequence = Buffer.alloc(4);\n      sequence.writeUInt32LE(\n        input.length >= 4 && typeof input[3] === \"number\" ? input[3] : DEFAULT_SEQUENCE,\n        0,\n      );\n      trustedInputs.push({\n        trustedInput: true,\n        value: Buffer.from(trustedInput, \"hex\"),\n        sequence,\n      });\n    }\n\n    const { outputs } = input[0];\n    const index = input[1];\n\n    if (outputs && index <= outputs.length - 1) {\n      regularOutputs.push(outputs[index]);\n    }\n\n    if (expiryHeight && !isDecred) {\n      targetTransaction.nVersionGroupId = Buffer.from(\n        // nVersionGroupId is 0x26A7270A for zcash from https://z.cash/upgrade/nu5/\n        isZcash\n          ? [0x0a, 0x27, 0xa7, 0x26]\n          : sapling\n          ? [0x85, 0x20, 0x2f, 0x89]\n          : [0x70, 0x82, 0xc4, 0x03],\n      );\n      targetTransaction.nExpiryHeight = expiryHeight;\n      // For sapling : valueBalance (8), nShieldedSpend (1), nShieldedOutput (1), nJoinSplit (1)\n      // Overwinter : use nJoinSplit (1)\n      targetTransaction.extraData = Buffer.from(\n        sapling ? [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00] : [0x00],\n      );\n    } else if (isDecred) {\n      targetTransaction.nExpiryHeight = expiryHeight;\n    }\n  }\n\n  targetTransaction.inputs = inputs.map((input, idx) => {\n    const sequence = Buffer.alloc(4);\n    sequence.writeUInt32LE(\n      input.length >= 4 && typeof input[3] === \"number\" ? input[3] : DEFAULT_SEQUENCE,\n      0,\n    );\n    return {\n      script: isZcash ? regularOutputs[idx].script : nullScript,\n      prevout: nullPrevout,\n      sequence,\n    };\n  });\n\n  if (!resuming) {\n    // Collect public keys\n    const result: {\n      publicKey: string;\n      bitcoinAddress: string;\n      chainCode: string;\n    }[] = [];\n\n    for (let i = 0; i < inputs.length; i++) {\n      const r = await getWalletPublicKey(transport, {\n        path: associatedKeysets[i],\n      });\n      notify(0, i + 1);\n      result.push(r);\n    }\n\n    for (let i = 0; i < result.length; i++) {\n      publicKeys.push(compressPublicKey(Buffer.from(result[i].publicKey, \"hex\")));\n    }\n  }\n\n  if (initialTimestamp !== undefined) {\n    targetTransaction.timestamp = Buffer.alloc(4);\n    targetTransaction.timestamp.writeUInt32LE(\n      Math.floor(initialTimestamp + (Date.now() - startTime) / 1000),\n      0,\n    );\n  }\n\n  onDeviceSignatureRequested();\n\n  if (useBip143) {\n    // Do the first run with all inputs\n    await startUntrustedHashTransactionInput(\n      transport,\n      true,\n      targetTransaction,\n      trustedInputs,\n      true,\n      !!expiryHeight,\n      additionals,\n      useTrustedInputForSegwit,\n    );\n\n    if (!resuming && changePath) {\n      await provideOutputFullChangePath(transport, changePath);\n    }\n\n    await hashOutputFull(transport, outputScript);\n  }\n\n  if (!!expiryHeight && !isDecred) {\n    await signTransaction(transport, \"\", lockTime, SIGHASH_ALL, expiryHeight);\n  }\n\n  // Do the second run with the individual transaction\n  for (let i = 0; i < inputs.length; i++) {\n    const input = inputs[i];\n    const script =\n      inputs[i].length >= 3 && typeof input[2] === \"string\"\n        ? Buffer.from(input[2], \"hex\")\n        : !segwit\n        ? regularOutputs[i].script\n        : Buffer.concat([\n            Buffer.from([OP_DUP, OP_HASH160, HASH_SIZE]),\n            hashPublicKey(publicKeys[i]),\n            Buffer.from([OP_EQUALVERIFY, OP_CHECKSIG]),\n          ]);\n    const pseudoTX = Object.assign({}, targetTransaction);\n    const pseudoTrustedInputs = useBip143 ? [trustedInputs[i]] : trustedInputs;\n\n    if (useBip143) {\n      pseudoTX.inputs = [{ ...pseudoTX.inputs[i], script }];\n    } else {\n      pseudoTX.inputs[i].script = script;\n    }\n\n    await startUntrustedHashTransactionInput(\n      transport,\n      !useBip143 && firstRun,\n      pseudoTX,\n      pseudoTrustedInputs,\n      useBip143,\n      !!expiryHeight && !isDecred,\n      additionals,\n      useTrustedInputForSegwit,\n    );\n\n    if (!useBip143) {\n      if (!resuming && changePath) {\n        await provideOutputFullChangePath(transport, changePath);\n      }\n\n      await hashOutputFull(transport, outputScript, additionals);\n    }\n\n    if (firstRun) {\n      onDeviceSignatureGranted();\n      notify(1, 0);\n    }\n\n    const signature = await signTransaction(\n      transport,\n      associatedKeysets[i],\n      lockTime,\n      sigHashType,\n      expiryHeight,\n      additionals,\n    );\n    notify(1, i + 1);\n    signatures.push(signature);\n    targetTransaction.inputs[i].script = nullScript;\n\n    if (firstRun) {\n      firstRun = false;\n    }\n  }\n\n  // Populate the final input scripts\n  for (let i = 0; i < inputs.length; i++) {\n    if (segwit) {\n      targetTransaction.witness = Buffer.alloc(0);\n\n      if (!bech32) {\n        targetTransaction.inputs[i].script = Buffer.concat([\n          Buffer.from(\"160014\", \"hex\"),\n          hashPublicKey(publicKeys[i]),\n        ]);\n      }\n    } else {\n      const signatureSize = Buffer.alloc(1);\n      const keySize = Buffer.alloc(1);\n      signatureSize[0] = signatures[i].length;\n      keySize[0] = publicKeys[i].length;\n      targetTransaction.inputs[i].script = Buffer.concat([\n        signatureSize,\n        signatures[i],\n        keySize,\n        publicKeys[i],\n      ]);\n    }\n\n    const offset = useBip143 && !useTrustedInputForSegwit ? 0 : 4;\n    targetTransaction.inputs[i].prevout = trustedInputs[i].value.slice(offset, offset + 0x24);\n  }\n  targetTransaction.locktime = lockTimeBuffer;\n  let result = Buffer.concat([\n    serializeTransaction(targetTransaction, false, targetTransaction.timestamp, additionals),\n    outputScript,\n  ]);\n\n  if (segwit && !isDecred) {\n    let witness = Buffer.alloc(0);\n\n    for (let i = 0; i < inputs.length; i++) {\n      const tmpScriptData = Buffer.concat([\n        Buffer.from(\"02\", \"hex\"),\n        Buffer.from([signatures[i].length]),\n        signatures[i],\n        Buffer.from([publicKeys[i].length]),\n        publicKeys[i],\n      ]);\n      witness = Buffer.concat([witness, tmpScriptData]);\n    }\n\n    result = Buffer.concat([result, witness]);\n  }\n\n  // from to https://zips.z.cash/zip-0225, zcash is different with other coins, the lock_time and nExpiryHeight fields are before the inputs and outputs\n  if (!isZcash) {\n    result = Buffer.concat([result, lockTimeBuffer]);\n    if (expiryHeight) {\n      result = Buffer.concat([\n        result,\n        targetTransaction.nExpiryHeight || Buffer.alloc(0),\n        targetTransaction.extraData || Buffer.alloc(0),\n      ]);\n    }\n  }\n  if (isDecred) {\n    let decredWitness = Buffer.from([targetTransaction.inputs.length]);\n    inputs.forEach((input, inputIndex) => {\n      decredWitness = Buffer.concat([\n        decredWitness,\n        Buffer.from([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]),\n        Buffer.from([0x00, 0x00, 0x00, 0x00]), //Block height\n        Buffer.from([0xff, 0xff, 0xff, 0xff]), //Block index\n        Buffer.from([targetTransaction.inputs[inputIndex].script.length]),\n        targetTransaction.inputs[inputIndex].script,\n      ]);\n    });\n    result = Buffer.concat([result, decredWitness]);\n  }\n  if (isZcash) {\n    result = Buffer.concat([result, Buffer.from([0x00, 0x00, 0x00])]);\n  }\n  return result.toString(\"hex\");\n}\n","import type Transport from \"@ledgerhq/hw-transport\";\nimport bippath from \"bip32-path\";\nimport { MAX_SCRIPT_BLOCK } from \"./constants\";\nexport async function signMessage(\n  transport: Transport,\n  {\n    path,\n    messageHex,\n  }: {\n    path: string;\n    messageHex: string;\n  },\n): Promise<{\n  v: number;\n  r: string;\n  s: string;\n}> {\n  const paths = bippath.fromString(path).toPathArray();\n  const message = Buffer.from(messageHex, \"hex\");\n  let offset = 0;\n\n  while (offset !== message.length) {\n    const maxChunkSize =\n      offset === 0 ? MAX_SCRIPT_BLOCK - 1 - paths.length * 4 - 4 : MAX_SCRIPT_BLOCK;\n    const chunkSize =\n      offset + maxChunkSize > message.length ? message.length - offset : maxChunkSize;\n    const buffer = Buffer.alloc(offset === 0 ? 1 + paths.length * 4 + 2 + chunkSize : chunkSize);\n\n    if (offset === 0) {\n      buffer[0] = paths.length;\n      paths.forEach((element, index) => {\n        buffer.writeUInt32BE(element, 1 + 4 * index);\n      });\n      buffer.writeUInt16BE(message.length, 1 + 4 * paths.length);\n      message.copy(buffer, 1 + 4 * paths.length + 2, offset, offset + chunkSize);\n    } else {\n      message.copy(buffer, 0, offset, offset + chunkSize);\n    }\n\n    await transport.send(0xe0, 0x4e, 0x00, offset === 0 ? 0x01 : 0x80, buffer);\n    offset += chunkSize;\n  }\n\n  const res = await transport.send(0xe0, 0x4e, 0x80, 0x00, Buffer.from([0x00]));\n  const v = res[0] - 0x30;\n  let r: Buffer | string = res.slice(4, 4 + res[3]);\n\n  if (r[0] === 0) {\n    r = r.slice(1);\n  }\n\n  r = r.toString(\"hex\");\n  offset = 4 + res[3] + 2;\n  let s: Buffer | string = res.slice(offset, offset + res[offset - 1]);\n\n  if (s[0] === 0) {\n    s = s.slice(1);\n  }\n\n  s = s.toString(\"hex\");\n  return {\n    v,\n    r,\n    s,\n  };\n}\n","import bs58 from \"bs58\";\nimport RIPEMD160 from \"ripemd160\";\nimport sha from \"sha.js\";\nimport type Transport from \"@ledgerhq/hw-transport\";\nimport type { CreateTransactionArg } from \"./createTransaction\";\nimport { createTransaction } from \"./createTransaction\";\nimport type { AddressFormat } from \"./getWalletPublicKey\";\nimport { getWalletPublicKey } from \"./getWalletPublicKey\";\nimport { pathArrayToString, pathStringToArray } from \"./bip32\";\nimport { signMessage } from \"./signMessage\";\nexport type { AddressFormat };\n\n/**\n * Bitcoin API.\n *\n * @example\n * import Btc from \"@ledgerhq/hw-app-btc\";\n * const btc = new Btc({ transport, currency: \"zcash\" });\n */\n\nexport default class BtcOld {\n  constructor(private transport: Transport) {}\n\n  private derivationsCache = {};\n  private async derivatePath(path: string) {\n    if (this.derivationsCache[path]) return this.derivationsCache[path];\n    const res = await getWalletPublicKey(this.transport, {\n      path,\n    });\n    this.derivationsCache[path] = res;\n    return res;\n  }\n\n  async getWalletXpub({\n    path,\n    xpubVersion,\n  }: {\n    path: string;\n    xpubVersion: number;\n  }): Promise<string> {\n    const pathElements = pathStringToArray(path);\n    const parentPath = pathElements.slice(0, -1);\n    const parentDerivation = await this.derivatePath(pathArrayToString(parentPath));\n    const accountDerivation = await this.derivatePath(path);\n    const fingerprint = makeFingerprint(\n      compressPublicKeySECP256(Buffer.from(parentDerivation.publicKey, \"hex\")),\n    );\n    const xpub = makeXpub(\n      xpubVersion,\n      pathElements.length,\n      fingerprint,\n      pathElements[pathElements.length - 1],\n      Buffer.from(accountDerivation.chainCode, \"hex\"),\n      compressPublicKeySECP256(Buffer.from(accountDerivation.publicKey, \"hex\")),\n    );\n    return xpub;\n  }\n\n  /**\n   * @param path a BIP 32 path\n   * @param options an object with optional these fields:\n   *\n   * - verify (boolean) will ask user to confirm the address on the device\n   *\n   * - format (\"legacy\" | \"p2sh\" | \"bech32\" | \"cashaddr\") to use different bitcoin address formatter.\n   *\n   * NB The normal usage is to use:\n   *\n   * - legacy format with 44' paths\n   *\n   * - p2sh format with 49' paths\n   *\n   * - bech32 format with 173' paths\n   *\n   * - cashaddr in case of Bitcoin Cash\n   *\n   * @example\n   * btc.getWalletPublicKey(\"44'/0'/0'/0/0\").then(o => o.bitcoinAddress)\n   * btc.getWalletPublicKey(\"49'/0'/0'/0/0\", { format: \"p2sh\" }).then(o => o.bitcoinAddress)\n   */\n  getWalletPublicKey(\n    path: string,\n    opts?: {\n      verify?: boolean;\n      format?: AddressFormat;\n    },\n  ): Promise<{\n    publicKey: string;\n    bitcoinAddress: string;\n    chainCode: string;\n  }> {\n    if (opts?.format === \"bech32m\") {\n      throw new Error(\"Unsupported address format bech32m\");\n    }\n    return getWalletPublicKey(this.transport, { ...opts, path });\n  }\n\n  /**\n   * To sign a transaction involving standard (P2PKH) inputs, call createTransaction with the following parameters\n   * @param inputs is an array of [ transaction, output_index, optional redeem script, optional sequence ] where\n   *\n   * * transaction is the previously computed transaction object for this UTXO\n   * * output_index is the output in the transaction used as input for this UTXO (counting from 0)\n   * * redeem script is the optional redeem script to use when consuming a Segregated Witness input\n   * * sequence is the sequence number to use for this input (when using RBF), or non present\n   * @param associatedKeysets is an array of BIP 32 paths pointing to the path to the private key used for each UTXO\n   * @param changePath is an optional BIP 32 path pointing to the path to the public key used to compute the change address\n   * @param outputScriptHex is the hexadecimal serialized outputs of the transaction to sign\n   * @param lockTime is the optional lockTime of the transaction to sign, or default (0)\n   * @param sigHashType is the hash type of the transaction to sign, or default (all)\n   * @param segwit is an optional boolean indicating wether to use segwit or not\n   * @param initialTimestamp is an optional timestamp of the function call to use for coins that necessitate timestamps only, (not the one that the tx will include)\n   * @param additionals list of additionnal options\n   *\n   * - \"bech32\" for spending native segwit outputs\n   * - \"abc\" for bch\n   * - \"gold\" for btg\n   * - \"bipxxx\" for using BIPxxx\n   * - \"sapling\" to indicate a zec transaction is supporting sapling (to be set over block 419200)\n   * @param expiryHeight is an optional Buffer for zec overwinter / sapling Txs\n   * @param useTrustedInputForSegwit trust inputs for segwit transactions\n   * @return the signed transaction ready to be broadcast\n   * @example\n  btc.createTransaction({\n   inputs: [ [tx1, 1] ],\n   associatedKeysets: [\"0'/0/0\"],\n   outputScriptHex: \"01905f0100000000001976a91472a5d75c8d2d0565b656a5232703b167d50d5a2b88ac\"\n  }).then(res => ...);\n   */\n  createPaymentTransaction(arg: CreateTransactionArg): Promise<string> {\n    if (arguments.length > 1) {\n      throw new Error(\n        \"@ledgerhq/hw-app-btc: createPaymentTransaction multi argument signature is deprecated. please switch to named parameters.\",\n      );\n    }\n    return createTransaction(this.transport, arg);\n  }\n\n  async signMessage({ path, messageHex }: { path: string; messageHex: string }): Promise<{\n    v: number;\n    r: string;\n    s: string;\n  }> {\n    return signMessage(this.transport, {\n      path,\n      messageHex,\n    });\n  }\n}\n\nfunction makeFingerprint(compressedPubKey) {\n  return hash160(compressedPubKey).slice(0, 4);\n}\n\nfunction asBufferUInt32BE(n: number): Buffer {\n  const buf = Buffer.allocUnsafe(4);\n  buf.writeUInt32BE(n, 0);\n  return buf;\n}\n\nconst compressPublicKeySECP256 = (publicKey: Buffer) =>\n  Buffer.concat([Buffer.from([0x02 + (publicKey[64] & 0x01)]), publicKey.slice(1, 33)]);\n\nfunction makeXpub(\n  version: number,\n  depth: number,\n  parentFingerprint: Buffer,\n  index: number,\n  chainCode: Buffer,\n  pubKey: Buffer,\n) {\n  const indexBuffer = asBufferUInt32BE(index);\n  indexBuffer[0] |= 0x80;\n  const extendedKeyBytes = Buffer.concat([\n    asBufferUInt32BE(version),\n    Buffer.from([depth]),\n    parentFingerprint,\n    indexBuffer,\n    chainCode,\n    pubKey,\n  ]);\n  const checksum = hash256(extendedKeyBytes).slice(0, 4);\n  return bs58.encode(Buffer.concat([extendedKeyBytes, checksum]));\n}\n\nfunction sha256(buffer: Buffer | string) {\n  return sha(\"sha256\").update(buffer).digest();\n}\nfunction hash256(buffer: Buffer | string) {\n  return sha256(sha256(buffer));\n}\nfunction ripemd160(buffer: Buffer | string) {\n  return new RIPEMD160().update(buffer).digest();\n}\nfunction hash160(buffer: Buffer | string) {\n  return ripemd160(sha256(buffer));\n}\n","import { createVarint } from \"../varint\";\nimport { hashLeaf, Merkle } from \"./merkle\";\n\n/**\n * This implements \"Merkelized Maps\", documented at\n * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/merkle.md#merkleized-maps\n *\n * A merkelized map consist of two merkle trees, one for the keys of\n * a map and one for the values of the same map, thus the two merkle\n * trees have the same shape. The commitment is the number elements\n * in the map followed by the keys' merkle root followed by the\n * values' merkle root.\n */\nexport class MerkleMap {\n  keys: Buffer[];\n  keysTree: Merkle;\n  values: Buffer[];\n  valuesTree: Merkle;\n  /**\n   * @param keys Sorted list of (unhashed) keys\n   * @param values values, in corresponding order as the keys, and of equal length\n   */\n  constructor(keys: Buffer[], values: Buffer[]) {\n    if (keys.length != values.length) {\n      throw new Error(\"keys and values should have the same length\");\n    }\n\n    // Sanity check: verify that keys are actually sorted and with no duplicates\n    for (let i = 0; i < keys.length - 1; i++) {\n      if (keys[i].toString(\"hex\") >= keys[i + 1].toString(\"hex\")) {\n        throw new Error(\"keys must be in strictly increasing order\");\n      }\n    }\n\n    this.keys = keys;\n    this.keysTree = new Merkle(keys.map(k => hashLeaf(k)));\n    this.values = values;\n    this.valuesTree = new Merkle(values.map(v => hashLeaf(v)));\n  }\n\n  commitment(): Buffer {\n    // returns a buffer between 65 and 73 (included) bytes long\n    return Buffer.concat([\n      createVarint(this.keys.length),\n      this.keysTree.getRoot(),\n      this.valuesTree.getRoot(),\n    ]);\n  }\n}\n","import { MerkleMap } from \"./merkleMap\";\nimport { PsbtV2 } from \"./psbtv2\";\n\n/**\n * This class merkelizes a PSBTv2, by merkelizing the different\n * maps of the psbt. This is used during the transaction signing process,\n * where the hardware app can request specific parts of the psbt from the\n * client code and be sure that the response data actually belong to the psbt.\n * The reason for this is the limited amount of memory available to the app,\n * so it can't always store the full psbt in memory.\n *\n * The signing process is documented at\n * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/bitcoin.md#sign_psbt\n */\nexport class MerkelizedPsbt extends PsbtV2 {\n  public globalMerkleMap: MerkleMap;\n  public inputMerkleMaps: MerkleMap[] = [];\n  public outputMerkleMaps: MerkleMap[] = [];\n  public inputMapCommitments: Buffer[];\n  public outputMapCommitments: Buffer[];\n  constructor(psbt: PsbtV2) {\n    super();\n    psbt.copy(this);\n    this.globalMerkleMap = MerkelizedPsbt.createMerkleMap(this.globalMap);\n\n    for (let i = 0; i < this.getGlobalInputCount(); i++) {\n      this.inputMerkleMaps.push(MerkelizedPsbt.createMerkleMap(this.inputMaps[i]));\n    }\n    this.inputMapCommitments = [...this.inputMerkleMaps.values()].map(v => v.commitment());\n\n    for (let i = 0; i < this.getGlobalOutputCount(); i++) {\n      this.outputMerkleMaps.push(MerkelizedPsbt.createMerkleMap(this.outputMaps[i]));\n    }\n    this.outputMapCommitments = [...this.outputMerkleMaps.values()].map(v => v.commitment());\n  }\n  // These public functions are for MerkelizedPsbt.\n  getGlobalSize(): number {\n    return this.globalMap.size;\n  }\n  getGlobalKeysValuesRoot(): Buffer {\n    return this.globalMerkleMap.commitment();\n  }\n\n  private static createMerkleMap(map: Map<string, Buffer>): MerkleMap {\n    const sortedKeysStrings = [...map.keys()].sort();\n    const values = sortedKeysStrings.map(k => {\n      const v = map.get(k);\n      if (!v) {\n        throw new Error(\"No value for key \" + k);\n      }\n      return v;\n    });\n    const sortedKeys = sortedKeysStrings.map(k => Buffer.from(k, \"hex\"));\n\n    const merkleMap = new MerkleMap(sortedKeys, values);\n    return merkleMap;\n  }\n}\n","import { crypto } from \"bitcoinjs-lib\";\nimport { BufferReader } from \"../buffertools\";\nimport { createVarint } from \"../varint\";\nimport { hashLeaf, Merkle } from \"./merkle\";\nimport { MerkleMap } from \"./merkleMap\";\n\nenum ClientCommandCode {\n  YIELD = 0x10,\n  GET_PREIMAGE = 0x40,\n  GET_MERKLE_LEAF_PROOF = 0x41,\n  GET_MERKLE_LEAF_INDEX = 0x42,\n  GET_MORE_ELEMENTS = 0xa0,\n}\n\nabstract class ClientCommand {\n  abstract code: ClientCommandCode;\n  abstract execute(request: Buffer): Buffer;\n}\n\nexport class YieldCommand extends ClientCommand {\n  private results: Buffer[];\n\n  code = ClientCommandCode.YIELD;\n\n  constructor(\n    results: Buffer[],\n    private progressCallback: () => void,\n  ) {\n    super();\n    this.results = results;\n  }\n\n  execute(request: Buffer): Buffer {\n    this.results.push(Buffer.from(request.subarray(1)));\n    this.progressCallback();\n    return Buffer.from(\"\");\n  }\n}\n\nexport class GetPreimageCommand extends ClientCommand {\n  private known_preimages: Map<string, Buffer>;\n  private queue: Buffer[];\n\n  code = ClientCommandCode.GET_PREIMAGE;\n\n  constructor(known_preimages: Map<string, Buffer>, queue: Buffer[]) {\n    super();\n    this.known_preimages = known_preimages;\n    this.queue = queue;\n  }\n\n  execute(request: Buffer): Buffer {\n    const req = Buffer.from(request.subarray(1));\n\n    // we expect no more data to read\n    if (req.length != 1 + 32) {\n      throw new Error(\"Invalid request, unexpected trailing data\");\n    }\n\n    if (req[0] != 0) {\n      throw new Error(\"Unsupported request, the first byte should be 0\");\n    }\n\n    // read the hash\n    const hash = Buffer.alloc(32);\n    for (let i = 0; i < 32; i++) {\n      hash[i] = req[1 + i];\n    }\n    const req_hash_hex = hash.toString(\"hex\");\n\n    const known_preimage = this.known_preimages.get(req_hash_hex);\n    if (known_preimage != undefined) {\n      const preimage_len_varint = createVarint(known_preimage.length);\n\n      // We can send at most 255 - len(preimage_len_out) - 1 bytes in a single message;\n      // the rest will be stored in the queue for GET_MORE_ELEMENTS\n      const max_payload_size = 255 - preimage_len_varint.length - 1;\n\n      const payload_size = Math.min(max_payload_size, known_preimage.length);\n\n      if (payload_size < known_preimage.length) {\n        for (let i = payload_size; i < known_preimage.length; i++) {\n          this.queue.push(Buffer.from([known_preimage[i]]));\n        }\n      }\n\n      return Buffer.concat([\n        preimage_len_varint,\n        Buffer.from([payload_size]),\n        Buffer.from(known_preimage.subarray(0, payload_size)),\n      ]);\n    }\n\n    throw Error(`Requested unknown preimage for: ${req_hash_hex}`);\n  }\n}\n\nexport class GetMerkleLeafProofCommand extends ClientCommand {\n  private known_trees: Map<string, Merkle>;\n  private queue: Buffer[];\n\n  code = ClientCommandCode.GET_MERKLE_LEAF_PROOF;\n\n  constructor(known_trees: Map<string, Merkle>, queue: Buffer[]) {\n    super();\n    this.known_trees = known_trees;\n    this.queue = queue;\n  }\n\n  execute(request: Buffer): Buffer {\n    const req = Buffer.from(request.subarray(1));\n\n    if (req.length < 32 + 1 + 1) {\n      throw new Error(\"Invalid request, expected at least 34 bytes\");\n    }\n\n    const reqBuf = new BufferReader(req);\n    const hash = reqBuf.readSlice(32);\n    const hash_hex = hash.toString(\"hex\");\n\n    let tree_size;\n    let leaf_index;\n    try {\n      tree_size = reqBuf.readVarInt();\n      leaf_index = reqBuf.readVarInt();\n    } catch (e: any) {\n      throw new Error(\"Invalid request, couldn't parse tree_size or leaf_index\");\n    }\n\n    const mt = this.known_trees.get(hash_hex);\n    if (!mt) {\n      throw Error(`Requested Merkle leaf proof for unknown tree: ${hash_hex}`);\n    }\n\n    if (leaf_index >= tree_size || mt.size() != tree_size) {\n      throw Error(\"Invalid index or tree size.\");\n    }\n\n    if (this.queue.length != 0) {\n      throw Error(\"This command should not execute when the queue is not empty.\");\n    }\n\n    const proof = mt.getProof(leaf_index);\n\n    const n_response_elements = Math.min(Math.floor((255 - 32 - 1 - 1) / 32), proof.length);\n    const n_leftover_elements = proof.length - n_response_elements;\n\n    // Add to the queue any proof elements that do not fit the response\n    if (n_leftover_elements > 0) {\n      this.queue.push(...proof.slice(-n_leftover_elements));\n    }\n\n    return Buffer.concat([\n      mt.getLeafHash(leaf_index),\n      Buffer.from([proof.length]),\n      Buffer.from([n_response_elements]),\n      ...proof.slice(0, n_response_elements),\n    ]);\n  }\n}\n\nexport class GetMerkleLeafIndexCommand extends ClientCommand {\n  private known_trees: Map<string, Merkle>;\n\n  code = ClientCommandCode.GET_MERKLE_LEAF_INDEX;\n\n  constructor(known_trees: Map<string, Merkle>) {\n    super();\n    this.known_trees = known_trees;\n  }\n\n  execute(request: Buffer): Buffer {\n    const req = Buffer.from(request.subarray(1));\n\n    if (req.length != 32 + 32) {\n      throw new Error(\"Invalid request, unexpected trailing data\");\n    }\n\n    // read the root hash\n    const root_hash = Buffer.alloc(32);\n    for (let i = 0; i < 32; i++) {\n      root_hash[i] = req.readUInt8(i);\n    }\n    const root_hash_hex = root_hash.toString(\"hex\");\n\n    // read the leaf hash\n    const leef_hash = Buffer.alloc(32);\n    for (let i = 0; i < 32; i++) {\n      leef_hash[i] = req.readUInt8(32 + i);\n    }\n    const leef_hash_hex = leef_hash.toString(\"hex\");\n\n    const mt = this.known_trees.get(root_hash_hex);\n    if (!mt) {\n      throw Error(`Requested Merkle leaf index for unknown root: ${root_hash_hex}`);\n    }\n\n    let leaf_index = 0;\n    let found = 0;\n    for (let i = 0; i < mt.size(); i++) {\n      if (mt.getLeafHash(i).toString(\"hex\") == leef_hash_hex) {\n        found = 1;\n        leaf_index = i;\n        break;\n      }\n    }\n    return Buffer.concat([Buffer.from([found]), createVarint(leaf_index)]);\n  }\n}\n\nexport class GetMoreElementsCommand extends ClientCommand {\n  queue: Buffer[];\n\n  code = ClientCommandCode.GET_MORE_ELEMENTS;\n\n  constructor(queue: Buffer[]) {\n    super();\n    this.queue = queue;\n  }\n\n  execute(request: Buffer): Buffer {\n    if (request.length != 1) {\n      throw new Error(\"Invalid request, unexpected trailing data\");\n    }\n\n    if (this.queue.length === 0) {\n      throw new Error(\"No elements to get\");\n    }\n\n    // all elements should have the same length\n    const element_len = this.queue[0].length;\n    if (this.queue.some(el => el.length != element_len)) {\n      throw new Error(\n        \"The queue contains elements with different byte length, which is not expected\",\n      );\n    }\n\n    const max_elements = Math.floor(253 / element_len);\n    const n_returned_elements = Math.min(max_elements, this.queue.length);\n\n    const returned_elements = this.queue.splice(0, n_returned_elements);\n\n    return Buffer.concat([\n      Buffer.from([n_returned_elements]),\n      Buffer.from([element_len]),\n      ...returned_elements,\n    ]);\n  }\n}\n\n/**\n * This class will dispatch a client command coming from the hardware device to\n * the appropriate client command implementation. Those client commands\n * typically requests data from a merkle tree or merkelized maps.\n *\n * A ClientCommandInterpreter is prepared by adding the merkle trees and\n * merkelized maps it should be able to serve to the hardware device. This class\n * doesn't know anything about the semantics of the data it holds, it just\n * serves merkle data. It doesn't even know in what context it is being\n * executed, ie SignPsbt, getWalletAddress, etc.\n *\n * If the command yelds results to the client, as signPsbt does, the yielded\n * data will be accessible after the command completed by calling getYielded(),\n * which will return the yields in the same order as they came in.\n */\nexport class ClientCommandInterpreter {\n  private roots: Map<string, Merkle> = new Map();\n  private preimages: Map<string, Buffer> = new Map();\n\n  private yielded: Buffer[] = [];\n\n  private queue: Buffer[] = [];\n\n  private commands: Map<ClientCommandCode, ClientCommand> = new Map();\n\n  constructor(progressCallback: () => void) {\n    const commands = [\n      new YieldCommand(this.yielded, progressCallback),\n      new GetPreimageCommand(this.preimages, this.queue),\n      new GetMerkleLeafIndexCommand(this.roots),\n      new GetMerkleLeafProofCommand(this.roots, this.queue),\n      new GetMoreElementsCommand(this.queue),\n    ];\n\n    for (const cmd of commands) {\n      if (this.commands.has(cmd.code)) {\n        throw new Error(`Multiple commands with code ${cmd.code}`);\n      }\n      this.commands.set(cmd.code, cmd);\n    }\n  }\n\n  getYielded(): Buffer[] {\n    return this.yielded;\n  }\n\n  addKnownPreimage(preimage: Buffer): void {\n    this.preimages.set(crypto.sha256(preimage).toString(\"hex\"), preimage);\n  }\n\n  addKnownList(elements: Buffer[]): void {\n    for (const el of elements) {\n      const preimage = Buffer.concat([Buffer.from([0]), el]);\n      this.addKnownPreimage(preimage);\n    }\n    const mt = new Merkle(elements.map(el => hashLeaf(el)));\n    this.roots.set(mt.getRoot().toString(\"hex\"), mt);\n  }\n\n  addKnownMapping(mm: MerkleMap): void {\n    this.addKnownList(mm.keys);\n    this.addKnownList(mm.values);\n  }\n\n  execute(request: Buffer): Buffer {\n    if (request.length == 0) {\n      throw new Error(\"Unexpected empty command\");\n    }\n\n    const cmdCode = request[0];\n    const cmd = this.commands.get(cmdCode);\n    if (!cmd) {\n      throw new Error(`Unexpected command code ${cmdCode}`);\n    }\n\n    return cmd.execute(request);\n  }\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport { pathElementsToBuffer } from \"../bip32\";\nimport { PsbtV2 } from \"./psbtv2\";\nimport { MerkelizedPsbt } from \"./merkelizedPsbt\";\nimport { ClientCommandInterpreter } from \"./clientCommands\";\nimport { WalletPolicy } from \"./policy\";\nimport { createVarint } from \"../varint\";\nimport { hashLeaf, Merkle } from \"./merkle\";\n\nconst CLA_BTC = 0xe1;\nconst CLA_FRAMEWORK = 0xf8;\n\nenum BitcoinIns {\n  GET_PUBKEY = 0x00,\n  // GET_ADDRESS = 0x01, // Removed from app\n  REGISTER_WALLET = 0x02,\n  GET_WALLET_ADDRESS = 0x03,\n  SIGN_PSBT = 0x04,\n  GET_MASTER_FINGERPRINT = 0x05,\n  SIGN_MESSAGE = 0x10,\n}\n\nenum FrameworkIns {\n  CONTINUE_INTERRUPTED = 0x01,\n}\n\n/**\n * This class encapsulates the APDU protocol documented at\n * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/bitcoin.md\n */\nexport class AppClient {\n  transport: Transport;\n\n  constructor(transport: Transport) {\n    this.transport = transport;\n  }\n\n  private async makeRequest(\n    ins: BitcoinIns,\n    data: Buffer,\n    cci?: ClientCommandInterpreter,\n  ): Promise<Buffer> {\n    let response: Buffer = await this.transport.send(CLA_BTC, ins, 0, 0, data, [0x9000, 0xe000]);\n    while (response.readUInt16BE(response.length - 2) === 0xe000) {\n      if (!cci) {\n        throw new Error(\"Unexpected SW_INTERRUPTED_EXECUTION\");\n      }\n\n      const hwRequest = response.slice(0, -2);\n      const commandResponse = cci.execute(hwRequest);\n\n      response = await this.transport.send(\n        CLA_FRAMEWORK,\n        FrameworkIns.CONTINUE_INTERRUPTED,\n        0,\n        0,\n        commandResponse,\n        [0x9000, 0xe000],\n      );\n    }\n    return response.slice(0, -2); // drop the status word (can only be 0x9000 at this point)\n  }\n\n  async getExtendedPubkey(display: boolean, pathElements: number[]): Promise<string> {\n    if (pathElements.length > 6) {\n      throw new Error(\"Path too long. At most 6 levels allowed.\");\n    }\n    const response = await this.makeRequest(\n      BitcoinIns.GET_PUBKEY,\n      Buffer.concat([Buffer.from(display ? [1] : [0]), pathElementsToBuffer(pathElements)]),\n    );\n    return response.toString(\"ascii\");\n  }\n\n  async getWalletAddress(\n    walletPolicy: WalletPolicy,\n    walletHMAC: Buffer | null,\n    change: number,\n    addressIndex: number,\n    display: boolean,\n  ): Promise<string> {\n    if (change !== 0 && change !== 1) throw new Error(\"Change can only be 0 or 1\");\n    if (addressIndex < 0 || !Number.isInteger(addressIndex))\n      throw new Error(\"Invalid address index\");\n\n    if (walletHMAC != null && walletHMAC.length != 32) {\n      throw new Error(\"Invalid HMAC length\");\n    }\n\n    const clientInterpreter = new ClientCommandInterpreter(() => {});\n    clientInterpreter.addKnownList(walletPolicy.keys.map(k => Buffer.from(k, \"ascii\")));\n    clientInterpreter.addKnownPreimage(walletPolicy.serialize());\n\n    const addressIndexBuffer = Buffer.alloc(4);\n    addressIndexBuffer.writeUInt32BE(addressIndex, 0);\n\n    const response = await this.makeRequest(\n      BitcoinIns.GET_WALLET_ADDRESS,\n      Buffer.concat([\n        Buffer.from(display ? [1] : [0]),\n        walletPolicy.getWalletId(),\n        walletHMAC || Buffer.alloc(32, 0),\n        Buffer.from([change]),\n        addressIndexBuffer,\n      ]),\n      clientInterpreter,\n    );\n\n    return response.toString(\"ascii\");\n  }\n\n  async signPsbt(\n    psbt: PsbtV2,\n    walletPolicy: WalletPolicy,\n    walletHMAC: Buffer | null,\n    progressCallback: () => void,\n  ): Promise<Map<number, Buffer>> {\n    const merkelizedPsbt = new MerkelizedPsbt(psbt);\n\n    if (walletHMAC != null && walletHMAC.length != 32) {\n      throw new Error(\"Invalid HMAC length\");\n    }\n\n    const clientInterpreter = new ClientCommandInterpreter(progressCallback);\n\n    // prepare ClientCommandInterpreter\n    clientInterpreter.addKnownList(walletPolicy.keys.map(k => Buffer.from(k, \"ascii\")));\n    clientInterpreter.addKnownPreimage(walletPolicy.serialize());\n\n    clientInterpreter.addKnownMapping(merkelizedPsbt.globalMerkleMap);\n    for (const map of merkelizedPsbt.inputMerkleMaps) {\n      clientInterpreter.addKnownMapping(map);\n    }\n    for (const map of merkelizedPsbt.outputMerkleMaps) {\n      clientInterpreter.addKnownMapping(map);\n    }\n\n    clientInterpreter.addKnownList(merkelizedPsbt.inputMapCommitments);\n    const inputMapsRoot = new Merkle(\n      merkelizedPsbt.inputMapCommitments.map(m => hashLeaf(m)),\n    ).getRoot();\n    clientInterpreter.addKnownList(merkelizedPsbt.outputMapCommitments);\n    const outputMapsRoot = new Merkle(\n      merkelizedPsbt.outputMapCommitments.map(m => hashLeaf(m)),\n    ).getRoot();\n\n    await this.makeRequest(\n      BitcoinIns.SIGN_PSBT,\n      Buffer.concat([\n        merkelizedPsbt.getGlobalKeysValuesRoot(),\n        createVarint(merkelizedPsbt.getGlobalInputCount()),\n        inputMapsRoot,\n        createVarint(merkelizedPsbt.getGlobalOutputCount()),\n        outputMapsRoot,\n        walletPolicy.getWalletId(),\n        walletHMAC || Buffer.alloc(32, 0),\n      ]),\n      clientInterpreter,\n    );\n\n    const yielded = clientInterpreter.getYielded();\n\n    const ret: Map<number, Buffer> = new Map();\n    for (const inputAndSig of yielded) {\n      ret.set(inputAndSig[0], inputAndSig.slice(1));\n    }\n    return ret;\n  }\n\n  async getMasterFingerprint(): Promise<Buffer> {\n    return this.makeRequest(BitcoinIns.GET_MASTER_FINGERPRINT, Buffer.from([]));\n  }\n\n  async signMessage(message: Buffer, pathElements: number[]): Promise<string> {\n    if (pathElements.length > 6) {\n      throw new Error(\"Path too long. At most 6 levels allowed.\");\n    }\n\n    const clientInterpreter = new ClientCommandInterpreter(() => {});\n\n    // prepare ClientCommandInterpreter\n    const nChunks = Math.ceil(message.length / 64);\n    const chunks: Buffer[] = [];\n    for (let i = 0; i < nChunks; i++) {\n      chunks.push(message.subarray(64 * i, 64 * i + 64));\n    }\n\n    clientInterpreter.addKnownList(chunks);\n    const chunksRoot = new Merkle(chunks.map(m => hashLeaf(m))).getRoot();\n\n    const response = await this.makeRequest(\n      BitcoinIns.SIGN_MESSAGE,\n      Buffer.concat([pathElementsToBuffer(pathElements), createVarint(message.length), chunksRoot]),\n      clientInterpreter,\n    );\n\n    return response.toString(\"base64\");\n  }\n}\n","import type { Transaction } from \"./types\";\nexport function formatTransactionDebug(transaction: Transaction): string {\n  let str = \"TX\";\n  str += \" version \" + transaction.version.toString(\"hex\");\n\n  if (transaction.locktime) {\n    str += \" locktime \" + transaction.locktime.toString(\"hex\");\n  }\n\n  if (transaction.witness) {\n    str += \" witness \" + transaction.witness.toString(\"hex\");\n  }\n\n  if (transaction.timestamp) {\n    str += \" timestamp \" + transaction.timestamp.toString(\"hex\");\n  }\n\n  if (transaction.nVersionGroupId) {\n    str += \" nVersionGroupId \" + transaction.nVersionGroupId.toString(\"hex\");\n  }\n\n  if (transaction.nExpiryHeight) {\n    str += \" nExpiryHeight \" + transaction.nExpiryHeight.toString(\"hex\");\n  }\n\n  if (transaction.extraData) {\n    str += \" extraData \" + transaction.extraData.toString(\"hex\");\n  }\n\n  transaction.inputs.forEach(({ prevout, script, sequence }, i) => {\n    str += `\\ninput ${i}:`;\n    str += ` prevout ${prevout.toString(\"hex\")}`;\n    str += ` script ${script.toString(\"hex\")}`;\n    str += ` sequence ${sequence.toString(\"hex\")}`;\n  });\n  (transaction.outputs || []).forEach(({ amount, script }, i) => {\n    str += `\\noutput ${i}:`;\n    str += ` amount ${amount.toString(\"hex\")}`;\n    str += ` script ${script.toString(\"hex\")}`;\n  });\n  return str;\n}\nexport function displayTransactionDebug(transaction: Transaction): void {\n  console.log(formatTransactionDebug(transaction));\n}\n","import { log } from \"@ledgerhq/logs\";\nimport type { Transaction, TransactionInput, TransactionOutput } from \"./types\";\nimport { getVarint } from \"./varint\";\nimport { formatTransactionDebug } from \"./debug\";\nexport function splitTransaction(\n  transactionHex: string,\n  isSegwitSupported: boolean | null | undefined = false,\n  hasTimestamp = false,\n  hasExtraData = false,\n  additionals: Array<string> = [],\n): Transaction {\n  const inputs: TransactionInput[] = [];\n  const outputs: TransactionOutput[] = [];\n  let witness = false;\n  let offset = 0;\n  let timestamp = Buffer.alloc(0);\n  let nExpiryHeight = Buffer.alloc(0);\n  let nVersionGroupId = Buffer.alloc(0);\n  let extraData = Buffer.alloc(0);\n  let witnessScript, locktime;\n  const isDecred = additionals.includes(\"decred\");\n  const isZencash = additionals.includes(\"zencash\");\n  const isZcash = additionals.includes(\"zcash\");\n  const transaction = Buffer.from(transactionHex, \"hex\");\n  const version = transaction.slice(offset, offset + 4);\n  const overwinter =\n    version.equals(Buffer.from([0x03, 0x00, 0x00, 0x80])) ||\n    version.equals(Buffer.from([0x04, 0x00, 0x00, 0x80])) ||\n    version.equals(Buffer.from([0x05, 0x00, 0x00, 0x80]));\n  const isZcashv5 = isZcash && version.equals(Buffer.from([0x05, 0x00, 0x00, 0x80]));\n  offset += 4;\n  if (\n    !hasTimestamp &&\n    isSegwitSupported &&\n    transaction[offset] === 0 &&\n    transaction[offset + 1] !== 0 &&\n    !isZencash\n  ) {\n    offset += 2;\n    witness = true;\n  }\n\n  if (hasTimestamp) {\n    timestamp = transaction.slice(offset, 4 + offset);\n    offset += 4;\n  }\n\n  if (overwinter) {\n    nVersionGroupId = transaction.slice(offset, 4 + offset);\n    offset += 4;\n  }\n  if (isZcashv5) {\n    locktime = transaction.slice(offset + 4, offset + 8);\n    nExpiryHeight = transaction.slice(offset + 8, offset + 12);\n    offset += 12;\n  }\n  let varint = getVarint(transaction, offset);\n  const numberInputs = varint[0];\n  offset += varint[1];\n\n  for (let i = 0; i < numberInputs; i++) {\n    const prevout = transaction.slice(offset, offset + 36);\n    offset += 36;\n    let script = Buffer.alloc(0);\n    let tree = Buffer.alloc(0);\n\n    //No script for decred, it has a witness\n    if (!isDecred) {\n      varint = getVarint(transaction, offset);\n      offset += varint[1];\n      script = transaction.slice(offset, offset + varint[0]);\n      offset += varint[0];\n    } else {\n      //Tree field\n      tree = transaction.slice(offset, offset + 1);\n      offset += 1;\n    }\n\n    const sequence = transaction.slice(offset, offset + 4);\n    offset += 4;\n    inputs.push({\n      prevout,\n      script,\n      sequence,\n      tree,\n    });\n  }\n  varint = getVarint(transaction, offset);\n  const numberOutputs = varint[0];\n  offset += varint[1];\n  for (let i = 0; i < numberOutputs; i++) {\n    const amount = transaction.slice(offset, offset + 8);\n    offset += 8;\n\n    if (isDecred) {\n      //Script version\n      offset += 2;\n    }\n\n    varint = getVarint(transaction, offset);\n    offset += varint[1];\n    const script = transaction.slice(offset, offset + varint[0]);\n    offset += varint[0];\n    outputs.push({\n      amount,\n      script,\n    });\n  }\n\n  if (witness) {\n    witnessScript = transaction.slice(offset, -4);\n    locktime = transaction.slice(transaction.length - 4);\n  } else if (!isZcashv5) {\n    locktime = transaction.slice(offset, offset + 4);\n  }\n\n  offset += 4;\n\n  if ((overwinter || isDecred) && !isZcashv5) {\n    nExpiryHeight = transaction.slice(offset, offset + 4);\n    offset += 4;\n  }\n\n  if (hasExtraData) {\n    extraData = transaction.slice(offset);\n  }\n\n  //Get witnesses for Decred\n  if (isDecred) {\n    varint = getVarint(transaction, offset);\n    offset += varint[1];\n\n    if (varint[0] !== numberInputs) {\n      throw new Error(\"splitTransaction: incoherent number of witnesses\");\n    }\n\n    for (let i = 0; i < numberInputs; i++) {\n      //amount\n      offset += 8;\n      //block height\n      offset += 4;\n      //block index\n      offset += 4;\n      //Script size\n      varint = getVarint(transaction, offset);\n      offset += varint[1];\n      const script = transaction.slice(offset, offset + varint[0]);\n      offset += varint[0];\n      inputs[i].script = script;\n    }\n  }\n\n  const t: Transaction = {\n    version,\n    inputs,\n    outputs,\n    locktime,\n    witness: witnessScript,\n    timestamp,\n    nVersionGroupId,\n    nExpiryHeight,\n    extraData,\n  };\n  log(\"btc\", `splitTransaction ${transactionHex}:\\n${formatTransactionDebug(t)}`);\n  return t;\n}\n","import type Transport from \"@ledgerhq/hw-transport\";\nimport { getTrustedInput } from \"./getTrustedInput\";\nimport { startUntrustedHashTransactionInput } from \"./startUntrustedHashTransactionInput\";\nimport { getTrustedInputBIP143 } from \"./getTrustedInputBIP143\";\nimport { signTransaction } from \"./signTransaction\";\nimport { hashOutputFull } from \"./finalizeInput\";\nimport type { TransactionOutput, Transaction, TrustedInput } from \"./types\";\nimport { DEFAULT_LOCKTIME, DEFAULT_VERSION, DEFAULT_SEQUENCE, SIGHASH_ALL } from \"./constants\";\nconst defaultArg = {\n  lockTime: DEFAULT_LOCKTIME,\n  sigHashType: SIGHASH_ALL,\n  segwit: false,\n  transactionVersion: DEFAULT_VERSION,\n};\n\n/**\n *\n */\nexport type SignP2SHTransactionArg = {\n  inputs: Array<[Transaction, number, string | null | undefined, number | null | undefined]>;\n  associatedKeysets: string[];\n  outputScriptHex: string;\n  lockTime?: number;\n  sigHashType?: number;\n  segwit?: boolean;\n  transactionVersion?: number;\n};\nexport async function signP2SHTransaction(transport: Transport, arg: SignP2SHTransactionArg) {\n  const {\n    inputs,\n    associatedKeysets,\n    outputScriptHex,\n    lockTime,\n    sigHashType,\n    segwit,\n    transactionVersion,\n  } = { ...defaultArg, ...arg };\n  // Inputs are provided as arrays of [transaction, output_index, redeem script, optional sequence]\n  // associatedKeysets are provided as arrays of [path]\n  const nullScript = Buffer.alloc(0);\n  const nullPrevout = Buffer.alloc(0);\n  const defaultVersion = Buffer.alloc(4);\n  defaultVersion.writeUInt32LE(transactionVersion, 0);\n  const trustedInputs: TrustedInput[] = [];\n  const regularOutputs: Array<TransactionOutput> = [];\n  const signatures: string[] = [];\n  let firstRun = true;\n  const resuming = false;\n  const targetTransaction: Transaction = {\n    inputs: [],\n    version: defaultVersion,\n  };\n  const getTrustedInputCall = segwit ? getTrustedInputBIP143 : getTrustedInput;\n  const outputScript = Buffer.from(outputScriptHex, \"hex\");\n\n  for (const input of inputs) {\n    if (!resuming) {\n      const trustedInput = await getTrustedInputCall(transport, input[1], input[0]);\n      const sequence = Buffer.alloc(4);\n      sequence.writeUInt32LE(\n        input.length >= 4 && typeof input[3] === \"number\" ? input[3] : DEFAULT_SEQUENCE,\n        0,\n      );\n      trustedInputs.push({\n        trustedInput: false,\n        value: segwit\n          ? Buffer.from(trustedInput, \"hex\")\n          : Buffer.from(trustedInput, \"hex\").slice(4, 4 + 0x24),\n        sequence,\n      });\n    }\n\n    const { outputs } = input[0];\n    const index = input[1];\n\n    if (outputs && index <= outputs.length - 1) {\n      regularOutputs.push(outputs[index]);\n    }\n  }\n\n  // Pre-build the target transaction\n  for (let i = 0; i < inputs.length; i++) {\n    const sequence = Buffer.alloc(4);\n    sequence.writeUInt32LE(\n      inputs[i].length >= 4 && typeof inputs[i][3] === \"number\"\n        ? (inputs[i][3] as number)\n        : DEFAULT_SEQUENCE,\n      0,\n    );\n    targetTransaction.inputs.push({\n      script: nullScript,\n      prevout: nullPrevout,\n      sequence,\n    });\n  }\n\n  if (segwit) {\n    await startUntrustedHashTransactionInput(\n      transport,\n      true,\n      targetTransaction,\n      trustedInputs,\n      true,\n    );\n    await hashOutputFull(transport, outputScript);\n  }\n\n  for (let i = 0; i < inputs.length; i++) {\n    const input = inputs[i];\n    const script =\n      inputs[i].length >= 3 && typeof input[2] === \"string\"\n        ? Buffer.from(input[2], \"hex\")\n        : regularOutputs[i].script;\n    const pseudoTX = Object.assign({}, targetTransaction);\n    const pseudoTrustedInputs = segwit ? [trustedInputs[i]] : trustedInputs;\n\n    if (segwit) {\n      pseudoTX.inputs = [{ ...pseudoTX.inputs[i], script }];\n    } else {\n      pseudoTX.inputs[i].script = script;\n    }\n\n    await startUntrustedHashTransactionInput(\n      transport,\n      !segwit && firstRun,\n      pseudoTX,\n      pseudoTrustedInputs,\n      segwit,\n    );\n\n    if (!segwit) {\n      await hashOutputFull(transport, outputScript);\n    }\n\n    const signature = await signTransaction(transport, associatedKeysets[i], lockTime, sigHashType);\n    signatures.push(\n      segwit ? signature.toString(\"hex\") : signature.slice(0, signature.length - 1).toString(\"hex\"),\n    );\n    targetTransaction.inputs[i].script = nullScript;\n\n    if (firstRun) {\n      firstRun = false;\n    }\n  }\n\n  return signatures;\n}\n","import type Transport from \"@ledgerhq/hw-transport\";\nimport BtcNew from \"./BtcNew\";\nimport BtcOld from \"./BtcOld\";\nimport type { CreateTransactionArg } from \"./createTransaction\";\nimport { getTrustedInput } from \"./getTrustedInput\";\nimport { getTrustedInputBIP143 } from \"./getTrustedInputBIP143\";\nimport type { AddressFormat } from \"./getWalletPublicKey\";\nimport { AppClient } from \"./newops/appClient\";\nimport { serializeTransactionOutputs } from \"./serializeTransaction\";\nimport type { SignP2SHTransactionArg } from \"./signP2SHTransaction\";\nimport { splitTransaction } from \"./splitTransaction\";\nimport type { Transaction } from \"./types\";\nexport type { AddressFormat };\nimport { signP2SHTransaction } from \"./signP2SHTransaction\";\nimport { checkIsBtcLegacy, getAppAndVersion } from \"./getAppAndVersion\";\n\n/**\n * Bitcoin API.\n *\n * @example\n * import Btc from \"@ledgerhq/hw-app-btc\";\n * const btc = new Btc({ transport, currency: \"bitcoin\" });\n */\n\nexport default class Btc {\n  private _transport: Transport;\n  private _impl: BtcOld | BtcNew;\n\n  constructor({\n    transport,\n    scrambleKey = \"BTC\",\n    currency = \"bitcoin\",\n  }: {\n    transport: Transport;\n    scrambleKey?: string;\n    currency?: string;\n  }) {\n    this._transport = transport;\n    this._transport.decorateAppAPIMethods(\n      this,\n      [\n        \"getWalletXpub\",\n        \"getWalletPublicKey\",\n        \"signP2SHTransaction\",\n        \"signMessage\",\n        \"createPaymentTransaction\",\n        \"getTrustedInput\",\n        \"getTrustedInputBIP143\",\n      ],\n      scrambleKey,\n    );\n    // new APDU (nano app API) for bitcoin and old APDU for altcoin\n    if (currency === \"bitcoin\" || currency === \"bitcoin_testnet\") {\n      this._impl = new BtcNew(new AppClient(this._transport));\n    } else {\n      this._impl = new BtcOld(this._transport);\n    }\n  }\n\n  /**\n   * Get an XPUB with a ledger device\n   * @param arg derivation parameter\n   * - path: a BIP 32 path of the account level. e.g. `84'/0'/0'`\n   * - xpubVersion: the XPUBVersion of the coin used. (use @ledgerhq/currencies if needed)\n   * @returns XPUB of the account\n   */\n  getWalletXpub(arg: { path: string; xpubVersion: number }): Promise<string> {\n    return this.changeImplIfNecessary().then(impl => {\n      return impl.getWalletXpub(arg);\n    });\n  }\n\n  /**\n   * @param path a BIP 32 path\n   * @param options an object with optional these fields:\n   *\n   * - verify (boolean) will ask user to confirm the address on the device\n   *\n   * - format (\"legacy\" | \"p2sh\" | \"bech32\" | \"bech32m\" | \"cashaddr\") to use different bitcoin address formatter.\n   *\n   * NB The normal usage is to use:\n   *\n   * - legacy format with 44' paths\n   *\n   * - p2sh format with 49' paths\n   *\n   * - bech32 format with 84' paths\n   *\n   * - cashaddr in case of Bitcoin Cash\n   *\n   * @example\n   * btc.getWalletPublicKey(\"44'/0'/0'/0/0\").then(o => o.bitcoinAddress)\n   * btc.getWalletPublicKey(\"49'/0'/0'/0/0\", { format: \"p2sh\" }).then(o => o.bitcoinAddress)\n   */\n  getWalletPublicKey(\n    path: string,\n    opts?: {\n      verify?: boolean;\n      format?: AddressFormat;\n    },\n  ): Promise<{\n    publicKey: string;\n    bitcoinAddress: string;\n    chainCode: string;\n  }> {\n    let options;\n    if (arguments.length > 2 || typeof opts === \"boolean\") {\n      console.warn(\n        \"btc.getWalletPublicKey deprecated signature used. Please switch to getWalletPublicKey(path, { format, verify })\",\n      );\n      options = {\n        verify: !!opts,\n        // eslint-disable-next-line prefer-rest-params\n        format: arguments[2] ? \"p2sh\" : \"legacy\",\n      };\n    } else {\n      options = opts || {};\n    }\n    return this.changeImplIfNecessary().then(impl => {\n      return impl.getWalletPublicKey(path, options);\n    });\n  }\n\n  /**\n   * You can sign a message according to the Bitcoin Signature format and retrieve v, r, s given the message and the BIP 32 path of the account to sign.\n   * @example\n   btc.signMessage(\"44'/60'/0'/0'/0\", Buffer.from(\"test\").toString(\"hex\")).then(function(result) {\n     var v = result['v'] + 27 + 4;\n     var signature = Buffer.from(v.toString(16) + result['r'] + result['s'], 'hex').toString('base64');\n     console.log(\"Signature : \" + signature);\n   }).catch(function(ex) {console.log(ex);});\n   */\n  signMessage(\n    path: string,\n    messageHex: string,\n  ): Promise<{\n    v: number;\n    r: string;\n    s: string;\n  }> {\n    return this.changeImplIfNecessary().then(impl => {\n      return impl.signMessage({\n        path,\n        messageHex,\n      });\n    });\n  }\n\n  /**\n   * To sign a transaction involving standard (P2PKH) inputs, call createTransaction with the following parameters\n   * @param inputs is an array of [ transaction, output_index, optional redeem script, optional sequence ] where\n   *\n   * * transaction is the previously computed transaction object for this UTXO\n   * * output_index is the output in the transaction used as input for this UTXO (counting from 0)\n   * * redeem script is the optional redeem script to use when consuming a Segregated Witness input\n   * * sequence is the sequence number to use for this input (when using RBF), or non present\n   * @param associatedKeysets is an array of BIP 32 paths pointing to the path to the private key used for each UTXO\n   * @param changePath is an optional BIP 32 path pointing to the path to the public key used to compute the change address\n   * @param outputScriptHex is the hexadecimal serialized outputs of the transaction to sign, including leading vararg voutCount\n   * @param lockTime is the optional lockTime of the transaction to sign, or default (0)\n   * @param sigHashType is the hash type of the transaction to sign, or default (all)\n   * @param segwit is an optional boolean indicating wether to use segwit or not. This includes wrapped segwit.\n   * @param initialTimestamp is an optional timestamp of the function call to use for coins that necessitate timestamps only, (not the one that the tx will include)\n   * @param additionals list of additionnal options\n   *\n   * - \"bech32\" for spending native segwit outputs\n   * - \"bech32m\" for spending segwit v1+ outputs\n   * - \"abc\" for bch\n   * - \"gold\" for btg\n   * - \"bipxxx\" for using BIPxxx\n   * - \"sapling\" to indicate a zec transaction is supporting sapling (to be set over block 419200)\n   * @param expiryHeight is an optional Buffer for zec overwinter / sapling Txs\n   * @param useTrustedInputForSegwit trust inputs for segwit transactions. If app version >= 1.4.0 this should be true.\n   * @return the signed transaction ready to be broadcast\n   * @example\n  btc.createTransaction({\n   inputs: [ [tx1, 1] ],\n   associatedKeysets: [\"0'/0/0\"],\n   outputScriptHex: \"01905f0100000000001976a91472a5d75c8d2d0565b656a5232703b167d50d5a2b88ac\"\n  }).then(res => ...);\n   */\n  createPaymentTransaction(arg: CreateTransactionArg): Promise<string> {\n    if (arguments.length > 1) {\n      throw new Error(\n        \"@ledgerhq/hw-app-btc: createPaymentTransaction multi argument signature is deprecated. please switch to named parameters.\",\n      );\n    }\n    return this.changeImplIfNecessary().then(impl => {\n      return impl.createPaymentTransaction(arg);\n    });\n  }\n\n  /**\n   * To obtain the signature of multisignature (P2SH) inputs, call signP2SHTransaction_async with the folowing parameters\n   * @param inputs is an array of [ transaction, output_index, redeem script, optional sequence ] where\n   * * transaction is the previously computed transaction object for this UTXO\n   * * output_index is the output in the transaction used as input for this UTXO (counting from 0)\n   * * redeem script is the mandatory redeem script associated to the current P2SH input\n   * * sequence is the sequence number to use for this input (when using RBF), or non present\n   * @param associatedKeysets is an array of BIP 32 paths pointing to the path to the private key used for each UTXO\n   * @param outputScriptHex is the hexadecimal serialized outputs of the transaction to sign\n   * @param lockTime is the optional lockTime of the transaction to sign, or default (0)\n   * @param sigHashType is the hash type of the transaction to sign, or default (all)\n   * @return the signed transaction ready to be broadcast\n   * @example\n  btc.signP2SHTransaction({\n  inputs: [ [tx, 1, \"52210289b4a3ad52a919abd2bdd6920d8a6879b1e788c38aa76f0440a6f32a9f1996d02103a3393b1439d1693b063482c04bd40142db97bdf139eedd1b51ffb7070a37eac321030b9a409a1e476b0d5d17b804fcdb81cf30f9b99c6f3ae1178206e08bc500639853ae\"] ],\n  associatedKeysets: [\"0'/0/0\"],\n  outputScriptHex: \"01905f0100000000001976a91472a5d75c8d2d0565b656a5232703b167d50d5a2b88ac\"\n  }).then(result => ...);\n   */\n  signP2SHTransaction(arg: SignP2SHTransactionArg): Promise<string[]> {\n    return signP2SHTransaction(this._transport, arg);\n  }\n\n  /**\n   * For each UTXO included in your transaction, create a transaction object from the raw serialized version of the transaction used in this UTXO.\n   * @example\n  const tx1 = btc.splitTransaction(\"01000000014ea60aeac5252c14291d428915bd7ccd1bfc4af009f4d4dc57ae597ed0420b71010000008a47304402201f36a12c240dbf9e566bc04321050b1984cd6eaf6caee8f02bb0bfec08e3354b022012ee2aeadcbbfd1e92959f57c15c1c6debb757b798451b104665aa3010569b49014104090b15bde569386734abf2a2b99f9ca6a50656627e77de663ca7325702769986cf26cc9dd7fdea0af432c8e2becc867c932e1b9dd742f2a108997c2252e2bdebffffffff0281b72e00000000001976a91472a5d75c8d2d0565b656a5232703b167d50d5a2b88aca0860100000000001976a9144533f5fb9b4817f713c48f0bfe96b9f50c476c9b88ac00000000\");\n   */\n  splitTransaction(\n    transactionHex: string,\n    isSegwitSupported: boolean | null | undefined = false,\n    hasTimestamp = false,\n    hasExtraData = false,\n    additionals: Array<string> = [],\n  ): Transaction {\n    return splitTransaction(\n      transactionHex,\n      isSegwitSupported,\n      hasTimestamp,\n      hasExtraData,\n      additionals,\n    );\n  }\n\n  /**\n  @example\n  const tx1 = btc.splitTransaction(\"01000000014ea60aeac5252c14291d428915bd7ccd1bfc4af009f4d4dc57ae597ed0420b71010000008a47304402201f36a12c240dbf9e566bc04321050b1984cd6eaf6caee8f02bb0bfec08e3354b022012ee2aeadcbbfd1e92959f57c15c1c6debb757b798451b104665aa3010569b49014104090b15bde569386734abf2a2b99f9ca6a50656627e77de663ca7325702769986cf26cc9dd7fdea0af432c8e2becc867c932e1b9dd742f2a108997c2252e2bdebffffffff0281b72e00000000001976a91472a5d75c8d2d0565b656a5232703b167d50d5a2b88aca0860100000000001976a9144533f5fb9b4817f713c48f0bfe96b9f50c476c9b88ac00000000\");\n  const outputScript = btc.serializeTransactionOutputs(tx1).toString('hex');\n  */\n  serializeTransactionOutputs(t: Transaction): Buffer {\n    return serializeTransactionOutputs(t);\n  }\n\n  getTrustedInput(\n    indexLookup: number,\n    transaction: Transaction,\n    additionals: Array<string> = [],\n  ): Promise<string> {\n    return getTrustedInput(this._transport, indexLookup, transaction, additionals);\n  }\n\n  getTrustedInputBIP143(\n    indexLookup: number,\n    transaction: Transaction,\n    additionals: Array<string> = [],\n  ): string {\n    return getTrustedInputBIP143(this._transport, indexLookup, transaction, additionals);\n  }\n\n  async changeImplIfNecessary(): Promise<BtcOld | BtcNew> {\n    // if BtcOld was instantiated, stick with it\n    if (this._impl instanceof BtcOld) return this._impl;\n\n    const appAndVersion = await getAppAndVersion(this._transport);\n    let isBtcLegacy = true; // default for all altcoins\n\n    if (appAndVersion.name === \"Bitcoin\" || appAndVersion.name === \"Bitcoin Test\") {\n      const [major, minor] = appAndVersion.version.split(\".\");\n      // we use the legacy protocol for versions below 2.1.0 of the Bitcoin app.\n      isBtcLegacy = parseInt(major) <= 1 || (parseInt(major) == 2 && parseInt(minor) == 0);\n    } else if (\n      appAndVersion.name === \"Bitcoin Legacy\" ||\n      appAndVersion.name === \"Bitcoin Test Legacy\"\n    ) {\n      // the \"Bitcoin Legacy\" and \"Bitcoin Testnet Legacy\" app use the legacy protocol, regardless of the version\n      isBtcLegacy = true;\n    } else if (appAndVersion.name === \"Exchange\") {\n      // We can't query the version of the Bitcoin app if we're coming from Exchange;\n      // therefore, we use a workaround to distinguish legacy and new versions.\n      // This can be removed once Ledger Live enforces minimum bitcoin version >= 2.1.0.\n      isBtcLegacy = await checkIsBtcLegacy(this._transport);\n    }\n\n    if (isBtcLegacy) {\n      this._impl = new BtcOld(this._transport);\n    }\n    return this._impl;\n  }\n}\n"],"names":["buffer","Buffer","crypto","pointAddScalar","createKey","pointCompress","__awaiter","invariant","shajs","MAX_LENGTH","MAX_SAFE_INTEGER","constants","debug","require$$0","require$$1","parseOptions","compareIdentifiers","identifiers","re","t","require$$2","require$$3","require$$4","semver","SemVer","parse","valid","clean","inc","compare","eq","diff","major","minor","patch","prerelease","rcompare","compareLoose","compareBuild","sort","rsort","gt","lt","neq","gte","lte","require$$5","cmp","coerce","Range","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","Comparator","ANY","require$$6","require$$7","outside","gtr","ltr","intersects","subset","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","require$$39","require$$40"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78]}