{"version":3,"file":"lazy-chunk-withStaticURLs.es.js","sources":["source-mapped://source-mapped/src/lib/axios-shim.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-transport-http/src/HttpTransport.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-transport-http/src/WebSocketTransport.ts","source-mapped://source-mapped/node_modules/@ledgerhq/hw-transport-http/src/withStaticURLs.ts"],"sourcesContent":["// For avoiding bundling the unnecessary axios dependency in @ledgerhq/hw-transport-http, we use fetch instead and\n// shim the required api parts of axios.\n\nexport default function axiosShim({\n    url,\n    method,\n    headers,\n    data,\n}: {\n    url: string,\n    method?: 'POST' | 'GET',\n    headers?: { [header: string]: string },\n    data?: string,\n}): Promise<Response> {\n    return fetch(url, {\n        method,\n        headers,\n        body: data,\n    });\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport { TransportError } from \"@ledgerhq/errors\";\nimport axios from \"axios\";\nimport { log } from \"@ledgerhq/logs\";\n/**\n * HTTP transport implementation\n */\n\nexport default class HttpTransport extends Transport {\n  static isSupported = (): Promise<boolean> => Promise.resolve(typeof fetch === \"function\");\n  // this transport is not discoverable\n  static list = (): any => Promise.resolve([]);\n  static listen = (_observer: any) => ({\n    unsubscribe: () => {},\n  });\n  static check = async (url: string, timeout = 5000) => {\n    const response = await axios({\n      url,\n      timeout,\n    });\n\n    if (response.status !== 200) {\n      throw new TransportError(\n        \"failed to access HttpTransport(\" + url + \"): status \" + response.status,\n        \"HttpTransportNotAccessible\",\n      );\n    }\n  };\n\n  static async open(url: string, timeout?: number): Promise<Transport> {\n    await HttpTransport.check(url, timeout);\n    return new HttpTransport(url);\n  }\n\n  url: string;\n\n  constructor(url: string) {\n    super();\n    this.url = url;\n  }\n\n  async exchange(apdu: Buffer): Promise<Buffer> {\n    const apduHex = apdu.toString(\"hex\");\n    log(\"apdu\", \"=> \" + apduHex);\n    const response = await axios({\n      method: \"POST\",\n      url: this.url,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: JSON.stringify({\n        apduHex,\n      }),\n    });\n\n    if (response.status !== 200) {\n      throw new TransportError(\n        \"failed to communicate to server. code=\" + response.status,\n        \"HttpTransportStatus\" + response.status,\n      );\n    }\n\n    const body: any = await response.data;\n    if (body.error) throw body.error;\n    log(\"apdu\", \"<= \" + body.data);\n    return Buffer.from(body.data, \"hex\");\n  }\n\n  setScrambleKey() {}\n\n  close(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport { TransportError } from \"@ledgerhq/errors\";\nimport { log } from \"@ledgerhq/logs\";\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace NodeJS {\n    interface Global {\n      WebSocket?: WebSocket;\n    }\n  }\n}\n\nconst WebSocket = global.WebSocket || require(\"ws\");\n/**\n * WebSocket transport implementation\n */\n\nexport default class WebSocketTransport extends Transport {\n  static isSupported = (): Promise<boolean> => Promise.resolve(typeof WebSocket === \"function\");\n  // this transport is not discoverable\n  static list = (): any => Promise.resolve([]);\n  static listen = (_observer: any) => ({\n    unsubscribe: () => {},\n  });\n  static check = async (url: string, timeout = 5000) =>\n    new Promise((resolve, reject) => {\n      const socket = new WebSocket(url);\n      let success = false;\n      setTimeout(() => {\n        socket.close();\n      }, timeout);\n\n      socket.onopen = () => {\n        success = true;\n        socket.close();\n      };\n\n      socket.onclose = () => {\n        if (success) resolve(undefined);\n        else {\n          reject(\n            new TransportError(\n              \"failed to access WebSocketTransport(\" + url + \")\",\n              \"WebSocketTransportNotAccessible\",\n            ),\n          );\n        }\n      };\n\n      socket.onerror = () => {\n        reject(\n          new TransportError(\n            \"failed to access WebSocketTransport(\" + url + \"): error\",\n            \"WebSocketTransportNotAccessible\",\n          ),\n        );\n      };\n    });\n\n  static async open(url: string) {\n    const exchangeMethods = await new Promise((resolve, reject) => {\n      try {\n        const socket = new WebSocket(url);\n        const exchangeMethods = {\n          resolveExchange: (_b: Buffer) => {},\n          rejectExchange: (_e: any) => {},\n          onDisconnect: () => {},\n          close: () => socket.close(),\n          send: msg => socket.send(msg),\n        };\n\n        socket.onopen = () => {\n          socket.send(\"open\");\n        };\n\n        socket.onerror = e => {\n          exchangeMethods.onDisconnect();\n          reject(e);\n        };\n\n        socket.onclose = () => {\n          exchangeMethods.onDisconnect();\n          reject(new TransportError(\"OpenFailed\", \"OpenFailed\"));\n        };\n\n        socket.onmessage = e => {\n          if (typeof e.data !== \"string\") return;\n          const data = JSON.parse(e.data);\n\n          switch (data.type) {\n            case \"opened\":\n              return resolve(exchangeMethods);\n\n            case \"error\":\n              reject(new Error(data.error));\n              return exchangeMethods.rejectExchange(new TransportError(data.error, \"WSError\"));\n\n            case \"response\":\n              return exchangeMethods.resolveExchange(Buffer.from(data.data, \"hex\"));\n          }\n        };\n      } catch (e) {\n        reject(e);\n      }\n    });\n    return new WebSocketTransport(exchangeMethods);\n  }\n\n  hook: any;\n\n  constructor(hook: any) {\n    super();\n    this.hook = hook;\n\n    hook.onDisconnect = () => {\n      this.emit(\"disconnect\");\n      this.hook.rejectExchange(new TransportError(\"WebSocket disconnected\", \"WSDisconnect\"));\n    };\n  }\n\n  async exchange(apdu: Buffer): Promise<Buffer> {\n    const hex = apdu.toString(\"hex\");\n    log(\"apdu\", \"=> \" + hex);\n    const res: Buffer = await new Promise((resolve, reject) => {\n      this.hook.rejectExchange = (e: any) => reject(e);\n\n      this.hook.resolveExchange = (b: Buffer) => resolve(b);\n\n      this.hook.send(hex);\n    });\n    log(\"apdu\", \"<= \" + res.toString(\"hex\"));\n    return res;\n  }\n\n  setScrambleKey() {}\n\n  async close() {\n    this.hook.close();\n    return new Promise<void>(success => {\n      setTimeout(() => {\n        success(undefined);\n      }, 200);\n    });\n  }\n}\n","import HttpTransport from \"./HttpTransport\";\nimport WebSocketTransport from \"./WebSocketTransport\";\nimport Transport from \"@ledgerhq/hw-transport\";\nimport type { Observer, DescriptorEvent, Subscription } from \"@ledgerhq/hw-transport\";\n\nconst getTransport = url => (!url.startsWith(\"ws\") ? HttpTransport : WebSocketTransport);\n\ntype InS = string | string[];\ntype InP = Promise<InS> | InS;\ntype In = InP | (() => InP);\n\nconst inferURLs = async (urls: In): Promise<string[]> => {\n  const r = await (typeof urls === \"function\" ? urls() : urls);\n  return typeof r === \"string\" ? [r] : r;\n};\n\nexport default (urls: In): typeof Transport => {\n  class StaticTransport extends Transport {\n    static isSupported = HttpTransport.isSupported;\n    static list = (): Promise<string[]> =>\n      inferURLs(urls)\n        .then(urls =>\n          Promise.all(\n            urls.map(url =>\n              getTransport(url)\n                .check(url)\n                .then(() => [url])\n                .catch(() => []),\n            ),\n          ),\n        )\n        .then(arrs => arrs.reduce<string[]>((acc, a) => acc.concat(a), []));\n    static listen = (observer: Observer<DescriptorEvent<unknown>>): Subscription => {\n      let unsubscribed = false;\n      const seen = {};\n\n      function checkLoop() {\n        if (unsubscribed) return;\n        inferURLs(urls)\n          .then(urls =>\n            Promise.all(\n              urls.map(async url => {\n                if (unsubscribed) return;\n\n                try {\n                  await getTransport(url).check(url);\n                  if (unsubscribed) return;\n\n                  if (!seen[url]) {\n                    seen[url] = 1;\n                    observer.next({\n                      type: \"add\",\n                      descriptor: url,\n                    });\n                  }\n                } catch (e) {\n                  // nothing\n                  if (seen[url]) {\n                    delete seen[url];\n                    observer.next({\n                      type: \"remove\",\n                      descriptor: url,\n                    });\n                  }\n                }\n              }),\n            ),\n          )\n          .then(() => new Promise(success => setTimeout(success, 5000)))\n          .then(checkLoop);\n      }\n\n      checkLoop();\n      return {\n        unsubscribe: () => {\n          unsubscribed = true;\n        },\n      };\n    };\n    static open = url => getTransport(url).open(url);\n  }\n\n  return StaticTransport;\n};\n"],"names":["axios","Buffer","__awaiter","HttpTransport"],"mappings":"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","x_google_ignoreList":[1,2,3]}