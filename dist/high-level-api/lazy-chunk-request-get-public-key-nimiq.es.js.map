{"version":3,"file":"lazy-chunk-request-get-public-key-nimiq.es.js","sources":["source-mapped://source-mapped/src/high-level-api/requests/nimiq/request-get-public-key-nimiq.ts"],"sourcesContent":["import RequestWithKeyPathNimiq from './request-with-key-path-nimiq';\nimport { RequestTypeNimiq } from '../../constants';\nimport { NimiqVersion } from '../../../lib/constants';\nimport type { NimiqPrimitive } from '../../../lib/load-nimiq';\n\ntype Transport = import('@ledgerhq/hw-transport').default;\n\nexport default class RequestGetPublicKeyNimiq<Version extends NimiqVersion>\n    extends RequestWithKeyPathNimiq<Version, NimiqPrimitive<'PublicKey', Version>> {\n    public readonly type: RequestTypeNimiq.GET_PUBLIC_KEY;\n\n    constructor(nimiqVersion: Version, keyPath: string, expectedWalletId?: string) {\n        const type = RequestTypeNimiq.GET_PUBLIC_KEY;\n        super(nimiqVersion, keyPath, expectedWalletId, { type });\n        this.type = type;\n\n        // Preload Nimiq lib. Ledger Nimiq api is already preloaded by parent class. Ignore errors.\n        this._loadNimiq().catch(() => {});\n    }\n\n    public async call(transport: Transport): Promise<NimiqPrimitive<'PublicKey', Version>> {\n        const api = await this._getLowLevelApi(transport); // throws LOADING_DEPENDENCIES_FAILED on failure\n        const { publicKey } = await api.getPublicKey(\n            this.keyPath,\n            true, // validate\n            false, // display\n            this.nimiqVersion,\n        );\n\n        const Nimiq = await this._loadNimiq(); // throws LOADING_DEPENDENCIES_FAILED on failure\n\n        return new Nimiq.PublicKey(publicKey) as NimiqPrimitive<'PublicKey', Version>;\n    }\n}\n"],"names":[],"mappings":";;;;;AAOqB,MAAA,wBACjB,SAAQ,uBAAsE,CAAA;AAC9D,IAAA,IAAI,CAAkC;AAEtD,IAAA,WAAA,CAAY,YAAqB,EAAE,OAAe,EAAE,gBAAyB,EAAA;AACzE,QAAA,MAAM,IAAI,GAAG,gBAAgB,CAAC,cAAc,CAAC;QAC7C,KAAK,CAAC,YAAY,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;AACzD,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;QAGjB,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,MAAK,GAAG,CAAC,CAAC;KACrC;IAEM,MAAM,IAAI,CAAC,SAAoB,EAAA;QAClC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;AAClD,QAAA,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,GAAG,CAAC,YAAY,CACxC,IAAI,CAAC,OAAO,EACZ,IAAI;AACJ,QAAA,KAAK;QACL,IAAI,CAAC,YAAY,CACpB,CAAC;QAEF,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;AAEtC,QAAA,OAAO,IAAI,KAAK,CAAC,SAAS,CAAC,SAAS,CAAyC,CAAC;KACjF;AACJ;;;;"}