{"version":3,"file":"lazy-chunk-request.es.js","sources":["source-mapped://source-mapped/src/low-level-api/get-app-name-and-version.ts","source-mapped://source-mapped/src/high-level-api/requests/request.ts"],"sourcesContent":["type Transport = import('@ledgerhq/hw-transport').default;\n\n// Also see developers.ledger.com/docs/transport/open-close-info-on-apps/, github.com/LedgerHQ/ledgerjs/issues/365 and\n// github.com/LedgerHQ/ledger-secure-sdk/blob/master/src/os_io_seproxyhal.c for other interesting requests.\n\nexport default async function getAppNameAndVersion(transport: Transport, scrambleKey: string, withApiLock = true)\n    : Promise<{ name: string, version: string }> {\n    // Taken from @ledgerhq/hw-app-btc/getAppAndVersion.js. We don't import it directly from there to avoid loading its\n    // unnecessary dependencies. Note that this request is common to all apps and the dashboard and is no Bitcoin app\n    // specific request (it's not on https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/bitcoin.md but in the\n    // Ledger SDKs, see https://github.com/LedgerHQ/ledger-secure-sdk/blob/master/src/os_io_seproxyhal.c. Also mind the\n    // different cla). However, for u2f and WebAuthn the used scramble key must match the one of the connected app for\n    // the Ledger to answer the request. Therefore, set the scrambleKey manually to make it compatible with all apps,\n    // not only the Nimiq app.\n    let getAppNameAndVersionHandler = async () => {\n        // Note that no u2f heartbeat is required here as the call is not interactive but answers directly.\n        const response = await transport.send(0xb0, 0x01, 0x00, 0x00);\n        const status = response.slice(response.length - 2).readUInt16BE(0);\n        if (status !== 0x9000) throw new Error('getAppNameAndVersion failed'); // should not actually happen\n        let offset = 0;\n        const format = response[offset++];\n        if (format !== 1) throw new Error('Unsupported format');\n        const nameLength = response[offset++];\n        const name = response.slice(offset, (offset += nameLength)).toString('ascii');\n        const versionLength = response[offset++];\n        const version = response.slice(offset, (offset += versionLength)).toString('ascii');\n        return { name, version };\n    };\n    // Set the scramble key and enable the api lock (for ledger busy errors) if requested. Note that the lock is a\n    // property of the transport, not the handler, thus work correctly across multiple independently decorated\n    // getAppNameAndVersionHandler and other decorated methods. Also, other decorated methods always overwrite the\n    // scramble key to their required key on each invocation, such that setting it here won't affect other api calls.\n    if (withApiLock) {\n        // Decorating the api method does not modify the transport instance, therefore decorating on each invocation of\n        // getAppNameAndVersion does no harm.\n        getAppNameAndVersionHandler = transport.decorateAppAPIMethod(\n            'getAppNameAndVersionHandler',\n            getAppNameAndVersionHandler,\n            undefined,\n            scrambleKey,\n        );\n    } else {\n        // Setting the scramble key manually does no harm, as any decorated api method will overwrite it again.\n        transport.setScrambleKey(scrambleKey);\n    }\n    return getAppNameAndVersionHandler();\n}\n","import { Coin, RequestTypeNimiq, RequestTypeBitcoin, REQUEST_EVENT_CANCEL } from '../constants';\nimport { isAppSupported, isAppVersionSupported, isLegacyApp } from '../app-utils';\nimport getAppNameAndVersion from '../../low-level-api/get-app-name-and-version';\nimport ErrorState, { ErrorType } from '../error-state';\nimport Observable, { EventListener } from '../../lib/observable';\n\ntype Transport = import('@ledgerhq/hw-transport').default;\ntype RequestType = RequestTypeNimiq | RequestTypeBitcoin;\n\nexport interface CoinAppConnection {\n    coin: Coin;\n    app: string;\n    appVersion: string;\n    walletId?: string;\n}\n\nexport default abstract class Request<T> extends Observable {\n    public static readonly EVENT_CANCEL = REQUEST_EVENT_CANCEL;\n\n    // Abstract properties here are constants specific for a request type or coin. They are not passed as constructor\n    // parameters but set by child class as properties to be usable as typescript type guards for inferring a request's\n    // type. Enables accessing request specific properties after a type guard, for example accessing expectedAddress in\n    // `if (request.type === RequestTypeNimiq.GET_ADDRESS) console.log(request.expectedAddress);`\n    public abstract readonly coin: Coin;\n    public abstract readonly type: RequestType;\n    public abstract readonly requiredApp: string;\n    public abstract readonly minRequiredAppVersion: string;\n    public readonly expectedWalletId?: string;\n\n    protected _coinAppConnection: CoinAppConnection | null = null;\n    private _cancelled: boolean = false;\n\n    protected constructor(expectedWalletId?: string) {\n        super();\n        this.expectedWalletId = expectedWalletId;\n    }\n\n    public get cancelled(): boolean {\n        return this._cancelled;\n    }\n\n    public get allowLegacyApp(): boolean {\n        return isLegacyApp(this.requiredApp);\n    }\n\n    public abstract call(transport: Transport): Promise<T>;\n\n    public canReuseCoinAppConnection(coinAppConnection: CoinAppConnection): boolean {\n        this._coinAppConnection = coinAppConnection;\n        return coinAppConnection.coin === this.coin\n            // Do not allow name 'app' for speculos here, as we wouldn't be able then to detect a speculos app switch.\n            && isAppSupported(coinAppConnection.app, this.requiredApp, this.allowLegacyApp, false)\n            && isAppVersionSupported(coinAppConnection.appVersion, this.minRequiredAppVersion)\n            && (!this.expectedWalletId || coinAppConnection.walletId === this.expectedWalletId);\n    }\n\n    public cancel(): void {\n        if (this._cancelled) return;\n        this._cancelled = true;\n        this.fire(Request.EVENT_CANCEL);\n    }\n\n    public on(type: string, callback: EventListener): void {\n        if (type === Request.EVENT_CANCEL && this._cancelled) {\n            // trigger callback directly\n            callback();\n        }\n        super.on(type, callback);\n    }\n\n    protected async checkCoinAppConnection(transport: Transport, scrambleKey: string): Promise<CoinAppConnection> {\n        const { name: app, version: appVersion } = await getAppNameAndVersion(transport, scrambleKey);\n        this._coinAppConnection = { coin: this.coin, app, appVersion };\n        if (!isAppSupported(app, this.requiredApp, this.allowLegacyApp, /* allowSpeculos */ true)) {\n            throw new ErrorState(\n                ErrorType.WRONG_APP,\n                `Wrong app connected: ${app}, required: ${this.requiredApp}`,\n                this,\n            );\n        }\n        if (!isAppVersionSupported(appVersion, this.minRequiredAppVersion)) {\n            throw new ErrorState(\n                ErrorType.APP_OUTDATED,\n                `Ledger ${app} app is outdated: ${appVersion}, required: ${this.minRequiredAppVersion}`,\n                this,\n            );\n        }\n\n        // Child classes overwriting checkCoinAppConnection have to apply changes to the same object returned here or\n        // overwrite _coinAppConnection to apply the changes to _coinAppConnection, too.\n        return this._coinAppConnection;\n    }\n\n    protected get _isWalletIdDerivationRequired() {\n        return !!this.expectedWalletId;\n    }\n\n    protected _checkExpectedWalletId(walletId: string): void {\n        if (this.expectedWalletId === undefined || this.expectedWalletId === walletId) return;\n        throw new ErrorState(ErrorType.WRONG_WALLET, 'Wrong wallet or Ledger connected', this);\n    }\n}\n"],"names":[],"mappings":"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"}